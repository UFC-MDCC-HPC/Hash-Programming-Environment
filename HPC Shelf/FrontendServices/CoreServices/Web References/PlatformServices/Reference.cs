// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace CoreCacheServices.PlatformServices {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="PlatformServicesSoap", Namespace="http://tempuri.org/")]
    public partial class PlatformServices : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getNumberOfNodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBaseBindingPortOperationCompleted;
        
        private System.Threading.SendOrPostCallback deployOperationCompleted;
        
        private System.Threading.SendOrPostCallback setPlatformRefOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPlatformRefOperationCompleted;
        
        private System.Threading.SendOrPostCallback instantiateOperationCompleted;
        
        private System.Threading.SendOrPostCallback getStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback runOperationCompleted;
        
        /// CodeRemarks
        public PlatformServices() {
            this.Url = "http://127.0.0.1:8082/PlatformServices.asmx";
        }
        
        public PlatformServices(string url) {
            this.Url = url;
        }
        
        /// CodeRemarks
        public event getNumberOfNodesCompletedEventHandler getNumberOfNodesCompleted;
        
        /// CodeRemarks
        public event getBaseBindingPortCompletedEventHandler getBaseBindingPortCompleted;
        
        /// CodeRemarks
        public event deployCompletedEventHandler deployCompleted;
        
        /// CodeRemarks
        public event setPlatformRefCompletedEventHandler setPlatformRefCompleted;
        
        /// CodeRemarks
        public event getPlatformRefCompletedEventHandler getPlatformRefCompleted;
        
        /// CodeRemarks
        public event instantiateCompletedEventHandler instantiateCompleted;
        
        /// CodeRemarks
        public event getStatusCompletedEventHandler getStatusCompleted;
        
        /// CodeRemarks
        public event runCompletedEventHandler runCompleted;
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getNumberOfNodes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int getNumberOfNodes() {
            object[] results = this.Invoke("getNumberOfNodes", new object[0]);
            return ((int)(results[0]));
        }
        
        /// CodeRemarks
        public void getNumberOfNodesAsync() {
            this.getNumberOfNodesAsync(null);
        }
        
        /// CodeRemarks
        public void getNumberOfNodesAsync(object userState) {
            if ((this.getNumberOfNodesOperationCompleted == null)) {
                this.getNumberOfNodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNumberOfNodesOperationCompleted);
            }
            this.InvokeAsync("getNumberOfNodes", new object[0], this.getNumberOfNodesOperationCompleted, userState);
        }
        
        private void OngetNumberOfNodesOperationCompleted(object arg) {
            if ((this.getNumberOfNodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNumberOfNodesCompleted(this, new getNumberOfNodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getBaseBindingPort", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int getBaseBindingPort() {
            object[] results = this.Invoke("getBaseBindingPort", new object[0]);
            return ((int)(results[0]));
        }
        
        /// CodeRemarks
        public void getBaseBindingPortAsync() {
            this.getBaseBindingPortAsync(null);
        }
        
        /// CodeRemarks
        public void getBaseBindingPortAsync(object userState) {
            if ((this.getBaseBindingPortOperationCompleted == null)) {
                this.getBaseBindingPortOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBaseBindingPortOperationCompleted);
            }
            this.InvokeAsync("getBaseBindingPort", new object[0], this.getBaseBindingPortOperationCompleted, userState);
        }
        
        private void OngetBaseBindingPortOperationCompleted(object arg) {
            if ((this.getBaseBindingPortCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBaseBindingPortCompleted(this, new getBaseBindingPortCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deploy", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string deploy(string config_contents) {
            object[] results = this.Invoke("deploy", new object[] {
                        config_contents});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void deployAsync(string config_contents) {
            this.deployAsync(config_contents, null);
        }
        
        /// CodeRemarks
        public void deployAsync(string config_contents, object userState) {
            if ((this.deployOperationCompleted == null)) {
                this.deployOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeployOperationCompleted);
            }
            this.InvokeAsync("deploy", new object[] {
                        config_contents}, this.deployOperationCompleted, userState);
        }
        
        private void OndeployOperationCompleted(object arg) {
            if ((this.deployCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deployCompleted(this, new deployCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/setPlatformRef", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setPlatformRef(string arch_ref) {
            this.Invoke("setPlatformRef", new object[] {
                        arch_ref});
        }
        
        /// CodeRemarks
        public void setPlatformRefAsync(string arch_ref) {
            this.setPlatformRefAsync(arch_ref, null);
        }
        
        /// CodeRemarks
        public void setPlatformRefAsync(string arch_ref, object userState) {
            if ((this.setPlatformRefOperationCompleted == null)) {
                this.setPlatformRefOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetPlatformRefOperationCompleted);
            }
            this.InvokeAsync("setPlatformRef", new object[] {
                        arch_ref}, this.setPlatformRefOperationCompleted, userState);
        }
        
        private void OnsetPlatformRefOperationCompleted(object arg) {
            if ((this.setPlatformRefCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setPlatformRefCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getPlatformRef", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getPlatformRef() {
            object[] results = this.Invoke("getPlatformRef", new object[0]);
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void getPlatformRefAsync() {
            this.getPlatformRefAsync(null);
        }
        
        /// CodeRemarks
        public void getPlatformRefAsync(object userState) {
            if ((this.getPlatformRefOperationCompleted == null)) {
                this.getPlatformRefOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPlatformRefOperationCompleted);
            }
            this.InvokeAsync("getPlatformRef", new object[0], this.getPlatformRefOperationCompleted, userState);
        }
        
        private void OngetPlatformRefOperationCompleted(object arg) {
            if ((this.getPlatformRefCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPlatformRefCompleted(this, new getPlatformRefCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/instantiate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string instantiate(string app_name, string component_ref, int facet_instance, int[] facet, string[] facet_address, int[] nodes) {
            object[] results = this.Invoke("instantiate", new object[] {
                        app_name,
                        component_ref,
                        facet_instance,
                        facet,
                        facet_address,
                        nodes});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void instantiateAsync(string app_name, string component_ref, int facet_instance, int[] facet, string[] facet_address, int[] nodes) {
            this.instantiateAsync(app_name, component_ref, facet_instance, facet, facet_address, nodes, null);
        }
        
        /// CodeRemarks
        public void instantiateAsync(string app_name, string component_ref, int facet_instance, int[] facet, string[] facet_address, int[] nodes, object userState) {
            if ((this.instantiateOperationCompleted == null)) {
                this.instantiateOperationCompleted = new System.Threading.SendOrPostCallback(this.OninstantiateOperationCompleted);
            }
            this.InvokeAsync("instantiate", new object[] {
                        app_name,
                        component_ref,
                        facet_instance,
                        facet,
                        facet_address,
                        nodes}, this.instantiateOperationCompleted, userState);
        }
        
        private void OninstantiateOperationCompleted(object arg) {
            if ((this.instantiateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.instantiateCompleted(this, new instantiateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getStatus() {
            object[] results = this.Invoke("getStatus", new object[0]);
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void getStatusAsync() {
            this.getStatusAsync(null);
        }
        
        /// CodeRemarks
        public void getStatusAsync(object userState) {
            if ((this.getStatusOperationCompleted == null)) {
                this.getStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetStatusOperationCompleted);
            }
            this.InvokeAsync("getStatus", new object[0], this.getStatusOperationCompleted, userState);
        }
        
        private void OngetStatusOperationCompleted(object arg) {
            if ((this.getStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getStatusCompleted(this, new getStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/run", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void run(string component_ref) {
            this.Invoke("run", new object[] {
                        component_ref});
        }
        
        /// CodeRemarks
        public void runAsync(string component_ref) {
            this.runAsync(component_ref, null);
        }
        
        /// CodeRemarks
        public void runAsync(string component_ref, object userState) {
            if ((this.runOperationCompleted == null)) {
                this.runOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrunOperationCompleted);
            }
            this.InvokeAsync("run", new object[] {
                        component_ref}, this.runOperationCompleted, userState);
        }
        
        private void OnrunOperationCompleted(object arg) {
            if ((this.runCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.runCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    public delegate void getNumberOfNodesCompletedEventHandler(object sender, getNumberOfNodesCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNumberOfNodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNumberOfNodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    public delegate void getBaseBindingPortCompletedEventHandler(object sender, getBaseBindingPortCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBaseBindingPortCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBaseBindingPortCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    public delegate void deployCompletedEventHandler(object sender, deployCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deployCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deployCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    public delegate void setPlatformRefCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    public delegate void getPlatformRefCompletedEventHandler(object sender, getPlatformRefCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPlatformRefCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPlatformRefCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    public delegate void instantiateCompletedEventHandler(object sender, instantiateCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class instantiateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal instantiateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    public delegate void getStatusCompletedEventHandler(object sender, getStatusCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("MonoDevelop", "2.6.0.0")]
    public delegate void runCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}
