<?xml version="1.0" encoding="ASCII"?>
<component:component xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:component="http://www.example.org/HashComponent">
  <header hash_component_UID="00240000048000009400000006020000002400005253413100040000110000009fc024784ac02932f68b69f2626758196f555797f613687202d4b0615975b1b663293c20ef499b1fc55e62eab517533f1dbba9634b0c7e1ad3432d0c4f400c760a16134d453c1d907e47975814d2f5bdef6837e7985eaebc37097b334a5d22953d5072c5afdb1fa79e9881de31775bb9a3e43566b22d9f539dc3c108fa7782ab" isAbstract="true" kind="Facet" name="MatrixBuilding" packagePath="linearsystems.library.facet.SuperLU">
    <baseType>
      <extensionType>
        <extends>true</extends>
      </extensionType>
      <component hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000c7d2480a928182fdc559cfaceb04c06a4580bcf1927ba1fcff8bb1304487972fc71e7795a3bcf8bcede64ae2ec054073da40285664d78918efc5733d4e270c44cc46c69c89338853bd9a507166d0526cc48f699c3e9e484b2e7e80c45dae8459f6272d49de852411b2e534f62d22ed68c4e83a3aade31bf74825abfdb15022b8" localRef="base" location="linearsystems.library.facet.MatrixBuilding/MatrixBuilding.hpe" name="MatrixBuilding" package="linearsystems.library.facet" version="1.0.0.0">
        <visualDescription h="64" w="199" x="56" y="247">
          <color b="255" g="255" r="255"/>
        </visualDescription>
        <parameter formFieldId="library" varName="L"/>
        <unitBounds uRef="matrixbuilding_facet">
          <visualDescription h="10" w="10" x="38" y="40"/>
        </unitBounds>
      </component>
    </baseType>
    <versions field1="1" field2="0" field3="0" field4="0"/>
    <visualAttributes>
      <color b="255" g="255" r="255"/>
    </visualAttributes>
  </header>
  <componentInfo>
    <innerComponent hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000b3657883f7a334d79610d9c7fb3f41ea51b3d644352159d132c379c1a6e285688f32c3b40755bec6b6d4b3f072d71511664ced1be8f5e8ac287dbda794121075cca2402fd73f335bea37cbb6612fd23b23d3ee7990c6403c5721ee160d8bdbaaefd0bc0d38d75830381bf221ad40126cbe93768ee109477aac2b56d10ca97ab1" localRef="superlu_lib" location="linearsystems.qualifier.SuperLU/SuperLU.hpe" name="SuperLU" package="linearsystems.qualifier" parameter_id="library" exposed="false">
      <visualDescription h="44" w="128" x="131" y="365">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds uRef="superlu">
        <visualDescription h="10" w="10" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <supplyParameter cRef="superlu_lib" varName="L"/>
    <parameter componentRef="superlu_lib" formFieldId="library" varName="L"/>
    <interface iRef="ISuperLUMatrixBuilding" nArgs="1">
      <slice isRef="library_unit">
        <originRef cRef="library" iRef="ISuperLU"/>
        <visualDescription h="10" w="10" x="71" y="24"/>
      </slice>
      <sources sourceType="C# Language" versionId="1.0.0.0">
        <file contents="/* AUTOMATICALLY GENERATE CODE */&#xA;&#xA;using br.ufc.hpe.kinds;&#xA;using linearsystems.qualifier.SuperLU;&#xA;using linearsystems.library.facet.MatrixBuilding;&#xA;&#xA;namespace linearsystems.library.facet.SuperLU.MatrixBuilding { &#xA;&#xA;public interface BaseISuperLUMatrixBuilding&lt;L> : BaseIMatrixBuildingFacet&lt;L>, IFacetKind &#xA;where L:ISuperLU&#xA;{&#xA;&#xA;&#xA;&#xA;} // end main interface &#xA;&#xA;} // end namespace &#xA;" fileType="library" name="BaseISuperLUMatrixBuilding.cs" srcType="base" uri="linearsystems.library.facet.SuperLU.MatrixBuilding/bin/1.0.0.0/BaseISuperLUMatrixBuilding.dll" versionId="1.0.0.0">
          <dependency>linearsystems.qualifier.SuperLU/bin/1.0.0.0/ISuperLU.dll</dependency>
          <dependency>linearsystems.library.facet.MatrixBuilding/bin/1.0.0.0/BaseIMatrixBuildingFacet.dll</dependency>
        </file>
        <file contents="using br.ufc.hpe.kinds;&#xA;using linearsystems.qualifier.SuperLU;&#xA;using linearsystems.library.facet.MatrixBuilding;&#xA;using System.Runtime.InteropServices;&#xA;&#xA;&#xA;&#xA;namespace linearsystems.library.facet.SuperLU.MatrixBuilding { &#xA;&#xA;&#x9;public enum Stype_t{&#xA;&#x9;&#x9;SLU_NC,    &#xA;&#x9;&#x9;SLU_NCP,   &#xA;&#x9;&#x9;SLU_NR,    &#xA;&#x9;&#x9;SLU_SC,    /* column-wise, supernode */&#xA;&#x9;&#x9;SLU_SCP,   /* supernode, column-wise, permuted */    &#xA;&#x9;&#x9;SLU_SR,    /* row-wise, supernode */&#xA;&#x9;&#x9;SLU_DN,     /* Fortran style column-wise storage for dense matrix */&#xA;&#x9;&#x9;SLU_NR_loc  /* distributed compressed row format  */ &#xA;&#x9;};&#xA;&#xA;&#xA;&#x9;public enum  Dtype_t{&#xA;&#x9;&#x9;SLU_S,     /* single */&#xA;&#x9;&#x9;SLU_D,     /* double */&#xA;&#x9;&#x9;SLU_C,     /* single complex */&#xA;&#x9;&#x9;SLU_Z      /* double complex */&#xA;&#x9;};&#xA;&#x9;&#x9;&#xA;   public enum  Mtype_t{&#xA;&#x9;&#x9;SLU_GE,    /* general */&#xA;&#x9;&#x9;SLU_TRLU,  /* lower triangular, unit diagonal */&#xA;&#x9;&#x9;SLU_TRUU,  /* upper triangular, unit diagonal */&#xA;&#x9;&#x9;SLU_TRL,   /* lower triangular */&#xA;&#x9;&#x9;SLU_TRU,   /* upper triangular */&#xA;&#x9;&#x9;SLU_SYL,   /* symmetric, store lower half */&#xA;&#x9;&#x9;SLU_SYU,   /* symmetric, store upper half */&#xA;&#x9;&#x9;SLU_HEL,   /* Hermitian, store lower half */&#xA;&#x9;&#x9;SLU_HEU    /* Hermitian, store upper half */&#xA;&#x9;};&#xA;&#xA;&#xA;   [StructLayout(LayoutKind.Sequential)]&#xA;   public class SuperMatrix{&#xA;       public Stype_t Stype;&#xA;       public Dtype_t Dtype;&#xA;       public Mtype_t Mtype;&#xA;&#x9;   public int nrow;&#xA;&#x9;   public int ncol;&#xA;&#x9;   public unsafe void* Store;&#xA;   }&#xA;&#xA;   [StructLayout(LayoutKind.Sequential)]&#xA;   public class NCformat{&#xA;      public int nnz;&#xA;      public unsafe void* nzval;    &#xA;      public unsafe int*   rowind; &#xA;      public unsafe int*   colptr;&#xA;   }&#xA;&#xA;   [StructLayout(LayoutKind.Sequential)]&#xA;   public class NRformat{&#xA;      public int nnz;&#x9;    &#xA;      public unsafe void*   nzval;    &#xA;      public unsafe int*   colind; &#xA;      public unsafe int*   rowptr;&#xA;   }&#xA;&#xA;   [StructLayout(LayoutKind.Sequential)]&#xA;   public class SCformat{&#xA;      public int  nnz;&#x9;     &#xA;      public int  nsuper;    &#xA;      public unsafe void* nzval;&#xA;      public unsafe int*   nzval_colptr;&#xA;      public unsafe  int*   rowind;      &#xA;      public unsafe  int*   rowind_colptr;&#xA;      public unsafe  int*   col_to_sup;&#xA;      public unsafe int*   sup_to_col;&#xA;      &#xA;   }&#xA;   &#xA;   [StructLayout(LayoutKind.Sequential)]&#xA;   public class SCPformat{&#xA;      public int  nnz;&#x9;     &#xA;      public int  nsuper;    &#xA;      public unsafe void* nzval;&#xA;      public unsafe int*   nzval_colbeg;&#xA;      public unsafe int*   nzval_colend;&#x9;&#x9;&#x9;  &#xA;      public unsafe int*   rowind;      &#x9;&#x9;&#x9;  &#xA;      public unsafe int* rowind_colbeg;&#x9;&#x9;&#x9;  &#xA;      public unsafe int*   rowind_colend;&#x9;&#x9;&#x9;  &#xA;      public unsafe int*   col_to_sup;   &#x9;&#x9;&#x9;  &#xA;      public unsafe int*   sup_to_colbeg;&#x9;&#x9;&#x9;   &#xA;      public unsafe int*   sup_to_colend; &#xA;   }&#xA;   &#xA;   [StructLayout(LayoutKind.Sequential)]&#xA;   public class NCPformat{&#xA;      public int nnz;&#x9; &#xA;      public unsafe void*   nzval;&#xA;      public unsafe int*   rowind;&#xA;      public unsafe int*   colbeg;                     &#xA;      public unsafe int*   colend;&#xA;   }&#xA;&#xA;   [StructLayout(LayoutKind.Sequential)]&#xA;   public class DNformat{&#xA;      public int lda;    /* leading dimension */&#xA;      public unsafe void*   nzval;&#xA;   }&#xA;&#xA;   [StructLayout(LayoutKind.Sequential)]&#xA;   public class NRformat_loc{&#xA;      public int nnz_loc;   &#xA;      public int m_loc;     &#xA;      public int fst_row;   &#xA;      public unsafe void*   nzval;    &#xA;      public unsafe int*   rowptr;   //HERE&#xA;      public unsafe int*   colind;&#xA;   }&#xA;&#xA;  &#xA; &#x9;&#xA;public interface ISuperLUMatrixBuilding&lt;L> : BaseISuperLUMatrixBuilding&lt;L>, IMatrixBuildingFacet&lt;L>&#xA;where L:ISuperLU&#xA;{&#xA;   unsafe void dCreate_CompRowLoc_Matrix_dist (SuperMatrix A, int m, int n, int nnz_loc, int m_loc,&#xA;&#x9;&#x9;&#x9;                                                             int fst_row, double* nzval1, int* colind1, int* rowptr1,&#xA;&#x9;&#x9;&#x9;                                                             Stype_t stype, Dtype_t dtype, Mtype_t mtype);&#xA;&#xA;} // end main interface &#xA;&#xA;} // end namespace &#xA;" fileType="library" name="ISuperLUMatrixBuilding.cs" srcType="user" uri="linearsystems.library.facet.SuperLU.MatrixBuilding/bin/1.0.0.0/ISuperLUMatrixBuilding.dll" versionId="1.0.0.0">
          <dependency>linearsystems.qualifier.SuperLU/bin/1.0.0.0/ISuperLU.dll</dependency>
          <dependency>%WORKSPACE/linearsystems.library.facet.SuperLU.MatrixBuilding/bin/1.0.0.0/BaseISuperLUMatrixBuilding.dll</dependency>
          <dependency>linearsystems.library.facet.MatrixBuilding/bin/1.0.0.0/IMatrixBuildingFacet.dll</dependency>
        </file>
      </sources>
      <visualDescription h="40" w="80" x="206" y="90">
        <color b="0" g="255" r="255"/>
      </visualDescription>
      <parameter iname="ISuperLU" order="0" parid="L" uname="superlu" varid="library"/>
    </interface>
    <unit iRef="ISuperLUMatrixBuilding" private="false" uRef="matrixbuilding_facet" visibleInterface="true">
      <super cRef="base" uRef="matrixbuilding_facet"/>
      <slices cRef="library" replica="0" uRef="superlu" sliceName="library_unit" transitive="false">
        <visualDescription h="10" w="10" x="71" y="24"/>
      </slices>
      <visualDescription h="40" w="80" x="291" y="158"/>
    </unit>
    <enumerator cardinality="-1" fromSplit="false" ref="N" varId="N">
      <originRef>base</originRef>
      <originRef>library</originRef>
      <links xsi:type="component:EnumerableUnitType" ref="matrixbuilding_facet"/>
      <visualDescription h="20" w="20" x="145" y="150"/>
    </enumerator>
  </componentInfo>
</component:component>