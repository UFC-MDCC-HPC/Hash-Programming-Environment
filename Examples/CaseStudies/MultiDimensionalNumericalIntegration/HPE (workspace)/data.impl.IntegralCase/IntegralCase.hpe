<?xml version="1.0" encoding="ASCII"?>
<component:component xmlns:component="http://www.example.org/HashComponent">
  <header hash_component_UID="00240000048000009400000006020000002400005253413100040000110000000150ccd58370af704b2eb5f8982bb78cc5a7372e6410b5403023e92329007113aa3445e171e48f8ec2cbd2799c4f730e51dea75dadeff0d5835166f62d280a9945a09a73ca631165e347b753a03875a3c9536dc327492f943a79af598b658223398e397d69e18f6a2ab703a07ff6c6a9c67610454dc17d21a0c1c535913ddfb3" isAbstract="false" kind="Data" name="IntegralCase" packagePath="data.impl">
    <baseType>
      <extensionType>
        <implements>true</implements>
      </extensionType>
      <component hash_component_UID="00240000048000009400000006020000002400005253413100040000110000006bb05122bacb885ebc06203e40d8b22d30db6ff98d5665b52320095c346c94e632c8caf9b07e9402a87229041a2510eb9fa0a96fcc7aef60d32c29e2b5053967fdef66748b3d0626b4d0c85aa007063e1c29c39f9b7c02e3f0f63ee1818b57aa61516041ca5a25b2b2a8d5856f8ea0f7a4545c50452c62cf33e75e07107d18b5" localRef="base" location="data.IntegralCase/IntegralCase.hpe" name="IntegralCase" package="data" version="1.0.0.0">
        <visualDescription h="51" w="89" x="250" y="210">
          <color b="255" g="255" r="255"/>
        </visualDescription>
        <parameter formFieldId="function" varName="F"/>
        <unitBounds uRef="integral_case">
          <visualDescription h="10" w="10" x="9" y="20"/>
        </unitBounds>
      </component>
    </baseType>
    <versions field1="1" field2="0" field3="0" field4="0"/>
    <visualAttributes>
      <color b="255" g="255" r="255"/>
    </visualAttributes>
  </header>
  <componentInfo>
    <innerComponent hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000e91e2e81b39c649bf0beb49b6e14afaa7ea3ed04de8f226b318b5b19b6aec79a88fe23700fd52933c049a1608974df11e1df938ed9e31865c251318d4e70a018fe4fabe09b170b4b0a71da19ecef1b5114ba0a35b259a70efce80273c1d3c156268b9ab5075787a8a829fa18656a959c2e053791a967bbd271d69522b908bf91" localRef="function" location="data.Function/Function.hpe" name="Function" package="data" exposed="false">
      <visualDescription h="30" w="50" x="184" y="304">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds uRef="function">
        <visualDescription h="10" w="10" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <supplyParameter cRef="function" varName="F"/>
    <interface iRef="IIntegralCaseImpl" nArgs="1">
      <slice isRef="function">
        <originRef cRef="function" iRef="IFunction"/>
        <visualDescription h="10" w="10" x="19" y="32"/>
      </slice>
      <slice isRef="xinf">
        <originRef cRef="a" iRef="IDouble"/>
        <visualDescription h="10" w="10" x="5" y="32"/>
      </slice>
      <slice isRef="xsup">
        <originRef cRef="b" iRef="IDouble"/>
        <visualDescription h="10" w="10" x="34" y="32"/>
      </slice>
      <sources sourceType="C# Language" versionId="1.0.0.0">
        <file contents="/* Automatically Generated Code */&#xA;&#xA;using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using jefferson.data.Double;&#xA;using data.Function;&#xA;using data.IntegralCase;&#xA;&#xA;namespace data.impl.IntegralCase { &#xA;&#xA;public abstract class BaseIIntegralCaseImpl&lt;F>: DataStructure, BaseIIntegralCase&lt;F>&#xA;where F:IFunction&#xA;{&#xA;&#xA;protected IDouble xinf = null;&#xA;&#xA;protected IDouble Xinf {&#xA;&#x9;set {&#xA;&#x9;&#x9;this.xinf = value;&#xA;&#x9;}&#xA;}&#xA;&#xA;protected IDouble xsup = null;&#xA;&#xA;protected IDouble Xsup {&#xA;&#x9;set {&#xA;&#x9;&#x9;this.xsup = value;&#xA;&#x9;}&#xA;}&#xA;&#xA;protected F function = default(F);&#xA;&#xA;protected F Function {&#xA;&#x9;set {&#xA;&#x9;&#x9;this.function = value;&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;public BaseIIntegralCaseImpl() { &#xA;&#xA;} &#xA;&#xA;public static string UID = &quot;00240000048000009400000006020000002400005253413100040000110000000150ccd58370af704b2eb5f8982bb78cc5a7372e6410b5403023e92329007113aa3445e171e48f8ec2cbd2799c4f730e51dea75dadeff0d5835166f62d280a9945a09a73ca631165e347b753a03875a3c9536dc327492f943a79af598b658223398e397d69e18f6a2ab703a07ff6c6a9c67610454dc17d21a0c1c535913ddfb3&quot;;&#xA;&#xA;override public void createSlices() {&#xA;&#x9;base.createSlices();&#xA;&#x9;this.Function = (F) BackEnd.createSlice(this, UID,&quot;function&quot;,&quot;function&quot;,new Type[] {});&#xA;&#x9;this.Xsup = (IDouble) BackEnd.createSlice(this, UID,&quot;b&quot;,&quot;double&quot;,new Type[] {});&#xA;&#x9;this.Xinf = (IDouble) BackEnd.createSlice(this, UID,&quot;a&quot;,&quot;double&quot;,new Type[] {});&#xA;} &#xA;&#xA;&#xA;}&#xA;&#xA;}&#xA;" fileType="library" name="BaseIIntegralCaseImpl.cs" srcType="base" uri="data.impl.IntegralCase/bin/1.0.0.0/BaseIIntegralCaseImpl.dll" versionId="1.0.0.0">
          <dependency>jefferson.data.Double/bin/1.0.0.0/IDouble.dll</dependency>
          <dependency>data.Function/bin/1.0.0.0/IFunction.dll</dependency>
          <dependency>data.IntegralCase/bin/1.0.0.0/BaseIIntegralCase.dll</dependency>
          <externalDependency>NINTLIB</externalDependency>
        </file>
        <file contents="using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using data.Function;&#xA;using data.IntegralCase;&#xA;&#xA;namespace data.impl.IntegralCase { &#xA;&#xA;public class IIntegralCaseImpl&lt;F> : BaseIIntegralCaseImpl&lt;F>, IIntegralCase&lt;F>&#xA;where F:IFunction&#xA;{       &#xA;&#x9;&#x9;public Object createNew() {&#xA;&#x9;&#x9;    IIntegralCaseImpl&lt;F> ic = new IIntegralCaseImpl&lt;F>();&#xA;&#x9;&#x9;    ic.a_ = a_;&#xA;&#x9;&#x9;    ic.b_ = b_;&#xA;&#x9;&#x9;    ic.function = function;&#x9;&#x9;    &#xA;&#x9;&#x9;    return ic;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;   private double[] a_ = null;&#xA;       private double[] b_ = null;&#xA;&#xA;       const int UNDEFINED = 0;&#xA;       &#xA;       private int dim_num_ = UNDEFINED;&#xA;       public int dim_num { &#xA;          get { return dim_num_; }&#xA;          set { &#xA;             dim_num_ = value;&#xA;             a_ = new double[dim_num_];&#xA;             b_ = new double[dim_num_];&#xA;             for (int i=0; i &lt; dim_num_; i ++) {&#xA;                a_[i] = 0.0D;&#xA;                b_[i] = 1.0D;&#xD;&#xA;             }              &#xA;          } &#xA;       }&#xA;       &#xA;       public double[] a {&#xA;          get { return a_; }       &#xA;       }&#xA;       &#xA;       public double[] b {&#xA;          get { return b_; }&#xD;&#xA;       }&#xA;&#xA;/*       public double[] a { &#xA;          get {&#xA;             if (a_ == null) {          &#xA;                if (dim_num > UNDEFINED) {&#x9;             &#xA;&#x9;               a_ = new double[dim_num];&#xA;&#x9;            } else &#xA;&#x9;            {&#xA;                   throw new Exception(&quot;dim_num undefined.&quot;);&#xA;                }          &#xA;             } &#xA;             return a_; &#xA;          } &#xA;       }&#xA;       public double[] b { &#xA;          get { &#xA;             if (b_ == null) {&#xA;                 if (dim_num > UNDEFINED) {&#xA;&#x9;                b_ = new double[dim_num];&#xD;&#xA;&#x9;             } else {&#xA;                    throw new Exception(&quot;dim_num undefined.&quot;);&#xA;                 }&#xA;             }&#xA;             return b_; &#xA;          } &#xA;       } */&#xA;       &#xA;        public new NINTLIB.IntegratingFunction Function { get { return f; } }&#xA;&#xA;        public double f(double[] x)&#xA;        {        &#xA;            return function.f(x);&#xA;        }&#xA;&#xA;        public IIntegralCaseImpl()&#xA;        {&#xA;           &#xA;        }&#xA;&#xA;&#xA;}&#xA;&#xA;}&#xA;" fileType="library" name="IIntegralCaseImpl.cs" srcType="user" uri="data.impl.IntegralCase/bin/1.0.0.0/IIntegralCaseImpl.dll" versionId="1.0.0.0">
          <dependency>data.Function/bin/1.0.0.0/IFunction.dll</dependency>
          <dependency>%WORKSPACE/data.impl.IntegralCase/bin/1.0.0.0/BaseIIntegralCaseImpl.dll</dependency>
          <dependency>data.IntegralCase/bin/1.0.0.0/IIntegralCase.dll</dependency>
          <externalDependency>NINTLIB</externalDependency>
        </file>
      </sources>
      <visualDescription h="43" w="108" x="47" y="145">
        <color b="0" g="255" r="255"/>
      </visualDescription>
      <externalReferences>NINTLIB</externalReferences>
      <parameter iname="IFunction" order="0" parid="F" uname="function" varid="function"/>
    </interface>
    <unit iRef="IIntegralCaseImpl" private="false" uRef="integral_case" visibleInterface="true">
      <super cRef="base" uRef="integral_case"/>
      <slices cRef="function" replica="0" uRef="function" sliceName="function" transitive="false">
        <visualDescription h="10" w="10" x="35" y="31"/>
      </slices>
      <slices cRef="a" replica="0" uRef="double" sliceName="xinf" transitive="false">
        <visualDescription h="10" w="10" x="8" y="6"/>
      </slices>
      <slices cRef="b" replica="0" uRef="double" sliceName="xsup" transitive="false">
        <visualDescription h="10" w="10" x="64" y="6"/>
      </slices>
      <visualDescription h="40" w="80" x="222" y="125"/>
    </unit>
  </componentInfo>
</component:component>