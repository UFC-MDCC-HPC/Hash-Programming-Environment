<?xml version="1.0" encoding="ASCII"?>
<component:component xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:component="http://www.example.org/HashComponent">
  <header hash_component_UID="00240000048000009400000006020000002400005253413100040000110000000790de755e64b83283887ff9f7c1b0ea6b4d9b3e82897a27e5535020d008b3d98828b6780ad6647bc7613d0f72369a1effc0c7b4a75c98991b4f3483b5247f35505188830e4d300cf7c298c1313cfa1523cc757275ae4fd89bad1f1b5cc682e895ee0db424c9cfd1a130e247787e4c131ca876140d4053e69770c96a086a6099" isAbstract="false" kind="Computation" name="BlockTriangularSolutionBlts" packagePath="impl.lu.ssor">
    <baseType>
      <extensionType>
        <implements>true</implements>
      </extensionType>
      <component hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000d592b1f15a841350c99f7515ae9891bcb902c2c7aa24785efa23ded21317c32513ebe119e1385396278ecb5dea5806fd57d8d37abb4048b42e4ba2f84ccfa193a3b96fef4c547ee7d349873b0623ecfe1cb0a9556768178bba4534fa97312350163773f027e3451510c8c8efc47a4a488074ac1f2eadadeeffb8909ce91ba2a8" localRef="base" location="lu.ssor.BlockTriangularSolution/BlockTriangularSolution.hpe" name="BlockTriangularSolution" package="lu.ssor" version="1.0.0.0">
        <visualDescription h="30" w="50" x="266" y="405">
          <color b="255" g="255" r="255"/>
        </visualDescription>
        <parameter formFieldId="instance_type" varName="I"/>
        <parameter formFieldId="class" varName="C"/>
        <parameter formFieldId="discretization" varName="DIS"/>
        <port hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000f3194c0a7b197fb560dfcad8ee5b421b78f1f03d002a081027a334aa25ebf3ca7669300c0fd23f8f1547226d2833753b8583e09a6b1fcc393107abb8e8670fb2d48b48ea486fa7f94cb968f2760707e531b14426dedc94542dfdf89efcdf612aeabb738a4b713e0a7a9b3ee97b95d783693b746ddcce119ba7c5080176270d8a" localRef="blocks_info" location="lu.datapartition.BlocksInfo/BlocksInfo.hpe" name="BlocksInfo" package="lu.datapartition" exposed="true">
          <visualDescription h="41" w="84" x="62" y="392">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <unitBounds uRef="blocks">
            <visualDescription h="10" w="10" x="71" y="18"/>
          </unitBounds>
        </port>
        <port hash_component_UID="00240000048000009400000006020000002400005253413100040000110000009f8aadd94be2122c6dbf97a8db4c368df4aa14e5eef40999c777e681c973106bec55b80c133f1e7301d0ff36e2ee37a1d7d095ffff4581f295b2e8fc055fc07304178d993e14731e9c3d1e72370eee41c30ae18e6d096d5d70ac13a2833e8945cd641f4a3cab17bc2397b395bc234fdfa244afa599eb514a94d884e663b3a3a5" localRef="problem_data" location="lu.data.ProblemDefinition/ProblemDefinition.hpe" name="ProblemDefinition" package="lu.data" exposed="true">
          <visualDescription h="54" w="132" x="360" y="388">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <parameter formFieldId="instance_type" varName="I"/>
          <parameter formFieldId="class" varName="C"/>
          <unitBounds uRef="problem">
            <visualDescription h="10" w="10" x="10" y="24"/>
          </unitBounds>
        </port>
        <port hash_component_UID="00240000048000009400000006020000002400005253413100040000110000009b5fdf9e2fd2e1d4c40d5d105e19369c7729126e13c1d35d7124531d9c4fa1a01ecb25564a9fc1e7175d98659a5280d86a339f77d53abc6eff4debf0c86ea2c480a3ffedb149923bba754c2bb0fb6117e2416acad5d23bebfe734b82b120e8ca3451465ce29e2c470da1b915836a5db31d0e17997a541c0f79ea1aed03990587" localRef="x" location="common.topology.Ring/Ring.hpe" name="Ring" package="common.topology" exposed="true">
          <visualDescription h="49" w="133" x="111" y="485">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <unitBounds uRef="cell">
            <visualDescription h="10" w="10" x="63" y="6"/>
          </unitBounds>
        </port>
        <port hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000059fdc60f0095a1142aef66ff82b5e8659158d29c9ae6eedd576a96e33ae1faaddaf78b57c8cab897deeb79b165ed011c3cd25deeeed69da38fc30a1143e39fa67ab658c278a82203de07eafa3dafe7704a84c1fffc42035b92d09563efdfe7b59862d01f598f626efa5cd4eef962fb18970112f8a530495c2a482922a19258b" localRef="mpi" location="environment.MPIDirect/MPIDirect.hpe" name="MPIDirect" package="environment" exposed="true">
          <visualDescription h="30" w="50" x="373" y="334">
            <color b="240" g="32" r="160"/>
          </visualDescription>
          <unitBounds uRef="mpi">
            <visualDescription h="10" w="10" x="5" y="2"/>
          </unitBounds>
        </port>
        <port hash_component_UID="00240000048000009400000006020000002400005253413100040000110000009b5fdf9e2fd2e1d4c40d5d105e19369c7729126e13c1d35d7124531d9c4fa1a01ecb25564a9fc1e7175d98659a5280d86a339f77d53abc6eff4debf0c86ea2c480a3ffedb149923bba754c2bb0fb6117e2416acad5d23bebfe734b82b120e8ca3451465ce29e2c470da1b915836a5db31d0e17997a541c0f79ea1aed03990587" localRef="y" location="common.topology.Ring/Ring.hpe" name="Ring" package="common.topology" exposed="true">
          <visualDescription h="49" w="133" x="450" y="395">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <unitBounds uRef="cell">
            <visualDescription h="10" w="10" x="63" y="6"/>
          </unitBounds>
        </port>
        <unitBounds uRef="block_triangular_solution">
          <visualDescription h="10" w="10" x="5" y="2"/>
        </unitBounds>
      </component>
    </baseType>
    <versions field1="1" field2="0" field3="0" field4="0"/>
    <visualAttributes>
      <color b="255" g="255" r="255"/>
    </visualAttributes>
  </header>
  <componentInfo>
    <innerComponent hash_component_UID="00240000048000009400000006020000002400005253413100040000110000004d9c75ae5f43eaaeb10762b3e7c65b336ea4790b679668da776b55e1821b1f59388b8ea2e5f25263fc4cebe208bc2cb79d9bcbbc6167a4bd4b552d03cca4ef35f734d0cbac01feb8e9a6d6296807fccc63cd003ba735a6445bb240120f051f046aa5787203f6fd7fd7b0cd0e18a980c63f35f8918343d6ea5563d8c3211f8ab1" localRef="instance_type" location="lu.problem_size.Instance_LU/Instance_LU.hpe" name="Instance_LU" package="lu.problem_size" exposed="false">
      <visualDescription h="38" w="112" x="80" y="129">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <parameter formFieldId="class" varName="C"/>
      <unitBounds uRef="instance">
        <visualDescription h="10" w="10" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000237f437b205f7bfa00c2d0b40167897c37f84c96a62c077e2832a5360fa8c1c7438dfa969d99bb36a48a7baefcbd50d84ae2e3e71a349dce24c2b0bc473997871be48fdb29d0d48b0928ca968440c6b6663c6740810dab7b664db0e0cfbfe5b21f223402d0d9bd601294898724b6a1da46e78261ef1ee37ac63ca9b2dbdc0d90" localRef="class" location="common.problem_size.Class/Class.hpe" name="Class" package="common.problem_size" exposed="false">
      <visualDescription h="30" w="50" x="312" y="100">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds uRef="class">
        <visualDescription h="10" w="10" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000c7a9e559057cfaba9f6af10e78a28dd44207a4f47320761e707598d1d2abb6f9406ffe9d716dc4999b57320639284d74d87fd848d5c4f4021310f4cd2ec8b550e9165ba70a1b2e8ba515de1b2215e02d431ce8dbfc6b43f5483d31c050da96ad28836bd6ef7d4534fa652870a534829b415c48981b0d13546a2cb2f2564b3a9f" localRef="discretization" location="lu.triangular.Lower/Lower.hpe" name="Lower" package="lu.triangular" exposed="false">
      <visualDescription h="34" w="103" x="108" y="216">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds uRef="discretization">
        <visualDescription h="10" w="10" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <supplyParameter cRef="class" varName="C"/>
    <supplyParameter cRef="discretization" varName="DIS"/>
    <supplyParameter cRef="instance_type" varName="I"/>
    <interface iRef="IBlockTriangularSolutionBlts" nArgs="3">
      <slice isRef="discretization">
        <originRef cRef="discretization" iRef="IDiscretization"/>
        <visualDescription h="10" w="10" x="165" y="26"/>
      </slice>
      <slice isRef="exchange_102">
        <originRef cRef="exchange_102" iRef="IExchange"/>
        <visualDescription h="10" w="10" x="106" y="12"/>
      </slice>
      <slice isRef="exchange_113">
        <originRef cRef="exchange_113" iRef="IExchange"/>
        <visualDescription h="10" w="10" x="141" y="39"/>
      </slice>
      <protocol xsi:type="component:ActionCombinatorParType" label="hPE.frontend.kinds.activate.model.protocol.HParAction@3731a3c6" repeat="0">
        <visualDescription h="150" w="70" x="75" y="75"/>
        <action xsi:type="component:ActionActivateType" label="hPE.frontend.kinds.activate.model.protocol.HDoAction@1bf73879" repeat="0">
          <visualDescription h="50" w="50" x="10" y="50"/>
        </action>
      </protocol>
      <sources sourceType="C# Language" versionId="1.0.0.0">
        <file contents="/* Automatically Generated Code */&#xA;&#xA;using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using lu.data.ProblemDefinition;&#xA;using lu.problem_size.Instance_LU;&#xA;using common.problem_size.Class;&#xA;using lu.datapartition.BlocksInfo;&#xA;using common.Discretization;&#xA;using common.topology.Ring;&#xA;using environment.MPIDirect;&#xA;using lu.Exchange;&#xA;using lu.triangular.Lower;&#xA;using lu.ssor.BlockTriangularSolution;&#xA;using lu.exchange.ExchangePattern10;&#xA;using lu.exchange.ExchangePattern11;&#xA;&#xA;namespace impl.lu.ssor.BlockTriangularSolutionBlts &#xA;{ &#xA;&#x9;public abstract class BaseIBlockTriangularSolutionBlts&lt;DIS, I, C>: Computation, BaseIBlockTriangularSolution&lt;DIS, I, C>&#xA;&#x9;&#x9;where I:IInstance_LU&lt;C>&#xA;&#x9;&#x9;where C:IClass&#xA;&#x9;&#x9;where DIS:ILower&#xA;&#x9;{&#xA;&#xA;&#x9;&#x9;#region data&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;protected int ist,jst,iend,jend;&#xA;&#x9;&#x9;&#x9;protected double [,,,] rsd,d;&#xA;&#xA;&#x9;&#x9;&#x9;protected double[,,,] ldx;&#xA;&#x9;&#x9;    protected double[,,,] ldy;&#xA;&#x9;&#x9;    protected double[,,,] ldz;&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;override public void initialize()&#xA;&#x9;&#x9;&#x9;{&#xA;                ist  = Blocks.ist;&#xA;                jst  = Blocks.jst;                &#xA;                iend = Blocks.iend;&#xA;                jend = Blocks.jend;&#xA;                &#xA;                rsd  = Problem.Field_rsd;&#xA;                d = Problem.Field_d;&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;ldx = Problem.Field_c;&#xA;&#x9;&#x9;&#x9;&#x9;ldy = Problem.Field_b;&#xA;&#x9;&#x9;&#x9;&#x9;ldz = Problem.Field_a;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;#endregion&#xA;&#xA;&#x9;&#x9;private IProblemDefinition&lt;I, C> problem = null;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public IProblemDefinition&lt;I, C> Problem {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.problem == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.problem = (IProblemDefinition&lt;I, C>) Services.getPort(&quot;problem_data&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.problem;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;private IBlocksInfo blocks = null;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public IBlocksInfo Blocks {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.blocks == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.blocks = (IBlocksInfo) Services.getPort(&quot;blocks_info&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.blocks;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;private DIS discretization = default(DIS);&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;protected DIS Discretization {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.discretization == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.discretization = (DIS) Services.getPort(&quot;discretization&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.discretization;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;private ICell y = null;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public ICell Y {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.y == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.y = (ICell) Services.getPort(&quot;y&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.y;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;private ICell x = null;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public ICell X {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.x == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.x = (ICell) Services.getPort(&quot;x&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.x;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;private IMPIDirect mpi = null;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public IMPIDirect Mpi {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.mpi == null) &#xA;&#x9;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.mpi = (IMPIDirect) Services.getPort(&quot;mpi&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;return this.mpi;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;private IExchange&lt;I, C, IExchangePattern10, DIS> exchange_102 = null;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;protected IExchange&lt;I, C, IExchangePattern10, DIS> Exchange_102 {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.exchange_102 == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.exchange_102 = (IExchange&lt;I, C, IExchangePattern10, DIS>) Services.getPort(&quot;exchange_102&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.exchange_102;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;private IExchange&lt;I, C, IExchangePattern11, DIS> exchange_113 = null;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;protected IExchange&lt;I, C, IExchangePattern11, DIS> Exchange_113 {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.exchange_113 == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.exchange_113 = (IExchange&lt;I, C, IExchangePattern11, DIS>) Services.getPort(&quot;exchange_113&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.exchange_113;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;abstract public int go(); &#xA;&#x9;}&#xA;}&#xA;" fileType="library" name="BaseIBlockTriangularSolutionBlts.cs" srcType="base" uri="impl.lu.ssor.BlockTriangularSolutionBlts/bin/1.0.0.0/BaseIBlockTriangularSolutionBlts.dll" versionId="1.0.0.0">
          <dependency>lu.data.ProblemDefinition/bin/1.0.0.0/IProblemDefinition.dll</dependency>
          <dependency>lu.problem_size.Instance_LU/bin/1.0.0.0/IInstance_LU.dll</dependency>
          <dependency>common.problem_size.Class/bin/1.0.0.0/IClass.dll</dependency>
          <dependency>lu.datapartition.BlocksInfo/bin/1.0.0.0/IBlocksInfo.dll</dependency>
          <dependency>common.Discretization/bin/1.0.0.0/IDiscretization.dll</dependency>
          <dependency>lu.topology.Neighbors/bin/1.0.0.0/INeighbors.dll</dependency>
          <dependency>lu.Exchange1/bin/1.0.0.0/IExchange1.dll</dependency>
          <dependency>lu.triangular.Lower/bin/1.0.0.0/ILower.dll</dependency>
          <dependency>lu.ssor.BlockTriangularSolution/bin/1.0.0.0/BaseIBlockTriangularSolution.dll</dependency>
          <externalDependency>MPI</externalDependency>
        </file>
        <file contents="using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using lu.problem_size.Instance_LU;&#xA;using common.problem_size.Class;&#xA;using lu.triangular.Lower;&#xA;using lu.ssor.BlockTriangularSolution;&#xA;&#xA;namespace impl.lu.ssor.BlockTriangularSolutionBlts &#xA;{ &#xA;&#x9;public class IBlockTriangularSolutionBlts&lt;DIS, I, C> : BaseIBlockTriangularSolutionBlts&lt;DIS, I, C>, IBlockTriangularSolution&lt;DIS, I, C>&#xA;&#x9;&#x9;where I:IInstance_LU&lt;C>&#xA;&#x9;&#x9;where C:IClass&#xA;&#x9;&#x9;where DIS:ILower &#xA;&#x9;{&#xA;&#x9;    private int k;&#xA;&#x9;    private double omega;&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;public override int go() &#xA;&#x9;&#x9;{ &#xA;            int i, j, m;&#xA;            double  tmp, tmp1;&#xA;            double[,] tmat = new double[5, 5];&#xA;&#x9;&#x9;&#x9;&#xA;            Exchange_102.setParameters(rsd, k);&#xA;            Exchange_102.go();&#xA;&#x9;&#x9;&#x9;&#xA;            for(j = jst; j&lt;= jend; j++) &#xA;&#x9;&#x9;&#x9;{&#xA;                for(i = ist; i&lt;= iend; i++) &#xA;&#x9;&#x9;&#x9;&#x9;{&#xA;                    for(m = 1; m&lt;= 5; m++) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xA;                        rsd[k-1, j+1, i+1, m-1] =  rsd[k-1, j+1, i+1, m -1]&#xA;             - omega * (  ldz[j-1, i-1, 0, m-1] * rsd[k-2, j+1, i+1, 0]&#xA;                        + ldz[j-1, i-1, 1, m-1] * rsd[k-2, j+1, i+1, 1]&#xA;                        + ldz[j-1, i-1, 2, m-1] * rsd[k-2, j+1, i+1, 2]&#xA;                        + ldz[j-1, i-1, 3, m-1] * rsd[k-2, j+1, i+1, 3]&#xA;                        + ldz[j-1, i-1, 4, m-1] * rsd[k-2, j+1, i+1, 4]);&#xA;                    }&#xA;                }&#xA;            }&#xA;&#x9;&#x9;&#x9;&#xA;            for(j=jst; j&lt;=jend; j++) &#xA;&#x9;&#x9;&#x9;{&#xA;                for(i = ist; i&lt;= iend; i++) &#xA;&#x9;&#x9;&#x9;&#x9;{&#xA;                    for(m = 1; m&lt;= 5; m++) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xA;                        rsd[k-1, j+1, i+1, m-1] =  rsd[k-1, j+1, i+1, m-1]&#xA;                        - omega * ( ldy[j-1, i-1, 0, m-1] * rsd[k-1, j, i+1, 0]&#xA;                                  + ldx[j-1, i-1, 0, m-1] * rsd[k-1, j+1, i, 0]&#xA;                                  + ldy[j-1, i-1, 1, m-1] * rsd[k-1, j, i+1, 1]&#xA;                                  + ldx[j-1, i-1, 1, m-1] * rsd[k-1, j+1, i, 1]&#xA;                                  + ldy[j-1, i-1, 2, m-1] * rsd[k-1, j, i+1, 2]&#xA;                                  + ldx[j-1, i-1, 2, m-1] * rsd[k-1, j+1, i, 2]&#xA;                                  + ldy[j-1, i-1, 3, m-1] * rsd[k-1, j, i+1, 3]&#xA;                                  + ldx[j-1, i-1, 3, m-1] * rsd[k-1, j+1, i, 3]&#xA;                                  + ldy[j-1, i-1, 4, m-1] * rsd[k-1, j, i+1, 4]&#xA;                                  + ldx[j-1, i-1, 4, m-1] * rsd[k-1, j+1, i, 4]);&#xA;                    }&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;                    //---------------------------------------------------------------------&#xA;                    //   diagonal block inversion&#xA;                    //&#xA;                    //   forward elimination&#xA;                    //---------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;for(m = 0; m&lt; 5; m++) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xA;                        tmat[0, m] = d[j-1, i-1, 0, m];&#xA;                        tmat[1, m] = d[j-1, i-1, 1, m];&#xA;                        tmat[2, m] = d[j-1, i-1, 2, m];&#xA;                        tmat[3, m] = d[j-1, i-1, 3, m];&#xA;                        tmat[4, m] = d[j-1, i-1, 4, m];&#xA;                    }&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;                    tmp1 = 1.0d /tmat[0, 0];&#xA;                    tmp = tmp1 * tmat[0, 1];&#xA;                    tmat[1, 1] =  tmat[1, 1] - tmp * tmat[1, 0];&#xA;                    tmat[2, 1] =  tmat[2, 1] - tmp * tmat[2, 0];&#xA;                    tmat[3, 1] =  tmat[3, 1] - tmp * tmat[3, 0];&#xA;                    tmat[4, 1] =  tmat[4, 1] - tmp * tmat[4, 0];&#xA;                    rsd[k-1, j+1, i+1, 1] = rsd[k-1, j+1, i+1, 1] - rsd[k-1, j+1, i+1, 0] * tmp;&#xA;&#xA;                    tmp = tmp1 * tmat[0, 2];&#xA;                    tmat[1, 2] =  tmat[1, 2] - tmp * tmat[1, 0];&#xA;                    tmat[2, 2] =  tmat[2, 2] - tmp * tmat[2, 0];&#xA;                    tmat[3, 2] =  tmat[3, 2] - tmp * tmat[3, 0];&#xA;                    tmat[4, 2] =  tmat[4, 2] - tmp * tmat[4, 0];&#xA;                    rsd[k-1, j+1, i+1, 2] = rsd[k-1, j+1, i+1, 2] - rsd[k-1, j+1, i+1, 0] * tmp;&#xA;&#xA;                    tmp = tmp1 * tmat[0, 3];&#xA;                    tmat[1, 3] =  tmat[1, 3] - tmp * tmat[1, 0];&#xA;                    tmat[2, 3] =  tmat[2, 3] - tmp * tmat[2, 0];&#xA;                    tmat[3, 3] =  tmat[3, 3] - tmp * tmat[3, 0];&#xA;                    tmat[4, 3] =  tmat[4, 3] - tmp * tmat[4, 0];&#xA;                    rsd[k-1, j+1, i+1, 3] = rsd[k-1, j+1, i+1, 3] - rsd[k-1, j+1, i+1, 0] * tmp;&#xA;&#xA;                    tmp = tmp1 * tmat[0, 4];&#xA;                    tmat[1, 4] =  tmat[1, 4] - tmp * tmat[1, 0];&#xA;                    tmat[2, 4] =  tmat[2, 4] - tmp * tmat[2, 0];&#xA;                    tmat[3, 4] =  tmat[3, 4] - tmp * tmat[3, 0];&#xA;                    tmat[4, 4] =  tmat[4, 4] - tmp * tmat[4, 0];&#xA;                    rsd[k-1, j+1, i+1, 4] = rsd[k-1, j+1, i+1, 4] - rsd[k-1, j+1, i+1, 0] * tmp;&#xA;&#xA;                    tmp1 = 1.0d /tmat[1, 1];&#xA;                    tmp = tmp1 * tmat[1, 2];&#xA;                    tmat[2, 2] =  tmat[2, 2] - tmp * tmat[2, 1];&#xA;                    tmat[3, 2] =  tmat[3, 2] - tmp * tmat[3, 1];&#xA;                    tmat[4, 2] =  tmat[4, 2] - tmp * tmat[4, 1];&#xA;                    rsd[k-1, j+1, i+1, 2] = rsd[k-1, j+1, i+1, 2] - rsd[k-1, j+1, i+1, 1] * tmp;&#xA;&#xA;                    tmp = tmp1 * tmat[1, 3];&#xA;                    tmat[2, 3] =  tmat[2, 3] - tmp * tmat[2, 1];&#xA;                    tmat[3, 3] =  tmat[3, 3] - tmp * tmat[3, 1];&#xA;                    tmat[4, 3] =  tmat[4, 3] - tmp * tmat[4, 1];&#xA;                    rsd[k-1, j+1, i+1, 3] = rsd[k-1, j+1, i+1, 3] - rsd[k-1, j+1, i+1, 1] * tmp;&#xA;&#xA;                    tmp = tmp1 * tmat[1, 4];&#xA;                    tmat[2, 4] =  tmat[2, 4] - tmp * tmat[2, 1];&#xA;                    tmat[3, 4] =  tmat[3, 4] - tmp * tmat[3, 1];&#xA;                    tmat[4, 4] =  tmat[4, 4] - tmp * tmat[4, 1];&#xA;                    rsd[k-1, j+1, i+1, 4] = rsd[k-1, j+1, i+1, 4] - rsd[k-1, j+1, i+1, 1] * tmp;&#xA;&#xA;                    tmp1 = 1.0d /tmat[2, 2];&#xA;                    tmp = tmp1 * tmat[2, 3];&#xA;                    tmat[3, 3] =  tmat[3, 3] - tmp * tmat[3, 2];&#xA;                    tmat[4, 3] =  tmat[4, 3] - tmp * tmat[4, 2];&#xA;                    rsd[k-1, j+1, i+1, 3] = rsd[k-1, j+1, i+1, 3] - rsd[k-1, j+1, i+1, 2] * tmp;&#xA;&#xA;                    tmp = tmp1 * tmat[2, 4];&#xA;                    tmat[3, 4] =  tmat[3, 4] - tmp * tmat[3, 2];&#xA;                    tmat[4, 4] =  tmat[4, 4] - tmp * tmat[4, 2];&#xA;                    rsd[k-1, j+1, i+1, 4] = rsd[k-1, j+1, i+1, 4] - rsd[k-1, j+1, i+1, 2] * tmp;&#xA;&#xA;                    tmp1 = 1.0d /tmat[3, 3];&#xA;                    tmp = tmp1 * tmat[3, 4];&#xA;                    tmat[4, 4] =  tmat[4, 4] - tmp * tmat[4, 3];&#xA;                    rsd[k-1, j+1, i+1, 4] = rsd[k-1, j+1, i+1, 4] - rsd[k-1, j+1, i+1, 3] * tmp;&#xA;&#xA;                    //---------------------------------------------------------------------&#xA;                    //   back substitution&#xA;                    //---------------------------------------------------------------------&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;rsd[k-1, j+1, i+1, 4] = rsd[k-1, j+1, i+1, 4]/ tmat[4, 4];&#xA;                    rsd[k-1, j+1, i+1, 3] = rsd[k-1, j+1, i+1, 3]- tmat[4, 3] * rsd[k-1, j+1, i+1, 4];&#xA;                    rsd[k-1, j+1, i+1, 3] = rsd[k-1, j+1, i+1, 3]/ tmat[3, 3];&#xA;                    rsd[k-1, j+1, i+1, 2] = rsd[k-1, j+1, i+1, 2] -tmat[3, 2] * rsd[k-1, j+1, i+1, 3] - tmat[4, 2] * &#xA;                                                                       rsd[k-1, j+1, i+1, 4];&#xA;                    rsd[k-1, j+1, i+1, 2] = rsd[k-1, j+1, i+1, 2] /tmat[2, 2];&#xA;                    rsd[k-1, j+1, i+1, 1] = rsd[k-1, j+1, i+1, 1]- tmat[2, 1] * rsd[k-1, j+1, i+1, 2]-tmat[3, 1]*&#xA;                                                                       rsd[k-1, j+1, i+1, 3]-tmat[4, 1]*&#xA;                                                                       rsd[k-1, j+1, i+1, 4];&#xA;                    rsd[k-1, j+1, i+1, 1] = rsd[k-1, j+1, i+1, 1] /tmat[1, 1];&#xA;                    rsd[k-1, j+1, i+1, 0] = rsd[k-1, j+1, i+1, 0] -tmat[1, 0] * rsd[k-1, j+1, i+1, 1]-&#xA;                                                           tmat[2, 0] * rsd[k-1, j+1, i+1, 2]-&#xA;                                                           tmat[3, 0] * rsd[k-1, j+1, i+1, 3]-&#xA;                                                           tmat[4, 0] * rsd[k-1, j+1, i+1, 4];&#xA;                    rsd[k-1, j+1, i+1, 0] = rsd[k-1, j+1, i+1, 0] /tmat[0, 0];&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;            }&#xA;&#x9;&#x9;&#x9;&#xA;            Exchange_113.setParameters(rsd, k);&#xA;            Exchange_113.go();&#xA;&#x9;&#x9;&#x9;&#xA;          /*  for(j=jst; j&lt;=jend; j++) &#xA;&#x9;&#x9;&#x9;{&#xA;                for(i = ist; i&lt;= iend; i++) &#xA;&#x9;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;for(m = 0; m&lt; 5; m++)&#xA;&#x9;&#x9;&#x9;&#x9;        Console.WriteLine(&quot;rsd4[&quot; + (k-1) + &quot;,&quot; + (j+1) + &quot;,&quot; + (i+1) + &quot;,&quot; + (m) +&quot;] = &quot; + rsd[k-1, j+1, i+1, m]);&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}*/&#xA;&#xA;&#x9;&#x9;&#x9;return 0;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public void setParameters(int k, double omega/*, double[,,,] dz, double[,,,] dy, double[,,,] dx*/)&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;   this.k     = k;&#xA;&#x9;&#x9;   this.omega = omega;&#xA;/*&#x9;&#x9;   this.ldx   = dx;&#xA;&#x9;&#x9;   this.ldy   = dy;&#xA;&#x9;&#x9;   this.ldz   = dz;*/&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;" fileType="library" name="IBlockTriangularSolutionBlts.cs" srcType="user" uri="impl.lu.ssor.BlockTriangularSolutionBlts/bin/1.0.0.0/IBlockTriangularSolutionBlts.dll" versionId="1.0.0.0">
          <dependency>lu.problem_size.Instance_LU/bin/1.0.0.0/IInstance_LU.dll</dependency>
          <dependency>common.problem_size.Class/bin/1.0.0.0/IClass.dll</dependency>
          <dependency>lu.triangular.Lower/bin/1.0.0.0/ILower.dll</dependency>
          <dependency>%WORKSPACE/impl.lu.ssor.BlockTriangularSolutionBlts/bin/1.0.0.0/BaseIBlockTriangularSolutionBlts.dll</dependency>
          <dependency>lu.ssor.BlockTriangularSolution/bin/1.0.0.0/IBlockTriangularSolution.dll</dependency>
          <externalDependency>MPI</externalDependency>
        </file>
      </sources>
      <visualDescription h="87" w="231" x="197" y="67">
        <color b="64" g="64" r="0"/>
      </visualDescription>
      <port name="mpi">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="mpi" sRef="exchange_102"/>
        <slice pRef="mpi" sRef="exchange_113"/>
      </port>
      <port name="x">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="x" sRef="exchange_102"/>
        <slice pRef="x" sRef="exchange_113"/>
      </port>
      <port name="y">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="y" sRef="exchange_102"/>
        <slice pRef="y" sRef="exchange_113"/>
      </port>
      <port name="problem">
        <visualDescription h="10" w="10" x="12" y="25"/>
        <slice pRef="problem" sRef="exchange_102"/>
        <slice pRef="problem" sRef="exchange_113"/>
      </port>
      <port name="blocks">
        <visualDescription h="10" w="10" x="124" y="7"/>
        <slice pRef="blocks" sRef="exchange_102"/>
        <slice pRef="blocks" sRef="exchange_113"/>
      </port>
      <externalReferences>MPI</externalReferences>
      <parameter iname="ILower" order="0" parid="discretization" uname="discretization" varid="DIS"/>
      <parameter iname="IInstance_LU" order="1" parid="instance_type" uname="instance" varid="I"/>
      <parameter iname="IClass" order="2" parid="class" uname="class" varid="C"/>
    </interface>
    <unit iRef="IBlockTriangularSolutionBlts" private="false" uRef="block_triangular_solution" visibleInterface="true">
      <super cRef="base" uRef="block_triangular_solution"/>
      <slices cRef="blocks_info" replica="0" uRef="blocks" sliceName="blocks" transitive="true">
        <visualDescription h="10" w="10" x="0" y="21"/>
      </slices>
      <slices cRef="problem_data" replica="0" uRef="problem" sliceName="problem" transitive="true">
        <visualDescription h="10" w="10" x="113" y="18"/>
      </slices>
      <slices cRef="x" replica="0" uRef="cell" sliceName="x" transitive="true">
        <visualDescription h="10" w="10" x="35" y="27"/>
      </slices>
      <slices cRef="mpi" replica="0" uRef="mpi" sliceName="mpi" transitive="true">
        <visualDescription h="10" w="10" x="11" y="22"/>
      </slices>
      <slices cRef="y" replica="0" uRef="cell" sliceName="y" transitive="true">
        <visualDescription h="10" w="10" x="35" y="27"/>
      </slices>
      <slices cRef="discretization" replica="0" uRef="discretization" sliceName="discretization" transitive="false">
        <visualDescription h="10" w="10" x="165" y="26"/>
      </slices>
      <slices cRef="exchange_102" replica="0" uRef="exchange1" sliceName="exchange_102" transitive="false">
        <visualDescription h="10" w="10" x="92" y="21"/>
        <port>blocks</port>
        <port>problem</port>
        <port>x</port>
        <port>mpi</port>
        <port>y</port>
      </slices>
      <slices cRef="exchange_113" replica="0" uRef="exchange1" sliceName="exchange_113" transitive="false">
        <visualDescription h="10" w="10" x="141" y="39"/>
        <port>blocks</port>
        <port>problem</port>
        <port>x</port>
        <port>mpi</port>
        <port>y</port>
      </slices>
      <visualDescription h="56" w="187" x="128" y="254"/>
    </unit>
    <enumerator cardinality="-1" fromSplit="false" ref="hPE.frontend.base.model.HReplicator@8bf18c1302284940125" varId="n">
      <originRef>base</originRef>
      <originRef>discretization</originRef>
      <links xsi:type="component:EnumerableUnitType" ref="block_triangular_solution"/>
      <visualDescription h="20" w="20" x="64" y="130"/>
    </enumerator>
    <enumerator cardinality="-1" fromSplit="false" ref="hPE.frontend.base.model.HReplicator@8bf18c1302284940125" varId="n">
      <originRef>discretization</originRef>
      <originRef>base</originRef>
      <links xsi:type="component:EnumerableEntryType" cRef="discretization" uRef="discretization"/>
      <visualDescription h="20" w="20" x="82" y="170"/>
    </enumerator>
  </componentInfo>
</component:component>