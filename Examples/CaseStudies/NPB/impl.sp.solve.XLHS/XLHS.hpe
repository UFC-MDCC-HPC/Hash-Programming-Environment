<?xml version="1.0" encoding="ASCII"?>
<component:component xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:component="http://www.example.org/HashComponent">
  <header hash_component_UID="00240000048000009400000006020000002400005253413100040000110000009903d81cd6da91469c563fc609fc79af7a7fc18f05bf924379d0da1ecd2b9650e23437514db2db4a30cb97a5cebd337e1d5dc55e593b68b8dc75a6de92af2ca3eaf86149618d92712ada8a0a724f36e14743df1091422fd28997dd4fe3e4224f7f28b14d3df53f3cb8b4b8dccf2f27643ca507184528aaf671be65efb64f6c86" isAbstract="false" kind="Computation" name="XLHS" packagePath="impl.sp.solve">
    <baseType>
      <extensionType>
        <implements>true</implements>
      </extensionType>
      <component hash_component_UID="00240000048000009400000006020000002400005253413100040000110000006d52bca419b0f708a96178d08394b1198257360fdafaef92f994479c37ffd6db903ea30f36c33673c858e471757f53b8d9273b94bbeeeaebb8b47fdae6718cbe861cfca8ebb7f5d76ed621d72981ba47aaf2b10da11f0551c55eb918b6a07e240c40550623b6724b8bbbdfadc6c2cd3ba0a5869c726bef16856946c8837f63b6" localRef="base" location="common.solve.LHS/LHS.hpe" name="LHS" package="common.solve" version="1.0.0.0">
        <visualDescription h="30" w="50" x="207" y="265">
          <color b="255" g="255" r="255"/>
        </visualDescription>
        <parameter formFieldId="instance_type" varName="I"/>
        <parameter formFieldId="orientation" varName="DIR"/>
        <parameter formFieldId="class" varName="C"/>
        <parameter formFieldId="method" varName="MTH"/>
        <port hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000cfe94b8926d4a7de4f70d204303375a68658c9c988f5e0ec7f1f3dce28b75501399411f8002d0637e06b03a2849ef779a22e26ae137759213f595fd13ccb5101bb6f07e7560df0d8b1beadc8dacecefd49c7844d298e78991b98dd4650ec7bf0b26716727a7bc437f39a5ccede87c7db6829de68c511abb9d0b4e3644bcf66ad" localRef="blocks_info" location="common.datapartition.BlocksInfo/BlocksInfo.hpe" name="BlocksInfo" package="common.datapartition" exposed="true">
          <visualDescription h="42" w="125" x="262" y="443">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <unitBounds uRef="blocks">
            <visualDescription h="10" w="10" x="5" y="2"/>
          </unitBounds>
        </port>
        <port hash_component_UID="002400000480000094000000060200000024000052534131000400001100000009b97ce4f3981d78e251ff90894751a2f19e3d7fcafeadee8da1cb93890a7d9ed59b4773f575afc0782c61b877ac17cea1ab4429bfd162c1bdff0b6c7fe9d07f8e9ccdcd219b58671c77cf6cfbada633e18309cb4c2e518fedeaa6aecf435a12dc4a18c8384c15d61dfab5a2056f58c2bcf936823b8d84a8c5cc5e25827a1598" localRef="problem_data" location="common.data.ProblemDefinition/ProblemDefinition.hpe" name="ProblemDefinition" package="common.data" exposed="true">
          <visualDescription h="44" w="113" x="281" y="270">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <parameter formFieldId="instance_type" varName="I"/>
          <parameter formFieldId="class" varName="C"/>
          <unitBounds uRef="problem">
            <visualDescription h="10" w="10" x="7" y="17"/>
          </unitBounds>
        </port>
        <unitBounds uRef="lhs">
          <visualDescription h="10" w="10" x="5" y="2"/>
        </unitBounds>
      </component>
    </baseType>
    <versions field1="1" field2="0" field3="0" field4="0"/>
    <visualAttributes>
      <color b="255" g="255" r="255"/>
    </visualAttributes>
  </header>
  <componentInfo>
    <innerComponent hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000159d9ccb4ff0bb35a4fe190495e9c0d9a8406fa4adae5405850aed7cf83bbe6096bcb7deb5b07550a718fabec888b38f45c00ad4323db7b35e01dd236f9d1af6d8d0e529844de79031b63f05f2e810d0218c315e2c720d374b2bc2c0b15ec45863f2832e19f30c9bf6ee1519c76cd5e6f0ed485d2027397f93caec006396c587" localRef="method" location="common.solve.BeamWarmingMethod/BeamWarmingMethod.hpe" name="BeamWarmingMethod" package="common.solve" exposed="false">
      <visualDescription h="30" w="50" x="339" y="105">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds uRef="method">
        <visualDescription h="10" w="10" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent hash_component_UID="002400000480000094000000060200000024000052534131000400001100000099ec807d7886f0c2735f4a4c2dc60d8feb0a435847e291a0f9dd7aed2539883c551cf8dd8fe530fe7d695458a20d532e4a58b5cf62af87f410238ec43d1e140b210efe08dea6fc4983660e10cc3431cd1102137a5df63ef9bef47a99b409c0b1c86bd4aa322397fd56e1ed3be2e81f8d1a9765c5dc9134ec1eb1b5d4567311ae" localRef="xdir" location="common.orientation.X/X.hpe" name="X" package="common.orientation" exposed="false">
      <visualDescription h="30" w="50" x="218" y="142">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds uRef="x">
        <visualDescription h="10" w="10" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000237f437b205f7bfa00c2d0b40167897c37f84c96a62c077e2832a5360fa8c1c7438dfa969d99bb36a48a7baefcbd50d84ae2e3e71a349dce24c2b0bc473997871be48fdb29d0d48b0928ca968440c6b6663c6740810dab7b664db0e0cfbfe5b21f223402d0d9bd601294898724b6a1da46e78261ef1ee37ac63ca9b2dbdc0d90" localRef="class" location="common.problem_size.Class/Class.hpe" name="Class" package="common.problem_size" exposed="false">
      <visualDescription h="30" w="50" x="102" y="170">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds uRef="class">
        <visualDescription h="10" w="10" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000796ff7bbb33560060ee9951c4f8242d987089c0c50af1d3a6ab2f92466788c33bfa42e66a347c4206d81a948be78598f82f386b898f40714662cb0134d02313a7e06d04944957cb9149a5069ebfcc65b58711afd15bfbe6f3144cf719a1d8c90833890d5ed1eac7e3b8a657a774a065ca04588c7743c47a41fe59e21cd7767a4" localRef="instance" location="sp.problem_size.Instance_SP/Instance_SP.hpe" name="Instance_SP" package="sp.problem_size" exposed="false">
      <visualDescription h="30" w="50" x="111" y="389">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <parameter formFieldId="class" varName="C"/>
      <unitBounds uRef="instance">
        <visualDescription h="10" w="10" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <supplyParameter cRef="class" varName="C"/>
    <supplyParameter cRef="xdir" varName="DIR"/>
    <supplyParameter cRef="instance" varName="I"/>
    <supplyParameter cRef="method" varName="MTH"/>
    <interface iRef="IXLHSImpl" nArgs="4">
      <slice isRef="blocks">
        <originRef cRef="blocks_info" iRef="IBlocks"/>
        <visualDescription h="10" w="10" x="63" y="22"/>
      </slice>
      <slice isRef="problem">
        <originRef cRef="problem_data" iRef="IProblemDefinition"/>
        <visualDescription h="10" w="10" x="7" y="21"/>
      </slice>
      <slice isRef="axis">
        <originRef cRef="orientation" iRef="IAxis"/>
        <visualDescription h="10" w="10" x="22" y="27"/>
      </slice>
      <slice isRef="method">
        <originRef cRef="method" iRef="IMethod"/>
        <visualDescription h="10" w="10" x="30" y="5"/>
      </slice>
      <protocol xsi:type="component:ActionSkipType" label="hPE.frontend.kinds.activate.model.protocol.HSkipAction@4933b2" repeat="0">
        <visualDescription h="50" w="50" x="75" y="75"/>
      </protocol>
      <sources sourceType="C# Language" versionId="1.0.0.0">
        <file contents="/* Automatically Generated Code */&#xA;&#xA;using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using common.datapartition.BlocksInfo;&#xA;using common.data.ProblemDefinition;&#xA;using common.problem_size.Class;&#xA;using common.solve.LHS;&#xA;using sp.problem_size.Instance_SP;&#xA;using common.orientation.X;&#xA;using common.solve.BeamWarmingMethod;&#xA;&#xA;namespace impl.sp.solve.XLHS { &#xA;&#xA;public abstract class BaseIXLHSImpl&lt;I,C,DIR,MTH>: Computation, BaseILHS&lt;I,C,DIR,MTH>&#xA;&#x9;where I:IInstance_SP&lt;C>&#xA;&#x9;where C:IClass&#xA;&#x9;where DIR:IX&#xA;&#x9;where MTH:IBeamWarmingMethod&#xA;{&#xA;&#xA;private IBlocks blocks = null;&#xA;&#xA;public IBlocks Blocks {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.blocks == null)&#xA;&#x9;&#x9;&#x9;this.blocks = (IBlocks) Services.getPort(&quot;blocks_info&quot;);&#xA;&#x9;&#x9;return this.blocks;&#xA;&#x9;}&#xA;}&#xA;&#xA;private IProblemDefinition&lt;I,C> problem = null;&#xA;&#xA;public IProblemDefinition&lt;I,C> Problem {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.problem == null)&#xA;&#x9;&#x9;&#x9;this.problem = (IProblemDefinition&lt;I,C>) Services.getPort(&quot;problem_data&quot;);&#xA;&#x9;&#x9;return this.problem;&#xA;&#x9;}&#xA;}&#xA;&#x9;&#x9;&#xA;private DIR axis = default(DIR);&#xA;&#xA;protected DIR Axis {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.axis == null)&#xA;&#x9;&#x9;&#x9;this.axis = (DIR) Services.getPort(&quot;orientation&quot;);&#xA;&#x9;&#x9;return this.axis;&#xA;&#x9;}&#xA;}&#xA;&#xA;private MTH method = default(MTH);&#xA;&#xA;protected MTH Method {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.method == null)&#xA;&#x9;&#x9;&#x9;this.method = (MTH) Services.getPort(&quot;method&quot;);&#xA;&#x9;&#x9;return this.method;&#xA;&#x9;}&#xA;}&#xA;&#x9;&#x9;&#xA;&#xA;public BaseIXLHSImpl() { &#xA;&#xA;} &#xA;&#xA;abstract public void compute(); &#xA;&#xA;&#xA;}&#xA;&#xA;}&#xA;" fileType="library" name="BaseIXLHSImpl.cs" srcType="base" uri="impl.sp.solve.XLHS/bin/1.0.0.0/BaseIXLHSImpl.dll" versionId="1.0.0.0">
          <dependency>common.datapartition.BlocksInfo/bin/1.0.0.0/IBlocks.dll</dependency>
          <dependency>common.data.ProblemDefinition/bin/1.0.0.0/IProblemDefinition.dll</dependency>
          <dependency>common.problem_size.Instance/bin/1.0.0.0/IInstance.dll</dependency>
          <dependency>common.solve.LHS/bin/1.0.0.0/BaseILHS.dll</dependency>
        </file>
        <file contents="using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using common.data.ProblemDefinition;&#xA;using common.solve.LHS;&#xA;using common.problem_size.Class;&#xA;using sp.problem_size.Instance_SP;&#xA;using common.orientation.X;&#xA;using common.solve.BeamWarmingMethod;&#xA;&#xA;namespace impl.sp.solve.XLHS { &#xA;&#xA;&#x9;public class IXLHSImpl&lt;I,C,DIR,MTH> : BaseIXLHSImpl&lt;I,C,DIR,MTH>, ILHS&lt;I,C,DIR,MTH>&#xA;&#x9;where I:IInstance_SP&lt;C>&#xA;&#x9;where C:IClass&#xA;&#x9;where DIR:IX&#xA;&#x9;where MTH:IBeamWarmingMethod&#xA;&#x9;{&#xA;&#x9;&#xA;&#x9;&#x9;public IXLHSImpl() &#xA;&#x9;&#x9;{ &#xA;&#x9;&#x9;&#x9;initialize();&#xA;&#x9;&#x9;} &#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;private int c;&#xA;&#xA;&#x9;&#x9;public void enterStage(int stage)&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;{&#xA;            c = slice[stage, 0];&#xA;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;private int[,] start, end, cell_size, slice;&#xA;&#x9;&#x9;private double[,,,,] lhs, rho_i, speed, us;&#xA;&#x9;&#x9;private double c3c4, dttx2, c2dttx1, dttx1, con43, dx5, dx1,&#xA;&#x9;&#x9;               comz5, comz4, comz1, comz6, dx2, c1c5, dxmax;&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;private double[] cv, rhon;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;private int MAX_CELL_DIM;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public void initialize() &#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;MAX_CELL_DIM = Problem.MAX_CELL_DIM;&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;    cv = new double[MAX_CELL_DIM + 4];     /* -2 */   // lhsx, lhsy, lhsz (def/use)&#xA;&#x9;&#x9;    rhon = new double[MAX_CELL_DIM + 4];   /* -2 */   // lhsx (local)&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;start = Blocks.cell_start;&#xA;&#x9;&#x9;&#x9;end = Blocks.cell_end;&#xA;&#x9;&#x9;&#x9;cell_size = Blocks.cell_size;&#xA;&#x9;&#x9;&#x9;slice = Blocks.cell_slice;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;lhs = Problem.Field_lhs;&#xA;&#x9;&#x9;&#x9;rho_i = Problem.Field_rho;&#xA;&#x9;&#x9;&#x9;speed = Problem.Field_speed;&#xA;&#x9;&#x9;&#x9;us = Problem.Field_us;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;c3c4 = Constants.c3c4;&#xA;&#x9;&#x9;&#x9;dttx2 = Constants.dttx2;&#xA;&#x9;&#x9;&#x9;c2dttx1 = Constants.c2dttx1;&#xA;&#x9;&#x9;&#x9;dttx1 = Constants.dttx1;&#xA;&#x9;&#x9;&#x9;con43 = Constants.con43;&#xA;&#x9;&#x9;&#x9;dx5 = Constants.dx5;&#xA;&#x9;&#x9;&#x9;dx1 = Constants.dx1;&#xA;&#x9;&#x9;&#x9;comz4 = Constants.comz4;&#xA;&#x9;&#x9;&#x9;comz1 = Constants.comz1;&#xA;&#x9;&#x9;&#x9;comz6 = Constants.comz6;&#xA;&#x9;&#x9;&#x9;comz5 = Constants.comz5;&#xA;&#x9;&#x9;&#x9;dx2 = Constants.dx2;&#xA;&#x9;&#x9;&#x9;c1c5 = Constants.c1c5;&#xA;&#x9;&#x9;&#x9;dxmax = Constants.dxmax;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public override void compute() &#xA;&#x9;&#x9;{ &#xA;            double ru1;&#xA;            int i, j, k;&#xA;&#xA;            int ksize = cell_size[c, 2] + 2;&#xA;            int jsize = cell_size[c, 1] + 2;&#xA;            int isize = cell_size[c, 0] + 2;&#xA;&#xA;            //---------------------------------------------------------------------&#xA;            //      treat only cell c             &#xA;            //---------------------------------------------------------------------&#xA;&#xA;            //---------------------------------------------------------------------&#xA;            //      first fill the lhs for the u-eigenvalue                   &#xA;            //---------------------------------------------------------------------&#xA;            for (k = start[c, 2]; k &lt; ksize - end[c, 2]; k++)&#xA;            {&#xA;                for (j = start[c, 1]; j &lt; jsize - end[c, 1]; j++)&#xA;                {&#xA;                    for (i = start[c, 0] - 1; i &lt; isize - end[c, 0] + 1; i++)&#xA;                    {&#xA;                        ru1 = c3c4 * rho_i[c, k, j, i, 0];&#xA;                        cv[i] = us[c, k, j, i, 0];&#xA;                        rhon[i] = dmax1(dx2 + con43 * ru1, dx5 + c1c5 * ru1, dxmax + ru1, dx1);&#xA;                    }&#xA;&#xA;                    for (i = start[c, 0]; i &lt; isize - end[c, 0]; i++)&#xA;                    {&#xA;                        lhs[c, k, j, i, 0] = 0.0d;&#xA;                        lhs[c, k, j, i, 1] = -dttx2 * cv[i - 1] - dttx1 * rhon[i - 1];&#xA;                        lhs[c, k, j, i, 2] = 1.0d + c2dttx1 * rhon[i];&#xA;                        lhs[c, k, j, i, 3] = dttx2 * cv[i + 1] - dttx1 * rhon[i + 1];&#xA;                        lhs[c, k, j, i, 4] = 0.0d;&#xA;                    }&#xA;                }&#xA;            }&#xA;&#xA;            //---------------------------------------------------------------------&#xA;            //      add fourth order dissipation                             &#xA;            //---------------------------------------------------------------------&#xA;            if (start[c, 0] > 2)&#xA;            {&#xA;                i = 3;&#xA;                for (k = start[c, 2]; k &lt; ksize - end[c, 2]; k++)&#xA;                {&#xA;                    for (j = start[c, 1]; j &lt; jsize - end[c, 1]; j++)&#xA;                    {&#xA;                        lhs[c, k, j, i, 2] = lhs[c, k, j, i, 2] + comz5;&#xA;                        lhs[c, k, j, i, 3] = lhs[c, k, j, i, 3] - comz4;&#xA;                        lhs[c, k, j, i, 4] = lhs[c, k, j, i, 4] + comz1;&#xA;&#xA;                        lhs[c, k, j, i + 1, 1] = lhs[c, k, j, i + 1, 1] - comz4;&#xA;                        lhs[c, k, j, i + 1, 2] = lhs[c, k, j, i + 1, 2] + comz6;&#xA;                        lhs[c, k, j, i + 1, 3] = lhs[c, k, j, i + 1, 3] - comz4;&#xA;                        lhs[c, k, j, i + 1, 4] = lhs[c, k, j, i + 1, 4] + comz1;&#xA;                    }&#xA;                }&#xA;            }&#xA;&#xA;            for (k = start[c, 2]; k &lt; ksize - end[c, 2]; k++)&#xA;            {&#xA;                for (j = start[c, 1]; j &lt; jsize - end[c, 1]; j++)&#xA;                {&#xA;                    for (i = 3 * start[c, 0] - 4; i &lt; isize - 3 * end[c, 0]; i++)&#xA;                    {&#xA;                        lhs[c, k, j, i, 0] = lhs[c, k, j, i, 0] + comz1;&#xA;                        lhs[c, k, j, i, 1] = lhs[c, k, j, i, 1] - comz4;&#xA;                        lhs[c, k, j, i, 2] = lhs[c, k, j, i, 2] + comz6;&#xA;                        lhs[c, k, j, i, 3] = lhs[c, k, j, i, 3] - comz4;&#xA;                        lhs[c, k, j, i, 4] = lhs[c, k, j, i, 4] + comz1;&#xA;                    }&#xA;                }&#xA;            }&#xA;&#xA;            if (end[c, 0] > 0)&#xA;            {&#xA;                i = isize - 3;&#xA;                for (k = start[c, 2]; k &lt; ksize - end[c, 2]; k++)&#xA;                {&#xA;                    for (j = start[c, 1]; j &lt; jsize - end[c, 1]; j++)&#xA;                    {&#xA;                        lhs[c, k, j, i, 0] = lhs[c, k, j, i, 0] + comz1;&#xA;                        lhs[c, k, j, i, 1] = lhs[c, k, j, i, 1] - comz4;&#xA;                        lhs[c, k, j, i, 2] = lhs[c, k, j, i, 2] + comz6;&#xA;                        lhs[c, k, j, i, 3] = lhs[c, k, j, i, 3] - comz4;&#xA;&#xA;                        lhs[c, k, j, i + 1, 0] = lhs[c, k, j, i + 1, 0] + comz1;&#xA;                        lhs[c, k, j, i + 1, 1] = lhs[c, k, j, i + 1, 1] - comz4;&#xA;                        lhs[c, k, j, i + 1, 2] = lhs[c, k, j, i + 1, 2] + comz5;&#xA;                    }&#xA;                }&#xA;            }&#xA;&#xA;            //---------------------------------------------------------------------&#xA;            //      subsequently, fill the other factors (u+c), (u-c) by a4ing to &#xA;            //      the first  &#xA;            //---------------------------------------------------------------------&#xA;            for (k = start[c, 2]; k &lt; ksize - end[c, 2]; k++)&#xA;            {&#xA;                for (j = start[c, 1]; j &lt; jsize - end[c, 1]; j++)&#xA;                {&#xA;                    for (i = start[c, 0]; i &lt; isize - end[c, 0]; i++)&#xA;                    {&#xA;                        lhs[c, k, j, i, 0 + 5] = lhs[c, k, j, i, 0];&#xA;                        lhs[c, k, j, i, 1 + 5] = lhs[c, k, j, i, 1] -&#xA;                                         dttx2 * speed[c, k, j, i - 1, 0];&#xA;                        lhs[c, k, j, i, 2 + 5] = lhs[c, k, j, i, 2];&#xA;                        lhs[c, k, j, i, 3 + 5] = lhs[c, k, j, i, 3] +&#xA;                                         dttx2 * speed[c, k, j, i + 1, 0];&#xA;                        lhs[c, k, j, i, 4 + 5] = lhs[c, k, j, i, 4];&#xA;                        lhs[c, k, j, i, 0 + 10] = lhs[c, k, j, i, 0];&#xA;                        lhs[c, k, j, i, 1 + 10] = lhs[c, k, j, i, 1] +&#xA;                                         dttx2 * speed[c, k, j, i - 1, 0];&#xA;                        lhs[c, k, j, i, 2 + 10] = lhs[c, k, j, i, 2];&#xA;                        lhs[c, k, j, i, 3 + 10] = lhs[c, k, j, i, 3] -&#xA;                                         dttx2 * speed[c, k, j, i + 1, 0];&#xA;                        lhs[c, k, j, i, 4 + 10] = lhs[c, k, j, i, 4];&#xA;                    }&#xA;                }&#xA;            }&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;} // end activate method &#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public double dmax1(double a, double b)&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;if (a &lt; b) return b; else return a;&#xA;&#x9;&#x9;}&#xA;&#x9;&#xA;&#x9;&#x9;public double dmax1(double a, double b, double c, double d)&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;return dmax1(dmax1(a, b), dmax1(c, d));&#xA;&#x9;&#x9;}&#xA;&#x9;&#xA;&#x9;}&#xA;&#xA;}&#xA;" fileType="library" name="IXLHSImpl.cs" srcType="user" uri="impl.sp.solve.XLHS/bin/1.0.0.0/IXLHSImpl.dll" versionId="1.0.0.0">
          <dependency>%WORKSPACE/impl.sp.solve.XLHS/bin/1.0.0.0/BaseIXLHSImpl.dll</dependency>
          <dependency>common.solve.LHS/bin/1.0.0.0/ILHS.dll</dependency>
        </file>
      </sources>
      <visualDescription h="40" w="80" x="159" y="117">
        <color b="0" g="255" r="255"/>
      </visualDescription>
      <port name="blocks">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="blocks" sRef="blocks"/>
      </port>
      <port name="problem">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="problem" sRef="problem"/>
      </port>
      <parameter iname="IInstance_SP" order="0" parid="instance_type" uname="instance" varid="I"/>
      <parameter iname="IClass" order="1" parid="class" uname="class" varid="C"/>
      <parameter iname="IX" order="2" parid="orientation" uname="x" varid="DIR"/>
      <parameter iname="IBeamWarmingMethod" order="3" parid="method" uname="method" varid="MTH"/>
    </interface>
    <unit iRef="IXLHSImpl" private="false" uRef="lhs" visibleInterface="true">
      <super cRef="base" uRef="lhs"/>
      <slices cRef="blocks_info" replica="0" uRef="blocks" sliceName="blocks" transitive="false">
        <visualDescription h="10" w="10" x="63" y="22"/>
      </slices>
      <slices cRef="problem_data" replica="0" uRef="problem" sliceName="problem" transitive="false">
        <visualDescription h="10" w="10" x="7" y="21"/>
      </slices>
      <slices cRef="orientation" replica="0" uRef="axis" sliceName="axis" transitive="false">
        <visualDescription h="10" w="10" x="22" y="27"/>
      </slices>
      <slices cRef="method" replica="0" uRef="method" sliceName="method" transitive="false">
        <visualDescription h="10" w="10" x="30" y="5"/>
      </slices>
      <visualDescription h="40" w="80" x="174" y="207"/>
    </unit>
    <enumerator cardinality="-1" fromSplit="false" ref="hPE.frontend.base.model.HReplicator@129a52a1295029089610" varId="n">
      <originRef>base</originRef>
      <originRef>method</originRef>
      <links xsi:type="component:EnumerableUnitType" ref="lhs"/>
      <visualDescription h="31" w="34" x="31" y="251"/>
    </enumerator>
    <enumerator cardinality="-1" fromSplit="false" ref="hPE.frontend.base.model.HReplicator@129a52a1295029089610" varId="n">
      <originRef>method</originRef>
      <originRef>base</originRef>
      <links xsi:type="component:EnumerableEntryType" cRef="method" uRef="method"/>
      <visualDescription h="20" w="20" x="260" y="427"/>
    </enumerator>
    <enumerator cardinality="-1" fromSplit="false" ref="hPE.frontend.base.model.HReplicator@1ab5deb1295025097082" varId="n">
      <originRef>xdir</originRef>
      <originRef>base</originRef>
      <links xsi:type="component:EnumerableEntryType" cRef="xdir" uRef="x"/>
      <visualDescription h="20" w="20" x="354" y="190"/>
    </enumerator>
  </componentInfo>
</component:component>