<?xml version="1.0" encoding="ASCII"?>
<component:component xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:component="http://www.example.org/HashComponent">
  <header hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000d11962cf5f605b848b55c0d3ebc6ac85b89abc3158adad4386af3ddbcb087b1013eb204851615da609f77d303e8ed106e5e22357a19cdfb7d99f6b01aef0d8393019c81a2feb62a25dffe0502953fe0ba9478b0da420f624c15d0fcc710468e8aa43d9f6f9fa058666d14a53fb8cfa2d8958ecec5acc72e7a2425b9e34482f99" isAbstract="false" kind="Computation" name="ErrorNormImpl" packagePath="impl.common.error">
    <baseType>
      <extensionType>
        <implements>true</implements>
      </extensionType>
      <component hash_component_UID="002400000480000094000000060200000024000052534131000400001100000099021d2f712406ffa021ea9f4f0d75d2cba517e7bac440d02dd6b2c9b906ebc109050dd574b7b79f9082fa2116739a6ffd8da821372ccf28ec2d551ba8814610c2825b807dadf65db043a10660caae3b15ea88fb7620461bd2896e0b49b91c840d56d56077174337c5161328ec742f8333e04d49d4a0b3ee2e533f9f3549c78c" localRef="base" location="common.error.ErrorNorm/ErrorNorm.hpe" name="ErrorNorm" package="common.error" version="1.0.0.0">
        <visualDescription h="30" w="50" x="174" y="160">
          <color b="255" g="255" r="255"/>
        </visualDescription>
        <parameter formFieldId="instance_type" varName="I"/>
        <parameter formFieldId="class" varName="C"/>
        <port hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000cfe94b8926d4a7de4f70d204303375a68658c9c988f5e0ec7f1f3dce28b75501399411f8002d0637e06b03a2849ef779a22e26ae137759213f595fd13ccb5101bb6f07e7560df0d8b1beadc8dacecefd49c7844d298e78991b98dd4650ec7bf0b26716727a7bc437f39a5ccede87c7db6829de68c511abb9d0b4e3644bcf66ad" localRef="blocks_info" location="common.datapartition.BlocksInfo/BlocksInfo.hpe" name="BlocksInfo" package="common.datapartition" exposed="true">
          <visualDescription h="54" w="93" x="238" y="333">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <unitBounds uRef="blocks">
            <visualDescription h="10" w="10" x="5" y="2"/>
          </unitBounds>
        </port>
        <port hash_component_UID="002400000480000094000000060200000024000052534131000400001100000009b97ce4f3981d78e251ff90894751a2f19e3d7fcafeadee8da1cb93890a7d9ed59b4773f575afc0782c61b877ac17cea1ab4429bfd162c1bdff0b6c7fe9d07f8e9ccdcd219b58671c77cf6cfbada633e18309cb4c2e518fedeaa6aecf435a12dc4a18c8384c15d61dfab5a2056f58c2bcf936823b8d84a8c5cc5e25827a1598" localRef="problem_data" location="common.data.ProblemDefinition/ProblemDefinition.hpe" name="ProblemDefinition" package="common.data" exposed="true">
          <visualDescription h="30" w="117" x="135" y="506">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <parameter formFieldId="instance_type" varName="I"/>
          <parameter formFieldId="class" varName="C"/>
          <unitBounds uRef="problem">
            <visualDescription h="10" w="10" x="5" y="2"/>
          </unitBounds>
        </port>
        <port hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000059fdc60f0095a1142aef66ff82b5e8659158d29c9ae6eedd576a96e33ae1faaddaf78b57c8cab897deeb79b165ed011c3cd25deeeed69da38fc30a1143e39fa67ab658c278a82203de07eafa3dafe7704a84c1fffc42035b92d09563efdfe7b59862d01f598f626efa5cd4eef962fb18970112f8a530495c2a482922a19258b" localRef="mpi" location="environment.MPIDirect/MPIDirect.hpe" name="MPIDirect" package="environment" exposed="true">
          <visualDescription h="30" w="50" x="422" y="290">
            <color b="240" g="32" r="160"/>
          </visualDescription>
          <unitBounds uRef="mpi">
            <visualDescription h="10" w="10" x="5" y="2"/>
          </unitBounds>
        </port>
        <unitBounds uRef="error_norm">
          <visualDescription h="10" w="10" x="5" y="2"/>
        </unitBounds>
      </component>
    </baseType>
    <versions field1="1" field2="0" field3="0" field4="0"/>
    <visualAttributes>
      <color b="255" g="255" r="255"/>
    </visualAttributes>
  </header>
  <componentInfo>
    <innerComponent hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000237f437b205f7bfa00c2d0b40167897c37f84c96a62c077e2832a5360fa8c1c7438dfa969d99bb36a48a7baefcbd50d84ae2e3e71a349dce24c2b0bc473997871be48fdb29d0d48b0928ca968440c6b6663c6740810dab7b664db0e0cfbfe5b21f223402d0d9bd601294898724b6a1da46e78261ef1ee37ac63ca9b2dbdc0d90" localRef="class" location="common.problem_size.Class/Class.hpe" name="Class" package="common.problem_size" exposed="false">
      <visualDescription h="30" w="50" x="253" y="238">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds uRef="class">
        <visualDescription h="10" w="10" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent hash_component_UID="002400000480000094000000060200000024000052534131000400001100000071d38687e0d5d2c316c5b3d07d8aa67134a4623aa2696b4c1af143b9dfb26a795943f7fad788e11c36c09b5001b5422f85c04f6580101d9e27cbf7d06c6cec1d87e42c3a8940336c5c2d63abadb4ac8c1519030710b5b087e1d7e415c91fe07522356c2184e3ea18bf6684dd71bda7b7e5e4411c6b9941ea98fa97bde5ccceb1" localRef="instance" location="common.problem_size.Instance/Instance.hpe" name="Instance" package="common.problem_size" exposed="false">
      <visualDescription h="30" w="50" x="115" y="338">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <parameter formFieldId="class" varName="C"/>
      <unitBounds uRef="instance">
        <visualDescription h="10" w="10" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <supplyParameter cRef="class" varName="C"/>
    <supplyParameter cRef="instance" varName="I"/>
    <interface iRef="IErrorNormImpl" nArgs="2">
      <slice isRef="blocks">
        <originRef cRef="blocks_info" iRef="IBlocks"/>
        <visualDescription h="10" w="10" x="62" y="28"/>
      </slice>
      <slice isRef="problem">
        <originRef cRef="problem_data" iRef="IProblemDefinition"/>
        <visualDescription h="10" w="10" x="28" y="25"/>
      </slice>
      <slice isRef="mpi">
        <originRef cRef="mpi" iRef="IMPIDirect"/>
        <visualDescription h="10" w="10" x="47" y="27"/>
      </slice>
      <slice isRef="exact_solution">
        <originRef cRef="exact_solution" iRef="IExactSolution"/>
        <visualDescription h="10" w="10" x="13" y="27"/>
      </slice>
      <protocol xsi:type="component:ActionCombinatorParType" label="hPE.frontend.kinds.activate.model.protocol.HParAction@224cd5" repeat="0">
        <visualDescription h="150" w="70" x="75" y="75"/>
        <action xsi:type="component:ActionActivateType" label="hPE.frontend.kinds.activate.model.protocol.HDoAction@1e24888" repeat="0">
          <visualDescription h="50" w="50" x="10" y="50"/>
        </action>
      </protocol>
      <sources sourceType="C# Language" versionId="1.0.0.0">
        <file contents="/* Automatically Generated Code */&#xA;&#xA;using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using common.datapartition.BlocksInfo;&#xA;using common.data.ProblemDefinition;&#xA;using common.problem_size.Instance;&#xA;using common.problem_size.Class;&#xA;using common.error.ErrorNorm;&#xA;using environment.MPIDirect;&#xA;using common.data.ExactSolution;&#xA;&#xA;namespace impl.common.error.ErrorNormImpl { &#xA;&#xA;public abstract class BaseIErrorNormImpl&lt;I,C>: Computation, BaseIErrorNorm&lt;I,C>&#xA;&#x9;&#x9;where I:IInstance&lt;C>&#xA;&#x9;&#x9;where C:IClass&#xA;{&#xA;&#xA;private IExactSolution exact_solution = null;&#xA;&#xA;protected IExactSolution Exact_solution {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.exact_solution == null)&#xA;&#x9;&#x9;&#x9;this.exact_solution = (IExactSolution) Services.getPort(&quot;exact_solution&quot;);&#xA;&#x9;&#x9;return this.exact_solution;&#xA;&#x9;}&#xA;}&#xA;&#xA;private IBlocks blocks = null;&#xA;&#xA;public IBlocks Blocks {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.blocks == null)&#xA;&#x9;&#x9;&#x9;this.blocks = (IBlocks) Services.getPort(&quot;blocks_info&quot;);&#xA;&#x9;&#x9;return this.blocks;&#xA;&#x9;}&#xA;}&#xA;&#xA;private IProblemDefinition&lt;I,C> problem = null;&#xA;&#xA;public IProblemDefinition&lt;I,C> Problem {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.problem == null)&#xA;&#x9;&#x9;&#x9;this.problem = (IProblemDefinition&lt;I,C>) Services.getPort(&quot;problem_data&quot;);&#xA;&#x9;&#x9;return this.problem;&#xA;&#x9;}&#xA;}&#xA;&#xA;private IMPIDirect mpi = null;&#xA;&#xA;public IMPIDirect Mpi {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.mpi == null)&#xA;&#x9;&#x9;&#x9;this.mpi = (IMPIDirect) Services.getPort(&quot;mpi&quot;);&#xA;&#x9;&#x9;return this.mpi;&#xA;&#x9;}&#xA;}&#xA;&#xA;&#x9;&#x9;&#xA;abstract public void compute(); &#xA;&#xA;&#xA;}&#xA;&#xA;}&#xA;" fileType="library" name="BaseIErrorNormImpl.cs" srcType="base" uri="impl.common.error.ErrorNormImpl/bin/1.0.0.0/BaseIErrorNormImpl.dll" versionId="1.0.0.0">
          <dependency>common.datapartition.BlocksInfo/bin/1.0.0.0/IBlocks.dll</dependency>
          <dependency>common.data.ProblemDefinition/bin/1.0.0.0/IProblemDefinition.dll</dependency>
          <dependency>common.problem_size.Instance/bin/1.0.0.0/IInstance.dll</dependency>
          <dependency>common.error.ErrorNorm/bin/1.0.0.0/BaseIErrorNorm.dll</dependency>
          <externalDependency>MPI</externalDependency>
        </file>
        <file contents="using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using common.error.ErrorNorm;&#xA;using common.problem_size.Instance;&#xA;using common.problem_size.Class;&#xA;using common.data.ProblemDefinition;&#xA;using MPI;&#xA;&#xA;&#xA;&#xA;namespace impl.common.error.ErrorNormImpl { &#xA;&#xA;public class IErrorNormImpl&lt;I,C> : BaseIErrorNormImpl&lt;I,C>, IErrorNorm&lt;I,C>&#xA;&#x9;&#x9;where I:IInstance&lt;C>&#xA;&#x9;&#x9;where C:IClass&#xA;{&#xA;&#xA;&#x9;public IErrorNormImpl() &#xA;&#x9;{ &#xA;&#x9;&#x9;&#x9;initialize();&#xA;&#x9;} &#xA;&#xA;&#x9;private int[,] cell_low, cell_high;&#xA;&#x9;private int ncells;&#xA;&#x9;private double dnzm1, dnym1, dnxm1;&#xA;&#x9;private double[,,,,] u;&#xA;&#x9;private int[] grid_points;&#xA;&#x9;private Intracommunicator comm_setup;&#xA;&#xA;&#x9;&#x9;&#xA;&#x9;public void initialize() &#xA;&#x9;{&#xA;&#x9;&#x9;cell_low = Blocks.cell_low;&#xA;&#x9;&#x9;cell_high = Blocks.cell_high;&#xA;&#x9;&#x9;ncells = Problem.NCells;&#xA;&#x9;&#x9;dnzm1 = Constants.dnxm1;&#xA;&#x9;&#x9;dnym1 = Constants.dnym1;&#xA;&#x9;&#x9;dnxm1 = Constants.dnzm1;&#x9;&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;u = Problem.Field_u;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;rms = new double[5];&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;grid_points = Problem.grid_points;&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;comm_setup = Mpi.localComm(this);&#xA;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;private double[] rms; &#xA;&#x9;&#x9;&#xA;&#x9;public double[] xce { get { return rms; } }&#xA;&#x9;&#x9;&#xA;&#xA;&#x9;public override void compute() { &#xA;&#xA;            int c, i, j, k, ii, jj, kk, m, d;&#xA;            double xi, eta, zeta;&#xA;            double[] u_exact = new double[5];&#xA;            double add;&#xA;            double[] rms_work = new double[5];&#xA;&#xA;            for (m = 0; m &lt; 5; m++)&#xA;            {&#xA;                rms_work[m] = 0.0d;&#xA;            }&#xA;&#xA;            for (c = 0; c &lt; ncells; c++)&#xA;            {&#xA;                kk = 2;&#xA;                for (k = cell_low[c, 2]; k &lt;= cell_high[c, 2]; k++)&#xA;                {&#xA;                    zeta = k * dnzm1;&#xA;                    jj = 2;&#xA;                    for (j = cell_low[c, 1]; j &lt;= cell_high[c, 1]; j++)&#xA;                    {&#xA;                        eta = j * dnym1;&#xA;                        ii = 2;&#xA;                        for (i = cell_low[c, 0]; i &lt;= cell_high[c, 0]; i++)&#xA;                        {&#xA;                            xi = i * dnxm1;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;                            Exact_solution.setParameters(xi, eta, zeta, u_exact, 0);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Exact_solution.compute();&#xA;&#xA;                            for (m = 0; m &lt; 5; m++)&#xA;                            {&#xA;                                add = u[c, kk, jj, ii, m] - u_exact[m];&#xA;                                rms_work[m] += add * add;&#xA;                            }&#xA;                            ii++;&#xA;                        }&#xA;                        jj++;&#xA;                    }&#xA;                    kk++;&#xA;                }&#xA;            }&#xA;&#xA;            comm_setup.Allreduce&lt;double>(rms_work, Operation&lt;double>.Add, ref rms);&#xA;&#xA;            for (m = 0; m &lt; 5; m++)&#xA;            {&#xA;                for (d = 0; d &lt; 3; d++)&#xA;                {&#xA;                    rms[m] /= (grid_points[d] - 2);&#xA;                }&#xA;                rms[m] = Math.Sqrt(rms[m]);&#xA;            }&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;} // end activate method &#xA;&#xA;}&#xA;&#xA;}&#xA;" fileType="library" name="IErrorNormImpl.cs" srcType="user" uri="impl.common.error.ErrorNormImpl/bin/1.0.0.0/IErrorNormImpl.dll" versionId="1.0.0.0">
          <dependency>%WORKSPACE/impl.common.error.ErrorNormImpl/bin/1.0.0.0/BaseIErrorNormImpl.dll</dependency>
          <dependency>common.error.ErrorNorm/bin/1.0.0.0/IErrorNorm.dll</dependency>
          <externalDependency>MPI</externalDependency>
        </file>
      </sources>
      <visualDescription h="40" w="135" x="231" y="71">
        <color b="0" g="128" r="255"/>
      </visualDescription>
      <port name="blocks">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="blocks" sRef="blocks"/>
      </port>
      <port name="problem">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="problem" sRef="problem"/>
      </port>
      <port name="mpi">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="mpi" sRef="mpi"/>
      </port>
      <externalReferences>MPI</externalReferences>
      <parameter iname="IInstance" order="0" parid="instance_type" uname="instance" varid="I"/>
      <parameter iname="IClass" order="1" parid="class" uname="class" varid="C"/>
    </interface>
    <unit iRef="IErrorNormImpl" private="false" uRef="error_norm" visibleInterface="true">
      <super cRef="base" uRef="error_norm"/>
      <slices cRef="blocks_info" replica="0" uRef="blocks" sliceName="blocks" transitive="false">
        <visualDescription h="10" w="10" x="62" y="28"/>
      </slices>
      <slices cRef="problem_data" replica="0" uRef="problem" sliceName="problem" transitive="false">
        <visualDescription h="10" w="10" x="28" y="25"/>
      </slices>
      <slices cRef="mpi" replica="0" uRef="mpi" sliceName="mpi" transitive="false">
        <visualDescription h="10" w="10" x="47" y="27"/>
      </slices>
      <slices cRef="exact_solution" replica="0" uRef="exact_solution" sliceName="exact_solution" transitive="false">
        <visualDescription h="10" w="10" x="13" y="27"/>
      </slices>
      <visualDescription h="40" w="80" x="368" y="140"/>
    </unit>
    <enumerator cardinality="-1" fromSplit="false" ref="hPE.frontend.base.model.HReplicator@1b2533d1295099559883" varId="n">
      <originRef>base</originRef>
      <originRef>problem_data</originRef>
      <originRef>speed</originRef>
      <links xsi:type="component:EnumerableUnitType" ref="error_norm"/>
      <visualDescription h="60" w="61" x="28" y="219"/>
    </enumerator>
  </componentInfo>
</component:component>