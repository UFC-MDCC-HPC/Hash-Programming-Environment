<?xml version="1.0" encoding="ASCII"?>
<component:component xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:component="http://www.example.org/HashComponent">
  <header hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000ddc6a8247211751d7820c59f40f60abfe1f88087018c274a2b2cbd294086e87e93a5db2c7ee68d047aa7e454cf4f04991a77fe331d9525ba05b6f1f6df82498bde125fece3b95a4a96b2d25550af5674fca413becf2d121be69ee2bb77a87a8f1fa04b8665694e0292507d5c9f3dc8f43c434e087e0651482064ae3d4576768e" isAbstract="false" kind="Computation" name="TXINVR" packagePath="impl.sp.solve">
    <baseType>
      <extensionType>
        <implements>true</implements>
      </extensionType>
      <component hash_component_UID="002400000480000094000000060200000024000052534131000400001100000037015743105037553fe19f62ab320b38e3b722a956c70b75cd57e60341064965fa8162108964af95b8f63fc3c7e4022c472da55c3d293d9c9a82f8cb33164bf04f7edf932fb278345dbce599dd25ec347a022be6a8069297d14a60bd577312bd630a6a934c475595270c9f5f461b402f0fa361508905e2192a48726c15b98989" localRef="base" location="common.solve.BlockDiagonalMatVecProduct/BlockDiagonalMatVecProduct.hpe" name="BlockDiagonalMatVecProduct" package="common.solve" version="1.0.0.0">
        <visualDescription h="30" w="50" x="270" y="156">
          <color b="255" g="255" r="255"/>
        </visualDescription>
        <parameter formFieldId="instance_type" varName="I"/>
        <parameter formFieldId="orientation" varName="DIR"/>
        <parameter formFieldId="class" varName="C"/>
        <parameter formFieldId="method" varName="MTH"/>
        <port hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000cfe94b8926d4a7de4f70d204303375a68658c9c988f5e0ec7f1f3dce28b75501399411f8002d0637e06b03a2849ef779a22e26ae137759213f595fd13ccb5101bb6f07e7560df0d8b1beadc8dacecefd49c7844d298e78991b98dd4650ec7bf0b26716727a7bc437f39a5ccede87c7db6829de68c511abb9d0b4e3644bcf66ad" localRef="blocks_info" location="common.datapartition.BlocksInfo/BlocksInfo.hpe" name="BlocksInfo" package="common.datapartition" exposed="true">
          <visualDescription h="53" w="112" x="302" y="427">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <unitBounds uRef="blocks">
            <visualDescription h="10" w="10" x="5" y="2"/>
          </unitBounds>
        </port>
        <port hash_component_UID="002400000480000094000000060200000024000052534131000400001100000009b97ce4f3981d78e251ff90894751a2f19e3d7fcafeadee8da1cb93890a7d9ed59b4773f575afc0782c61b877ac17cea1ab4429bfd162c1bdff0b6c7fe9d07f8e9ccdcd219b58671c77cf6cfbada633e18309cb4c2e518fedeaa6aecf435a12dc4a18c8384c15d61dfab5a2056f58c2bcf936823b8d84a8c5cc5e25827a1598" localRef="problem_data" location="common.data.ProblemDefinition/ProblemDefinition.hpe" name="ProblemDefinition" package="common.data" exposed="true">
          <visualDescription h="55" w="102" x="284" y="279">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <parameter formFieldId="instance_type" varName="I"/>
          <parameter formFieldId="class" varName="C"/>
          <unitBounds uRef="problem">
            <visualDescription h="10" w="10" x="47" y="9"/>
          </unitBounds>
        </port>
        <unitBounds uRef="matvecproduct">
          <visualDescription h="10" w="10" x="5" y="2"/>
        </unitBounds>
      </component>
    </baseType>
    <versions field1="1" field2="0" field3="0" field4="0"/>
    <visualAttributes>
      <color b="255" g="255" r="255"/>
    </visualAttributes>
  </header>
  <componentInfo>
    <innerComponent hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000a9352e76d4c88239645b90e854bbd3f1a8abb667bc5a8c67a80728df749f5188b349a7ab44c5749bd29292ca8c80c30912b2f5d141abf97f42b621fe05bfdd2b78dcedfdd23f675606bd142775aabd270bc260921eb4b42b2711d8ecbff1221d1adff4da3d86e032b31620081d2b817b169fc98ed18834a240b8ea60a6e20ad2" localRef="xyzdir" location="common.orientation.XYZ/XYZ.hpe" name="XYZ" package="common.orientation" exposed="false">
      <visualDescription h="30" w="50" x="261" y="120">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds uRef="xyz">
        <visualDescription h="10" w="10" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000159d9ccb4ff0bb35a4fe190495e9c0d9a8406fa4adae5405850aed7cf83bbe6096bcb7deb5b07550a718fabec888b38f45c00ad4323db7b35e01dd236f9d1af6d8d0e529844de79031b63f05f2e810d0218c315e2c720d374b2bc2c0b15ec45863f2832e19f30c9bf6ee1519c76cd5e6f0ed485d2027397f93caec006396c587" localRef="method" location="common.solve.BeamWarmingMethod/BeamWarmingMethod.hpe" name="BeamWarmingMethod" package="common.solve" exposed="false">
      <visualDescription h="30" w="50" x="336" y="375">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds uRef="method">
        <visualDescription h="10" w="10" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000796ff7bbb33560060ee9951c4f8242d987089c0c50af1d3a6ab2f92466788c33bfa42e66a347c4206d81a948be78598f82f386b898f40714662cb0134d02313a7e06d04944957cb9149a5069ebfcc65b58711afd15bfbe6f3144cf719a1d8c90833890d5ed1eac7e3b8a657a774a065ca04588c7743c47a41fe59e21cd7767a4" localRef="instance" location="sp.problem_size.Instance_SP/Instance_SP.hpe" name="Instance_SP" package="sp.problem_size" exposed="false">
      <visualDescription h="30" w="50" x="97" y="454">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <parameter formFieldId="class" varName="C"/>
      <unitBounds uRef="instance">
        <visualDescription h="10" w="10" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000237f437b205f7bfa00c2d0b40167897c37f84c96a62c077e2832a5360fa8c1c7438dfa969d99bb36a48a7baefcbd50d84ae2e3e71a349dce24c2b0bc473997871be48fdb29d0d48b0928ca968440c6b6663c6740810dab7b664db0e0cfbfe5b21f223402d0d9bd601294898724b6a1da46e78261ef1ee37ac63ca9b2dbdc0d90" localRef="class" location="common.problem_size.Class/Class.hpe" name="Class" package="common.problem_size" exposed="false">
      <visualDescription h="30" w="50" x="224" y="441">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds uRef="class">
        <visualDescription h="10" w="10" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <supplyParameter cRef="class" varName="C"/>
    <supplyParameter cRef="xyzdir" varName="DIR"/>
    <supplyParameter cRef="instance" varName="I"/>
    <supplyParameter cRef="method" varName="MTH"/>
    <interface iRef="ITXINVR" nArgs="4">
      <slice isRef="blocks">
        <originRef cRef="blocks_info" iRef="IBlocks"/>
        <visualDescription h="10" w="10" x="78" y="26"/>
      </slice>
      <slice isRef="problem">
        <originRef cRef="problem_data" iRef="IProblemDefinition"/>
        <visualDescription h="10" w="10" x="92" y="3"/>
      </slice>
      <slice isRef="axis">
        <originRef cRef="orientation" iRef="IAxis"/>
        <visualDescription h="10" w="10" x="22" y="27"/>
      </slice>
      <slice isRef="method">
        <originRef cRef="method" iRef="IMethod"/>
        <visualDescription h="10" w="10" x="30" y="5"/>
      </slice>
      <protocol xsi:type="component:ActionSkipType" label="hPE.frontend.kinds.activate.model.protocol.HSkipAction@969922" repeat="0">
        <visualDescription h="50" w="50" x="75" y="75"/>
      </protocol>
      <sources sourceType="C# Language" versionId="1.0.0.0">
        <file contents="/* Automatically Generated Code */&#xA;&#xA;using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using common.datapartition.BlocksInfo;&#xA;using common.data.ProblemDefinition;&#xA;using common.problem_size.Instance;&#xA;using common.problem_size.Class;&#xA;using common.solve.BlockDiagonalMatVecProduct;&#xA;using common.orientation.Axis;&#xA;using common.solve.Method;&#xA;&#xA;namespace impl.sp.solve.TXINVR { &#xA;&#xA;public abstract class BaseITXINVR&lt;I,C,DIR,MTH>: Computation, BaseIBlockDiagonalMatVecProduct&lt;I,C,DIR,MTH>&#xA;&#x9;where I:IInstance&lt;C>&#xA;&#x9;where C:IClass&#xA;&#x9;where DIR:IAxis&#xA;&#x9;where MTH:IMethod&#xA;{&#xA;&#x9;&#x9;&#xA;protected int[,] start, end, cell_size;&#xA;protected double[,,,,] rhs, rho_i, us, vs, ws, qs, speed, ainv;&#xA;protected double bt, c2;&#xA;protected int ncells;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;private IBlocks blocks = null;&#xA;&#xA;public IBlocks Blocks {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.blocks == null)&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;this.blocks = (IBlocks) Services.getPort(&quot;blocks_info&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;start = Blocks.cell_start;&#xA;&#x9;&#x9;&#x9;end = Blocks.cell_end;&#xA;&#x9;&#x9;&#x9;cell_size = Blocks.cell_size;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;return this.blocks;&#xA;&#x9;}&#xA;}&#xA;&#xA;private IProblemDefinition&lt;I,C> problem = null;&#xA;&#xA;public IProblemDefinition&lt;I,C> Problem {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.problem == null) &#xA;&#x9;&#x9;{&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;this.problem = (IProblemDefinition&lt;I,C>) Services.getPort(&quot;problem_data&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;rhs = Problem.Field_rhs;&#xA;&#x9;&#x9;&#x9;rho_i = Problem.Field_rho;&#xA;&#x9;&#x9;&#x9;us = Problem.Field_us;&#xA;&#x9;&#x9;&#x9;vs = Problem.Field_vs;&#xA;&#x9;&#x9;&#x9;ws = Problem.Field_ws;&#xA;&#x9;&#x9;&#x9;qs = Problem.Field_qs;&#xA;&#x9;&#x9;&#x9;speed = Problem.Field_speed;&#xA;&#x9;&#x9;&#x9;ainv = Problem.Field_ainv;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;bt = Constants.bt;&#xA;&#x9;&#x9;&#x9;c2 = Constants.c2;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;ncells = Problem.NCells;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;return this.problem;&#xA;&#x9;}&#xA;}&#xA;&#x9;&#x9;&#xA;private DIR axis = default(DIR);&#xA;&#xA;protected DIR Axis {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.axis == null)&#xA;&#x9;&#x9;&#x9;this.axis = (DIR) Services.getPort(&quot;orientation&quot;);&#xA;&#x9;&#x9;return this.axis;&#xA;&#x9;}&#xA;}&#xA;&#xA;private MTH method = default(MTH);&#xA;&#xA;protected MTH Method {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.method == null)&#xA;&#x9;&#x9;&#x9;this.method = (MTH) Services.getPort(&quot;method&quot;);&#xA;&#x9;&#x9;return this.method;&#xA;&#x9;}&#xA;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;abstract public void compute(); &#xA;&#xA;&#xA;}&#xA;&#xA;}&#xA;" fileType="library" name="BaseITXINVR.cs" srcType="base" uri="impl.sp.solve.TXINVR/bin/1.0.0.0/BaseITXINVR.dll" versionId="1.0.0.0">
          <dependency>common.datapartition.BlocksInfo/bin/1.0.0.0/IBlocks.dll</dependency>
          <dependency>common.data.ProblemDefinition/bin/1.0.0.0/IProblemDefinition.dll</dependency>
          <dependency>common.problem_size.Instance/bin/1.0.0.0/IInstance.dll</dependency>
          <dependency>common.solve.BlockDiagonalMatVecProduct/bin/1.0.0.0/BaseIBlockDiagonalMatVecProduct.dll</dependency>
        </file>
        <file contents="using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using common.solve.BlockDiagonalMatVecProduct;&#xA;using common.problem_size.Instance;&#xA;using common.problem_size.Class;&#xA;using common.data.ProblemDefinition;&#xA;using common.orientation.Axis;&#xA;using common.solve.Method;&#xA;&#xA;&#xA;namespace impl.sp.solve.TXINVR { &#xA;&#xA;public class ITXINVR&lt;I,C,DIR,MTH> : BaseITXINVR&lt;I,C,DIR,MTH>, IBlockDiagonalMatVecProduct&lt;I,C,DIR,MTH>&#xA;&#x9;&#x9;where I:IInstance&lt;C>&#xA;&#x9;&#x9;where C:IClass&#xA;&#x9;&#x9;where DIR:IAxis&#xA;&#x9;&#x9;where MTH:IMethod&#xA;{&#xA;&#xA;public ITXINVR() &#xA;{ &#xA;} &#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;public void enterStage(int stage)&#x9;&#x9;&#x9;&#xA;{&#xA;}&#xA;&#x9;&#x9;&#xA;&#xA;&#x9;&#x9;&#xA;public override void compute() { &#xA;    int c, i, j, k, isize, jsize, ksize;&#xA;    double t1, t2, t3, ac, ru1, xvel, yvel, zvel,&#xA;           r1, r2, r3, r4, r5, ac2inv;&#xA;    &#xA;    for (c = 0; c &lt; ncells; c++)&#xA;    {&#xA;        ksize = cell_size[c, 2] + 2;&#xA;        jsize = cell_size[c, 1] + 2;&#xA;        isize = cell_size[c, 0] + 2;&#xA;&#xA;        for (k = start[c, 2]; k &lt; ksize - end[c, 2]; k++)&#xA;        {&#xA;            for (j = start[c, 1]; j &lt; jsize - end[c, 1]; j++)&#xA;            {&#xA;                for (i = start[c, 0]; i &lt; isize - end[c, 0]; i++)&#xA;                {&#xA;                    ru1 = rho_i[c, k, j, i, 0];&#xA;                    xvel = us[c, k, j, i, 0];&#xA;                    yvel = vs[c, k, j, i, 0];&#xA;                    zvel = ws[c, k, j, i, 0];&#xA;                    ac = speed[c, k, j, i, 0];&#xA;                    ac2inv = ainv[c, k, j, i, 0] * ainv[c, k, j, i, 0];&#xA;&#xA;                    r1 = rhs[c, k, j, i, 0];&#xA;                    r2 = rhs[c, k, j, i, 1];&#xA;                    r3 = rhs[c, k, j, i, 2];&#xA;                    r4 = rhs[c, k, j, i, 3];&#xA;                    r5 = rhs[c, k, j, i, 4];&#xA;                        &#xA;                    t1 = c2 * ac2inv * (qs[c, k, j, i, 0] * r1 - xvel * r2 -&#xA;                        yvel * r3 - zvel * r4 + r5);&#xA;                    t2 = bt * ru1 * (xvel * r1 - r2);&#xA;                    t3 = (bt * ru1 * ac) * t1;&#xA;&#xA;                    rhs[c, k, j, i, 0] = r1 - t1;&#xA;                    rhs[c, k, j, i, 1] = -ru1 * (zvel * r1 - r4);&#xA;                    rhs[c, k, j, i, 2] = ru1 * (yvel * r1 - r3);&#xA;                    rhs[c, k, j, i, 3] = -t2 + t3;&#xA;                    rhs[c, k, j, i, 4] = t2 + t3;&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;&#xA;} // end activate method &#xA;&#xA;}&#xA;&#xA;}&#xA;" fileType="library" name="ITXINVR.cs" srcType="user" uri="impl.sp.solve.TXINVR/bin/1.0.0.0/ITXINVR.dll" versionId="1.0.0.0">
          <dependency>%WORKSPACE/impl.sp.solve.TXINVR/bin/1.0.0.0/BaseITXINVR.dll</dependency>
          <dependency>common.solve.BlockDiagonalMatVecProduct/bin/1.0.0.0/IBlockDiagonalMatVecProduct.dll</dependency>
        </file>
      </sources>
      <visualDescription h="55" w="228" x="71" y="93">
        <color b="64" g="255" r="0"/>
      </visualDescription>
      <port name="blocks">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="blocks" sRef="blocks"/>
      </port>
      <port name="problem">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="problem" sRef="problem"/>
      </port>
      <parameter iname="IInstance_SP" order="0" parid="instance_type" uname="instance" varid="I"/>
      <parameter iname="IClass" order="1" parid="class" uname="class" varid="C"/>
      <parameter iname="IXYZ" order="2" parid="orientation" uname="xyz" varid="DIR"/>
      <parameter iname="IBeamWarmingMethod" order="3" parid="method" uname="method" varid="MTH"/>
    </interface>
    <unit iRef="ITXINVR" private="false" uRef="matvecproduct" visibleInterface="true">
      <super cRef="base" uRef="matvecproduct"/>
      <slices cRef="blocks_info" replica="0" uRef="blocks" sliceName="blocks" transitive="false">
        <visualDescription h="10" w="10" x="78" y="26"/>
      </slices>
      <slices cRef="problem_data" replica="0" uRef="problem" sliceName="problem" transitive="false">
        <visualDescription h="10" w="10" x="92" y="3"/>
      </slices>
      <slices cRef="orientation" replica="0" uRef="axis" sliceName="axis" transitive="false">
        <visualDescription h="10" w="10" x="22" y="27"/>
      </slices>
      <slices cRef="method" replica="0" uRef="method" sliceName="method" transitive="false">
        <visualDescription h="10" w="10" x="30" y="5"/>
      </slices>
      <visualDescription h="40" w="114" x="124" y="265"/>
    </unit>
    <enumerator cardinality="-1" fromSplit="false" ref="hPE.frontend.base.model.HReplicator@1b2533d1295099559883" varId="n">
      <originRef>base</originRef>
      <originRef>problem_data</originRef>
      <originRef>speed</originRef>
      <links xsi:type="component:EnumerableUnitType" ref="matvecproduct"/>
      <visualDescription h="60" w="61" x="76" y="339"/>
    </enumerator>
    <enumerator cardinality="-1" fromSplit="false" ref="hPE.frontend.base.model.HReplicator@1ab5deb1295025097082" varId="n">
      <originRef>xyzdir</originRef>
      <originRef>base</originRef>
      <links xsi:type="component:EnumerableEntryType" cRef="xyzdir" uRef="xyz"/>
      <visualDescription h="20" w="20" x="354" y="190"/>
    </enumerator>
    <enumerator cardinality="-1" fromSplit="false" ref="hPE.frontend.base.model.HReplicator@129a52a1295029089610" varId="n">
      <originRef>method</originRef>
      <originRef>base</originRef>
      <links xsi:type="component:EnumerableEntryType" cRef="method" uRef="method"/>
      <visualDescription h="20" w="20" x="260" y="427"/>
    </enumerator>
  </componentInfo>
</component:component>