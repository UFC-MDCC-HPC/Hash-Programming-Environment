<?xml version="1.0" encoding="ASCII"?>
<component:component xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:component="http://www.example.org/HashComponent">
  <header hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000176a8289150e11128b302981ed5749025f17245b7b8fe4720244ba0aa74a2a2190ecf7371d21cc42bdc131fb70c85587d8336479804f1318144f9799e5a45d7627b273528381f40a83b2d94f7404cc92c72733febcfd118e879216ccad84721711c916dc9de90b0736ce37f524d3139946bd1164a2f5246d9fb5a2c43676faa2" isAbstract="false" kind="Data" name="ProblemDefinitionImpl" packagePath="impl.common.data">
    <baseType>
      <extensionType>
        <implements>true</implements>
      </extensionType>
      <component hash_component_UID="002400000480000094000000060200000024000052534131000400001100000009b97ce4f3981d78e251ff90894751a2f19e3d7fcafeadee8da1cb93890a7d9ed59b4773f575afc0782c61b877ac17cea1ab4429bfd162c1bdff0b6c7fe9d07f8e9ccdcd219b58671c77cf6cfbada633e18309cb4c2e518fedeaa6aecf435a12dc4a18c8384c15d61dfab5a2056f58c2bcf936823b8d84a8c5cc5e25827a1598" localRef="base" location="common.data.ProblemDefinition/ProblemDefinition.hpe" name="ProblemDefinition" package="common.data" version="1.0.0.0">
        <visualDescription h="30" w="50" x="328" y="280">
          <color b="255" g="255" r="255"/>
        </visualDescription>
        <parameter formFieldId="instance_type" varName="I"/>
        <parameter formFieldId="class" varName="C"/>
        <unitBounds uRef="problem">
          <visualDescription h="10" w="10" x="5" y="2"/>
        </unitBounds>
      </component>
    </baseType>
    <versions field1="1" field2="0" field3="0" field4="0"/>
    <visualAttributes>
      <color b="255" g="255" r="255"/>
    </visualAttributes>
  </header>
  <componentInfo>
    <innerComponent hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000796ff7bbb33560060ee9951c4f8242d987089c0c50af1d3a6ab2f92466788c33bfa42e66a347c4206d81a948be78598f82f386b898f40714662cb0134d02313a7e06d04944957cb9149a5069ebfcc65b58711afd15bfbe6f3144cf719a1d8c90833890d5ed1eac7e3b8a657a774a065ca04588c7743c47a41fe59e21cd7767a4" localRef="instance" location="sp.problem_size.Instance_SP/Instance_SP.hpe" name="Instance_SP" package="sp.problem_size" exposed="false">
      <visualDescription h="101" w="178" x="532" y="439">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <parameter formFieldId="class" varName="C"/>
      <unitBounds uRef="instance">
        <visualDescription h="10" w="10" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000237f437b205f7bfa00c2d0b40167897c37f84c96a62c077e2832a5360fa8c1c7438dfa969d99bb36a48a7baefcbd50d84ae2e3e71a349dce24c2b0bc473997871be48fdb29d0d48b0928ca968440c6b6663c6740810dab7b664db0e0cfbfe5b21f223402d0d9bd601294898724b6a1da46e78261ef1ee37ac63ca9b2dbdc0d90" localRef="class" location="common.problem_size.Class/Class.hpe" name="Class" package="common.problem_size" exposed="false">
      <visualDescription h="30" w="50" x="305" y="419">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds uRef="class">
        <visualDescription h="10" w="10" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <supplyParameter cRef="class" varName="C"/>
    <supplyParameter cRef="instance" varName="I"/>
    <interface iRef="IProblemDefinitionImpl" nArgs="2">
      <slice isRef="us">
        <originRef cRef="us" iRef="IField"/>
        <visualDescription h="10" w="10" x="1" y="26"/>
      </slice>
      <slice isRef="vs">
        <originRef cRef="vs" iRef="IField"/>
        <visualDescription h="10" w="10" x="14" y="22"/>
      </slice>
      <slice isRef="ws">
        <originRef cRef="ws" iRef="IField"/>
        <visualDescription h="10" w="10" x="25" y="26"/>
      </slice>
      <slice isRef="qs">
        <originRef cRef="qs" iRef="IField"/>
        <visualDescription h="10" w="10" x="37" y="26"/>
      </slice>
      <slice isRef="rho">
        <originRef cRef="rho" iRef="IField"/>
        <visualDescription h="10" w="10" x="49" y="27"/>
      </slice>
      <slice isRef="ainv">
        <originRef cRef="ainv" iRef="IField"/>
        <visualDescription h="10" w="10" x="27" y="3"/>
      </slice>
      <slice isRef="speed">
        <originRef cRef="speed" iRef="IField"/>
        <visualDescription h="10" w="10" x="48" y="2"/>
      </slice>
      <slice isRef="u">
        <originRef cRef="u" iRef="IField"/>
        <visualDescription h="10" w="10" x="67" y="2"/>
      </slice>
      <slice isRef="forcing">
        <originRef cRef="forcing" iRef="IField"/>
        <visualDescription h="10" w="10" x="69" y="15"/>
      </slice>
      <slice isRef="rhs">
        <originRef cRef="rhs" iRef="IField"/>
        <visualDescription h="10" w="10" x="65" y="26"/>
      </slice>
      <slice isRef="lhs">
        <originRef cRef="lhs" iRef="IField"/>
        <visualDescription h="10" w="10" x="57" y="13"/>
      </slice>
      <slice isRef="square">
        <originRef cRef="square" iRef="IField"/>
        <visualDescription h="10" w="10" x="9" y="2"/>
      </slice>
      <slice isRef="instance">
        <originRef cRef="instance" iRef="IInstance"/>
        <visualDescription h="10" w="10" x="0" y="9"/>
      </slice>
      <sources sourceType="C# Language" versionId="1.0.0.0">
        <file contents="/* Automatically Generated Code */&#xA;&#xA;using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using common.data.Field;&#xA;using common.data.ProblemDefinition;&#xA;using common.problem_size.Class;&#xA;using sp.problem_size.Instance_SP;&#xA;&#xA;namespace impl.common.data.ProblemDefinitionImpl { &#xA;&#xA;public abstract class BaseIProblemDefinitionImpl&lt;I, C>: DataStructure, BaseIProblemDefinition&lt;I,C>&#xA;where I:IInstance_SP&lt;C>&#xA;where C:IClass&#xA;{&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;private I instance = default(I);&#xA;&#xA;protected I Instance {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (instance==null) &#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;instance = (I) Services.getPort(&quot;instance&quot;);&#xA;        }&#xA;&#x9;&#x9;return instance;&#xA;&#x9;}&#xA;}&#x9;&#x9;&#xA;&#xA;private IField lhs = null;&#xA;&#xA;protected IField Lhs {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (lhs==null) &#xA;&#x9;&#x9;&#x9;lhs = (IField) Services.getPort(&quot;lhs&quot;);&#xA;&#x9;&#x9;return lhs;&#xA;&#x9;}&#xA;}&#xA;&#xA;private IField u = null;&#xA;&#xA;protected IField U {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (u == null) &#xA;&#x9;&#x9;&#x9;u = (IField) Services.getPort(&quot;u&quot;);&#xA;&#x9;&#x9;return u;&#xA;&#x9;}&#xA;}&#xA;&#xA;private IField us = null;&#xA;&#xA;protected IField Us {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (us == null) &#xA;&#x9;&#x9;&#x9;us = (IField) Services.getPort(&quot;us&quot;);&#xA;&#x9;&#x9;return us;&#xA;&#x9;}&#xA;}&#xA;&#xA;private IField vs = null;&#xA;&#xA;protected IField Vs {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (vs==null) &#xA;&#x9;&#x9;&#x9;vs = (IField) Services.getPort(&quot;vs&quot;);&#xA;&#x9;&#x9;return vs;&#xA;&#x9;}&#xA;}&#xA;&#xA;private IField ws = null;&#xA;&#xA;protected IField Ws {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (ws==null) &#xA;&#x9;&#x9;&#x9;ws = (IField) Services.getPort(&quot;ws&quot;);&#xA;&#x9;&#x9;return ws;&#xA;&#x9;}&#xA;}&#xA;&#xA;private IField qs = null;&#xA;&#xA;protected IField Qs {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (qs==null) &#xA;&#x9;&#x9;&#x9;qs = (IField) Services.getPort(&quot;qs&quot;);&#xA;&#x9;&#x9;return qs;&#xA;&#x9;}&#xA;}&#xA;&#xA;private IField rho = null;&#xA;&#xA;protected IField Rho {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (rho==null) &#xA;&#x9;&#x9;&#x9;rho = (IField) Services.getPort(&quot;rho&quot;);&#xA;&#x9;&#x9;return rho;&#xA;&#x9;}&#xA;}&#xA;&#xA;private IField ainv = null;&#xA;&#xA;protected IField Ainv {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (ainv==null) &#xA;&#x9;&#x9;&#x9;ainv = (IField) Services.getPort(&quot;ainv&quot;);&#xA;&#x9;&#x9;return ainv;&#xA;&#x9;}&#xA;}&#xA;&#xA;private IField speed = null;&#xA;&#xA;protected IField Speed {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (speed==null) &#xA;&#x9;&#x9;&#x9;speed = (IField) Services.getPort(&quot;speed&quot;);&#xA;&#x9;&#x9;return speed;&#xA;&#x9;}&#xA;}&#xA;&#xA;private IField square = null;&#xA;&#xA;protected IField Square {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (square==null) &#xA;&#x9;&#x9;&#x9;square = (IField) Services.getPort(&quot;square&quot;);&#xA;&#x9;&#x9;return square;&#xA;&#x9;}&#xA;}&#xA;&#xA;private IField rhs = null;&#xA;&#xA;protected IField Rhs {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (rhs==null) &#xA;&#x9;&#x9;&#x9;rhs = (IField) Services.getPort(&quot;rhs&quot;);&#xA;&#x9;&#x9;return rhs;&#xA;&#x9;}&#xA;}&#xA;&#xA;private IField forcing = null;&#xA;&#xA;protected IField Forcing {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (forcing==null) &#xA;&#x9;&#x9;&#x9;forcing = (IField) Services.getPort(&quot;forcing&quot;);&#xA;&#x9;&#x9;return forcing;&#xA;&#x9;}&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;" fileType="library" name="BaseIProblemDefinitionImpl.cs" srcType="base" uri="impl.common.data.ProblemDefinitionImpl/bin/1.0.0.0/BaseIProblemDefinitionImpl.dll" versionId="1.0.0.0">
          <dependency>common.data.Field/bin/1.0.0.0/IField.dll</dependency>
          <dependency>common.data.ProblemDefinition/bin/1.0.0.0/BaseIProblemDefinition.dll</dependency>
        </file>
        <file contents="using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using common.data.ProblemDefinition;&#xA;using common.problem_size.Class;&#xA;using sp.problem_size.Instance_SP;&#xA;&#xA;namespace impl.common.data.ProblemDefinitionImpl { &#xA;&#x9;     &#xA;public class IProblemDefinitionImpl&lt;I, C> : BaseIProblemDefinitionImpl&lt;I, C>, IProblemDefinition&lt;I, C>&#xA;where I:IInstance_SP&lt;C>&#xA;where C:IClass&#xA;{&#xA;&#x9;&#x9;&#xA;&#x9;public IProblemDefinitionImpl()&#xA;&#x9;{&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;protected int _IMAX_ = 0, _JMAX_ = 0, _KMAX_ = 0, _MAX_CELL_DIM_ = 0, BUF_SIZE = 0, IMAXP, JMAXP,&#xA;&#x9;&#x9;&#x9;&#x9;  problem_size = 0, _maxcells_ = 0, ncells = 0;&#xA;&#x9;protected int[] _grid_points_ = { 0, 0, 0 };&#xA;&#x9;protected int niter_default = 0;&#xA;&#x9;protected double dt_default = 0.0d;&#x9;&#x9;&#xA;&#x9;&#xA;&#x9;public int NCells { get { return ncells; } }&#xA;&#x9;&#x9;&#xA;&#x9;public double [,,,,] Field_u       { get { return U.Field; } }&#x9;&#xA;&#x9;public double [,,,,] Field_rhs     { get { return Rhs.Field; } }&#x9;&#xA;&#x9;public double [,,,,] Field_lhs     { get { return Lhs.Field; } }&#x9;&#xA;&#x9;public double [,,,,] Field_forcing { get { return Forcing.Field; } }&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;public double [,,,,] Field_us       { get { return Us.Field; } }&#x9;&#xA;&#x9;public double [,,,,] Field_vs       { get { return Vs.Field; } }&#x9;&#xA;&#x9;public double [,,,,] Field_ws       { get { return Ws.Field; } }&#x9;&#xA;&#x9;public double [,,,,] Field_qs       { get { return Qs.Field; } }&#x9;&#xA;&#x9;public double [,,,,] Field_ainv     { get { return Ainv.Field; } }&#x9;&#xA;&#x9;public double [,,,,] Field_rho      { get { return Rho.Field; } }&#x9;&#xA;&#x9;public double [,,,,] Field_speed    { get { return Speed.Field; } }&#x9;&#xA;&#x9;public double [,,,,] Field_square   { get { return Square.Field; } }&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;public int MAX_CELL_DIM { get { return _MAX_CELL_DIM_; } set { _MAX_CELL_DIM_ = value; } }&#x9;&#xA;&#x9;public int maxcells { get { return _maxcells_; } set { _maxcells_ = value; }}&#x9;&#xA;&#x9;public int IMAX { get { return _IMAX_; } set { _IMAX_ = value; } }&#x9;&#xA;&#x9;public int JMAX { get { return _JMAX_; } set { _JMAX_ = value; } }&#x9;&#xA;&#x9;public int KMAX { get { return _KMAX_; } set { _KMAX_ = value; } }&#x9;&#xA;&#x9;public int[] grid_points { get { return _grid_points_; } }&#xA;&#x9;&#x9;&#xA;&#x9;override public void initialize() &#xA;&#x9;{&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;setProblemClass();&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;int total_nodes = this.Ranks.Length;&#xA;&#x9;&#x9;maxcells =  Convert.ToInt32(Math.Sqrt(total_nodes));&#xA;&#x9;&#x9;ncells = Convert.ToInt32(Math.Sqrt(total_nodes));&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;    MAX_CELL_DIM = (problem_size/maxcells)+1;                &#xA;&#x9;&#x9;IMAX = JMAX = KMAX =  MAX_CELL_DIM; &#xA;&#x9;&#x9;_grid_points_[0] = _grid_points_[1] = _grid_points_[2] = problem_size;&#xA;&#x9;    IMAXP = IMAX/2 * 2 + 1;&#xA;&#x9;    JMAXP = JMAX/2 * 2 + 1;&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;set_constants(0, dt_default);&#xA;&#xA;&#x9;&#x9;U.initialize_field(&quot;u&quot;, maxcells, KMAX+4, JMAXP+4, IMAXP+4, 5);&#xA;&#x9;&#x9;Rhs.initialize_field(&quot;rhs&quot;, maxcells, KMAX+2, JMAXP+2, IMAXP+2, 5);&#xA;&#x9;&#x9;Lhs.initialize_field(&quot;lhs&quot;, maxcells, KMAX+2, JMAXP+2, IMAXP+2, 15);&#xA;&#x9;&#x9;Forcing.initialize_field(&quot;forcing&quot;, maxcells, KMAX+2, JMAXP+2, IMAXP+2, 5);&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;Us.initialize_field(&quot;us&quot;, maxcells, KMAX+3, JMAX+3, IMAX+3);&#xA;&#x9;&#x9;Vs.initialize_field(&quot;vs&quot;, maxcells, KMAX+3, JMAX+3, IMAX+3);&#xA;&#x9;&#x9;Ws.initialize_field(&quot;ws&quot;, maxcells, KMAX+3, JMAX+3, IMAX+3);&#xA;&#x9;&#x9;Qs.initialize_field(&quot;qs&quot;, maxcells, KMAX+3, JMAX+3, IMAX+3);&#xA;&#x9;&#x9;Ainv.initialize_field(&quot;ainv&quot;, maxcells, KMAX+3, JMAX+3, IMAX+3);&#xA;&#x9;&#x9;Rho.initialize_field(&quot;rho&quot;, maxcells, KMAX+3, JMAX+3, IMAX+3);&#xA;&#x9;&#x9;Speed.initialize_field(&quot;speed&quot;, maxcells, KMAX+3, JMAX+3, IMAX+3);&#xA;&#x9;&#x9;Square.initialize_field(&quot;square&quot;, maxcells, KMAX+3, JMAX+3, IMAX+3);&#x9;&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;private void setProblemClass() &#xA;&#x9;{&#xA;        problem_size = Instance.problem_size;&#xA;&#x9;&#x9;dt_default = Instance.dt_default;&#xA;&#x9;&#x9;niter_default = Instance.niter_default;&#xA;&#x9;}&#x9;&#xA;&#x9;&#xA;  private void set_constants(int ndid, double dt)&#xA;  {&#x9;&#x9;&#x9;&#xA;&#x9;Constants.set_constants(ndid,grid_points, dt);&#xA;  }&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;}&#xA;&#xA;}&#xA;" fileType="library" name="IProblemDefinitionImpl.cs" srcType="user" uri="impl.common.data.ProblemDefinitionImpl/bin/1.0.0.0/IProblemDefinitionImpl.dll" versionId="1.0.0.0">
          <dependency>%WORKSPACE/impl.common.data.ProblemDefinitionImpl/bin/1.0.0.0/BaseIProblemDefinitionImpl.dll</dependency>
          <dependency>common.data.ProblemDefinition/bin/1.0.0.0/IProblemDefinition.dll</dependency>
        </file>
      </sources>
      <visualDescription h="88" w="132" x="322" y="78">
        <color b="0" g="255" r="0"/>
      </visualDescription>
      <parameter iname="IInstance_SP" order="0" parid="instance_type" uname="instance" varid="I"/>
      <parameter iname="IClass" order="1" parid="class" uname="class" varid="C"/>
    </interface>
    <unit iRef="IProblemDefinitionImpl" private="false" uRef="problem" visibleInterface="true">
      <super cRef="base" uRef="problem"/>
      <slices cRef="us" replica="0" uRef="field" sliceName="us" transitive="false">
        <visualDescription h="10" w="10" x="1" y="26"/>
      </slices>
      <slices cRef="vs" replica="0" uRef="field" sliceName="vs" transitive="false">
        <visualDescription h="10" w="10" x="14" y="22"/>
      </slices>
      <slices cRef="ws" replica="0" uRef="field" sliceName="ws" transitive="false">
        <visualDescription h="10" w="10" x="25" y="26"/>
      </slices>
      <slices cRef="qs" replica="0" uRef="field" sliceName="qs" transitive="false">
        <visualDescription h="10" w="10" x="37" y="26"/>
      </slices>
      <slices cRef="rho" replica="0" uRef="field" sliceName="rho" transitive="false">
        <visualDescription h="10" w="10" x="49" y="27"/>
      </slices>
      <slices cRef="ainv" replica="0" uRef="field" sliceName="ainv" transitive="false">
        <visualDescription h="10" w="10" x="27" y="3"/>
      </slices>
      <slices cRef="speed" replica="0" uRef="field" sliceName="speed" transitive="false">
        <visualDescription h="10" w="10" x="48" y="2"/>
      </slices>
      <slices cRef="u" replica="0" uRef="field" sliceName="u" transitive="false">
        <visualDescription h="10" w="10" x="67" y="2"/>
      </slices>
      <slices cRef="forcing" replica="0" uRef="field" sliceName="forcing" transitive="false">
        <visualDescription h="10" w="10" x="69" y="15"/>
      </slices>
      <slices cRef="rhs" replica="0" uRef="field" sliceName="rhs" transitive="false">
        <visualDescription h="10" w="10" x="65" y="26"/>
      </slices>
      <slices cRef="lhs" replica="0" uRef="field" sliceName="lhs" transitive="false">
        <visualDescription h="10" w="10" x="57" y="13"/>
      </slices>
      <slices cRef="square" replica="0" uRef="field" sliceName="square" transitive="false">
        <visualDescription h="10" w="10" x="9" y="2"/>
      </slices>
      <slices cRef="instance" replica="0" uRef="instance" sliceName="instance" transitive="false">
        <visualDescription h="10" w="10" x="0" y="9"/>
      </slices>
      <visualDescription h="40" w="80" x="49" y="134"/>
    </unit>
    <enumerator cardinality="-1" fromSplit="false" ref="hPE.frontend.base.model.HReplicator@1b2533d1295099559883" varId="n">
      <originRef>base</originRef>
      <originRef>qs</originRef>
      <links xsi:type="component:EnumerableUnitType" ref="problem"/>
      <visualDescription h="60" w="61" x="88" y="330"/>
    </enumerator>
  </componentInfo>
</component:component>