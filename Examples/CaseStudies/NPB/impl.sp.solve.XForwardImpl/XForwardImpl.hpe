<?xml version="1.0" encoding="ASCII"?>
<component:component xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:component="http://www.example.org/HashComponent">
  <header hash_component_UID="00240000048000009400000006020000002400005253413100040000110000003b9a123ce9c40207e7d19e5e18cd3f94357433a419eee738e2d0461329c5e44c3e45620055b73b3cc27fca2cffa65cff9527a308d1a0baf55c2a9cc58c8468bb81aabc66ac6ff2143ec298b12446d2eece98bda46f827f1ab22f3a5fed8f8509e64f8c850f56eb5ae4c9c32f71b422051c77345dde28434fe9a50549c188a68f" isAbstract="false" kind="Computation" name="XForwardImpl" packagePath="impl.sp.solve">
    <baseType>
      <extensionType>
        <implements>true</implements>
      </extensionType>
      <component hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000bf3b077fd7fdb53f8868745cfa6b3337ded93d8905fbe7289bd61960ab52862ebd80a7aaec7625667b9fd0ce765ece1e73858766e9c482be9e9d8a7eed7a3fdab32d03cd765de942a38cb2668ddaadac495fe0a625d31d025862f6289c33c74669b3317afbc86223dfa02b3abe427c65bf947f7e24d2b605ca92a33cfddaf2c5" localRef="base" location="common.solve.Forward/Forward.hpe" name="Forward" package="common.solve" version="1.0.0.0">
        <visualDescription h="30" w="50" x="218" y="184">
          <color b="255" g="255" r="255"/>
        </visualDescription>
        <parameter formFieldId="instance_type" varName="I"/>
        <parameter formFieldId="orientation" varName="DIR"/>
        <parameter formFieldId="class" varName="C"/>
        <parameter formFieldId="method" varName="MTH"/>
        <port hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000cfe94b8926d4a7de4f70d204303375a68658c9c988f5e0ec7f1f3dce28b75501399411f8002d0637e06b03a2849ef779a22e26ae137759213f595fd13ccb5101bb6f07e7560df0d8b1beadc8dacecefd49c7844d298e78991b98dd4650ec7bf0b26716727a7bc437f39a5ccede87c7db6829de68c511abb9d0b4e3644bcf66ad" localRef="blocks_info" location="common.datapartition.BlocksInfo/BlocksInfo.hpe" name="BlocksInfo" package="common.datapartition" exposed="true">
          <visualDescription h="56" w="114" x="264" y="422">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <unitBounds uRef="blocks">
            <visualDescription h="10" w="10" x="5" y="2"/>
          </unitBounds>
        </port>
        <port hash_component_UID="002400000480000094000000060200000024000052534131000400001100000009b97ce4f3981d78e251ff90894751a2f19e3d7fcafeadee8da1cb93890a7d9ed59b4773f575afc0782c61b877ac17cea1ab4429bfd162c1bdff0b6c7fe9d07f8e9ccdcd219b58671c77cf6cfbada633e18309cb4c2e518fedeaa6aecf435a12dc4a18c8384c15d61dfab5a2056f58c2bcf936823b8d84a8c5cc5e25827a1598" localRef="problem_data" location="common.data.ProblemDefinition/ProblemDefinition.hpe" name="ProblemDefinition" package="common.data" exposed="true">
          <visualDescription h="45" w="106" x="57" y="434">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <parameter formFieldId="instance_type" varName="I"/>
          <parameter formFieldId="class" varName="C"/>
          <unitBounds uRef="problem">
            <visualDescription h="10" w="10" x="5" y="2"/>
          </unitBounds>
        </port>
        <unitBounds uRef="forward">
          <visualDescription h="10" w="10" x="5" y="2"/>
        </unitBounds>
      </component>
    </baseType>
    <versions field1="1" field2="0" field3="0" field4="0"/>
    <visualAttributes>
      <color b="255" g="255" r="255"/>
    </visualAttributes>
  </header>
  <componentInfo>
    <innerComponent hash_component_UID="002400000480000094000000060200000024000052534131000400001100000099ec807d7886f0c2735f4a4c2dc60d8feb0a435847e291a0f9dd7aed2539883c551cf8dd8fe530fe7d695458a20d532e4a58b5cf62af87f410238ec43d1e140b210efe08dea6fc4983660e10cc3431cd1102137a5df63ef9bef47a99b409c0b1c86bd4aa322397fd56e1ed3be2e81f8d1a9765c5dc9134ec1eb1b5d4567311ae" localRef="xdir" location="common.orientation.X/X.hpe" name="X" package="common.orientation" exposed="false">
      <visualDescription h="30" w="50" x="106" y="177">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds uRef="x">
        <visualDescription h="10" w="10" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000159d9ccb4ff0bb35a4fe190495e9c0d9a8406fa4adae5405850aed7cf83bbe6096bcb7deb5b07550a718fabec888b38f45c00ad4323db7b35e01dd236f9d1af6d8d0e529844de79031b63f05f2e810d0218c315e2c720d374b2bc2c0b15ec45863f2832e19f30c9bf6ee1519c76cd5e6f0ed485d2027397f93caec006396c587" localRef="method" location="common.solve.BeamWarmingMethod/BeamWarmingMethod.hpe" name="BeamWarmingMethod" package="common.solve" exposed="false">
      <visualDescription h="30" w="50" x="56" y="133">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds uRef="method">
        <visualDescription h="10" w="10" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000237f437b205f7bfa00c2d0b40167897c37f84c96a62c077e2832a5360fa8c1c7438dfa969d99bb36a48a7baefcbd50d84ae2e3e71a349dce24c2b0bc473997871be48fdb29d0d48b0928ca968440c6b6663c6740810dab7b664db0e0cfbfe5b21f223402d0d9bd601294898724b6a1da46e78261ef1ee37ac63ca9b2dbdc0d90" localRef="class" location="common.problem_size.Class/Class.hpe" name="Class" package="common.problem_size" exposed="false">
      <visualDescription h="30" w="50" x="102" y="170">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds uRef="class">
        <visualDescription h="10" w="10" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000796ff7bbb33560060ee9951c4f8242d987089c0c50af1d3a6ab2f92466788c33bfa42e66a347c4206d81a948be78598f82f386b898f40714662cb0134d02313a7e06d04944957cb9149a5069ebfcc65b58711afd15bfbe6f3144cf719a1d8c90833890d5ed1eac7e3b8a657a774a065ca04588c7743c47a41fe59e21cd7767a4" localRef="instance" location="sp.problem_size.Instance_SP/Instance_SP.hpe" name="Instance_SP" package="sp.problem_size" exposed="false">
      <visualDescription h="30" w="50" x="111" y="389">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <parameter formFieldId="class" varName="C"/>
      <unitBounds uRef="instance">
        <visualDescription h="10" w="10" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <supplyParameter cRef="class" varName="C"/>
    <supplyParameter cRef="xdir" varName="DIR"/>
    <supplyParameter cRef="method" varName="MTH"/>
    <supplyParameter cRef="instance" varName="I"/>
    <interface iRef="IXForwardImpl" nArgs="4">
      <slice isRef="blocks">
        <originRef cRef="blocks_info" iRef="IBlocks"/>
        <visualDescription h="10" w="10" x="59" y="26"/>
      </slice>
      <slice isRef="problem">
        <originRef cRef="problem_data" iRef="IProblemDefinition"/>
        <visualDescription h="10" w="10" x="11" y="23"/>
      </slice>
      <slice isRef="method">
        <originRef cRef="method" iRef="IMethod"/>
        <visualDescription h="10" w="10" x="30" y="27"/>
      </slice>
      <slice isRef="axis">
        <originRef cRef="orientation" iRef="IAxis"/>
        <visualDescription h="10" w="10" x="47" y="28"/>
      </slice>
      <protocol xsi:type="component:ActionSkipType" label="hPE.frontend.kinds.activate.model.protocol.HSkipAction@be12fc" repeat="0">
        <visualDescription h="50" w="50" x="75" y="75"/>
      </protocol>
      <sources sourceType="C# Language" versionId="1.0.0.0">
        <file contents="/* Automatically Generated Code */&#xA;&#xA;using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using common.datapartition.BlocksInfo;&#xA;using common.data.ProblemDefinition;&#xA;using sp.problem_size.Instance_SP;&#xA;using common.problem_size.Class;&#xA;using common.orientation.Axis;&#xA;using common.solve.Method;&#xA;using common.solve.BeamWarmingMethod;&#xA;using common.orientation.X;&#xA;using common.solve.Forward;&#xA;&#xA;namespace impl.sp.solve.XForwardImpl { &#xA;&#xA;public abstract class BaseIXForwardImpl&lt;I, C, MTH, DIR>: Computation, BaseIForward&lt;I, C, MTH, DIR>&#xA;where I:IInstance_SP&lt;C>&#xA;where C:IClass&#xA;where MTH:IBeamWarmingMethod&#xA;where DIR:IX&#xA;{&#xA;&#x9;&#x9;&#xA;protected int[,] start, end, slice, cell_size;&#xA;protected double[,,,,] lhs, rhs;&#xA;&#x9;&#x9;&#xA;private IBlocks blocks = null;&#xA;&#xA;public IBlocks Blocks {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.blocks == null)&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;this.blocks = (IBlocks) Services.getPort(&quot;blocks_info&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;start = Blocks.cell_start;&#xA;&#x9;&#x9;&#x9;end = Blocks.cell_end;&#xA;&#x9;&#x9;&#x9;slice = Blocks.cell_slice;&#xA;&#x9;&#x9;&#x9;cell_size = Blocks.cell_size;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;    }&#xA;&#x9;&#x9;return this.blocks;&#xA;&#x9;}&#xA;}&#xA;&#xA;private IProblemDefinition&lt;I, C> problem = null;&#xA;&#xA;public IProblemDefinition&lt;I, C> Problem {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.problem == null)&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;this.problem = (IProblemDefinition&lt;I, C>) Services.getPort(&quot;problem_data&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;lhs = Problem.Field_lhs;&#xA;&#x9;&#x9;&#x9;rhs = Problem.Field_rhs;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;return this.problem;&#xA;&#x9;}&#xA;}&#xA;&#xA;private DIR axis = default(DIR);&#xA;&#xA;protected DIR Axis {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.axis == null)&#xA;&#x9;&#x9;&#x9;this.axis = (DIR) Services.getPort(&quot;orientation&quot;);&#xA;&#x9;&#x9;return this.axis;&#xA;&#x9;}&#xA;}&#xA;&#xA;private MTH method = default(MTH);&#xA;&#xA;protected MTH Method {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.method == null)&#xA;&#x9;&#x9;&#x9;this.method = (MTH) Services.getPort(&quot;method&quot;);&#xA;&#x9;&#x9;return this.method;&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;abstract public void compute(); &#xA;&#xA;&#xA;}&#xA;&#xA;}&#xA;" fileType="library" name="BaseIXForwardImpl.cs" srcType="base" uri="impl.sp.solve.XForwardImpl/bin/1.0.0.0/BaseIXForwardImpl.dll" versionId="1.0.0.0">
          <dependency>common.datapartition.BlocksInfo/bin/1.0.0.0/IBlocks.dll</dependency>
          <dependency>common.data.ProblemDefinition/bin/1.0.0.0/IProblemDefinition.dll</dependency>
          <dependency>sp.problem_size.Instance_SP/bin/1.0.0.0/IInstance_SP.dll</dependency>
          <dependency>common.problem_size.Class/bin/1.0.0.0/IClass.dll</dependency>
          <dependency>common.orientation.Axis/bin/1.0.0.0/IAxis.dll</dependency>
          <dependency>common.solve.Method/bin/1.0.0.0/IMethod.dll</dependency>
          <dependency>common.solve.BeamWarmingMethod/bin/1.0.0.0/IBeamWarmingMethod.dll</dependency>
          <dependency>common.orientation.X/bin/1.0.0.0/IX.dll</dependency>
          <dependency>common.solve.Forward/bin/1.0.0.0/BaseIForward.dll</dependency>
        </file>
        <file contents="using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using sp.problem_size.Instance_SP;&#xA;using common.problem_size.Class;&#xA;using common.solve.BeamWarmingMethod;&#xA;using common.orientation.X;&#xA;using common.solve.Forward;&#xA;&#xA;namespace impl.sp.solve.XForwardImpl { &#xA;&#xA;&#x9;public class IXForwardImpl&lt;I, C, MTH, DIR> : BaseIXForwardImpl&lt;I, C, MTH, DIR>, IForward&lt;I, C, MTH, DIR>&#xA;&#x9;&#x9;where I:IInstance_SP&lt;C>&#xA;&#x9;&#x9;where C:IClass&#xA;&#x9;&#x9;where MTH:IBeamWarmingMethod&#xA;&#x9;&#x9;where DIR:IX&#xA;&#x9;{&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public IXForwardImpl()&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;}&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;private int c, istart, iend, jsize, ksize;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public void enterStage(int stage)&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;{&#xA;            c = slice[stage, 0];&#xA;&#xA;            istart = 2;&#xA;            iend = 2 + cell_size[c, 0] - 1;&#xA;&#xA;            jsize = cell_size[c, 1] + 2;&#xA;            ksize = cell_size[c, 2] + 2;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public override void compute() &#xA;&#x9;&#x9;{ &#xA;&#x9;&#x9;&#x9;int i, j, k, n,  i1, i2, m;&#xA;&#x9;&#x9;&#x9;double fac1, fac2;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;// **************************&#xA;&#x9;&#x9;&#x9;&#xA;            n = -1;&#xA;&#xA;            for (k = start[c, 2]; k &lt; ksize - end[c, 2]; k++)&#xA;            {&#xA;                for (j = start[c, 1]; j &lt; jsize - end[c, 1]; j++)&#xA;                {&#xA;                    for (i = istart; i &lt;= iend - 2; i++)&#xA;                    {&#xA;                        i1 = i + 1;&#xA;                        i2 = i + 2;&#xA;                        fac1 = 1.0d / lhs[c, k, j, i, n + 3];&#xA;                        lhs[c, k, j, i, n + 4] = fac1 * lhs[c, k, j, i, n + 4];&#xA;                        lhs[c, k, j, i, n + 5] = fac1 * lhs[c, k, j, i, n + 5];&#xA;                        for (m = 0; m &lt;= 2; m++)&#xA;                        {&#xA;                            rhs[c, k, j, i, m] = fac1 * rhs[c, k, j, i, m];&#xA;                        }&#xA;                        lhs[c, k, j, i1, n + 3] = lhs[c, k, j, i1, n + 3] -&#xA;                                       lhs[c, k, j, i1, n + 2] * lhs[c, k, j, i, n + 4];&#xA;                        lhs[c, k, j, i1, n + 4] = lhs[c, k, j, i1, n + 4] -&#xA;                                       lhs[c, k, j, i1, n + 2] * lhs[c, k, j, i, n + 5];&#xA;                        for (m = 0; m &lt;= 2; m++)&#xA;                        {&#xA;                            rhs[c, k, j, i1, m] = rhs[c, k, j, i1, m] -&#xA;                                        lhs[c, k, j, i1, n + 2] * rhs[c, k, j, i, m];&#xA;                        }&#xA;                        lhs[c, k, j, i2, n + 2] = lhs[c, k, j, i2, n + 2] -&#xA;                                       lhs[c, k, j, i2, n + 1] * lhs[c, k, j, i, n + 4];&#xA;                        lhs[c, k, j, i2, n + 3] = lhs[c, k, j, i2, n + 3] -&#xA;                                       lhs[c, k, j, i2, n + 1] * lhs[c, k, j, i, n + 5];&#xA;                        for (m = 0; m &lt;= 2; m++)&#xA;                        {&#xA;                            rhs[c, k, j, i2, m] = rhs[c, k, j, i2, m] -&#xA;                                        lhs[c, k, j, i2, n + 1] * rhs[c, k, j, i, m];&#xA;                        }&#xA;                    }&#xA;                }&#xA;            }&#xA;&#xA;            //---------------------------------------------------------------------&#xA;            //      The last two rows in this grid block are a bit different, &#xA;            //      since they do not have two more rows available for the&#xA;            //      elimination of off-diagonal entries&#xA;            //---------------------------------------------------------------------&#xA;&#xA;            i = iend - 1;&#xA;            i1 = iend;&#xA;            for (k = start[c, 2]; k &lt; ksize - end[c, 2]; k++)&#xA;            {&#xA;                for (j = start[c, 1]; j &lt; jsize - end[c, 1]; j++)&#xA;                {&#xA;                    fac1 = 1.0d / lhs[c, k, j, i, n + 3];&#xA;                    lhs[c, k, j, i, n + 4] = fac1 * lhs[c, k, j, i, n + 4];&#xA;                    lhs[c, k, j, i, n + 5] = fac1 * lhs[c, k, j, i, n + 5];&#xA;                    for (m = 0; m &lt;= 2; m++)&#xA;                    {&#xA;                        rhs[c, k, j, i, m] = fac1 * rhs[c, k, j, i, m];&#xA;                    }&#xA;                    lhs[c, k, j, i1, n + 3] = lhs[c, k, j, i1, n + 3] -&#xA;                                   lhs[c, k, j, i1, n + 2] * lhs[c, k, j, i, n + 4];&#xA;                    lhs[c, k, j, i1, n + 4] = lhs[c, k, j, i1, n + 4] -&#xA;                                   lhs[c, k, j, i1, n + 2] * lhs[c, k, j, i, n + 5];&#xA;                    for (m = 0; m &lt;= 2; m++)&#xA;                    {&#xA;                        rhs[c, k, j, i1, m] = rhs[c, k, j, i1, m] -&#xA;                                    lhs[c, k, j, i1, n + 2] * rhs[c, k, j, i, m];&#xA;                    }&#xA;                    //---------------------------------------------------------------------&#xA;                    //            scale the last row immediately &#xA;                    //---------------------------------------------------------------------&#xA;                    fac2 = 1.0d / lhs[c, k, j, i1, n + 3];&#xA;                    lhs[c, k, j, i1, n + 4] = fac2 * lhs[c, k, j, i1, n + 4];&#xA;                    lhs[c, k, j, i1, n + 5] = fac2 * lhs[c, k, j, i1, n + 5];&#xA;                    for (m = 0; m &lt;= 2; m++)&#xA;                    {&#xA;                        rhs[c, k, j, i1, m] = fac2 * rhs[c, k, j, i1, m];&#xA;                    }&#xA;                }&#xA;            }&#xA;&#xA;            //---------------------------------------------------------------------&#xA;            //      do the u+c and the u-c factors                 &#xA;            //---------------------------------------------------------------------&#xA;&#xA;            for (m = 3; m &lt;= 4; m++)&#xA;            {&#xA;                n = (m - 2) * 5 - 1;&#xA;                for (k = start[c, 2]; k &lt; ksize - end[c, 2]; k++)&#xA;                {&#xA;                    for (j = start[c, 1]; j &lt; jsize - end[c, 1]; j++)&#xA;                    {&#xA;                        for (i = istart; i &lt;= iend - 2; i++)&#xA;                        {&#xA;                            i1 = i + 1;&#xA;                            i2 = i + 2;&#xA;                            fac1 = 1.0d / lhs[c, k, j, i, n + 3];&#xA;                            lhs[c, k, j, i, n + 4] = fac1 * lhs[c, k, j, i, n + 4];&#xA;                            lhs[c, k, j, i, n + 5] = fac1 * lhs[c, k, j, i, n + 5];&#xA;                            rhs[c, k, j, i, m] = fac1 * rhs[c, k, j, i, m];&#xA;                            lhs[c, k, j, i1, n + 3] = lhs[c, k, j, i1, n + 3] -&#xA;                                          lhs[c, k, j, i1, n + 2] * lhs[c, k, j, i, n + 4];&#xA;                            lhs[c, k, j, i1, n + 4] = lhs[c, k, j, i1, n + 4] -&#xA;                                          lhs[c, k, j, i1, n + 2] * lhs[c, k, j, i, n + 5];&#xA;                            rhs[c, k, j, i1, m] = rhs[c, k, j, i1, m] -&#xA;                                          lhs[c, k, j, i1, n + 2] * rhs[c, k, j, i, m];&#xA;                            lhs[c, k, j, i2, n + 2] = lhs[c, k, j, i2, n + 2] -&#xA;                                          lhs[c, k, j, i2, n + 1] * lhs[c, k, j, i, n + 4];&#xA;                            lhs[c, k, j, i2, n + 3] = lhs[c, k, j, i2, n + 3] -&#xA;                                          lhs[c, k, j, i2, n + 1] * lhs[c, k, j, i, n + 5];&#xA;                            rhs[c, k, j, i2, m] = rhs[c, k, j, i2, m] -&#xA;                                          lhs[c, k, j, i2, n + 1] * rhs[c, k, j, i, m];&#xA;                        }&#xA;                    }&#xA;                }&#xA;&#xA;&#xA;//                    Console.WriteLine(node + &quot;: X-SOLVE - PASS 3&quot; + stage);&#xA;&#xA;                //---------------------------------------------------------------------&#xA;                //         And again the last two rows separately&#xA;                //---------------------------------------------------------------------&#xA;                i = iend - 1;&#xA;                i1 = iend;&#xA;&#xA;                for (k = start[c, 2]; k &lt; ksize - end[c, 2]; k++)&#xA;                {&#xA;                    for (j = start[c, 1]; j &lt; jsize - end[c, 1]; j++)&#xA;                    {&#xA;                        fac1 = 1.0d / lhs[c, k, j, i, n + 3];&#xA;                        lhs[c, k, j, i, n + 4] = fac1 * lhs[c, k, j, i, n + 4];&#xA;                        lhs[c, k, j, i, n + 5] = fac1 * lhs[c, k, j, i, n + 5];&#xA;                        rhs[c, k, j, i, m] = fac1 * rhs[c, k, j, i, m];                        //*&#xA;                        lhs[c, k, j, i1, n + 3] = lhs[c, k, j, i1, n + 3] -&#xA;                                       lhs[c, k, j, i1, n + 2] * lhs[c, k, j, i, n + 4];       //*&#xA;                        lhs[c, k, j, i1, n + 4] = lhs[c, k, j, i1, n + 4] -&#xA;                                       lhs[c, k, j, i1, n + 2] * lhs[c, k, j, i, n + 5];&#xA;                        rhs[c, k, j, i1, m] = rhs[c, k, j, i1, m] -&#xA;                                       lhs[c, k, j, i1, n + 2] * rhs[c, k, j, i, m];           //*&#xA;                        //---------------------------------------------------------------------&#xA;                        //               Scale the last row immediately&#xA;                        //---------------------------------------------------------------------&#xA;                        fac2 = 1.0d / lhs[c, k, j, i1, n + 3];&#xA;                        lhs[c, k, j, i1, n + 4] = fac2 * lhs[c, k, j, i1, n + 4];&#xA;                        lhs[c, k, j, i1, n + 5] = fac2 * lhs[c, k, j, i1, n + 5];&#xA;                        rhs[c, k, j, i1, m] = fac2 * rhs[c, k, j, i1, m];                     //*&#xA;&#xA;                    }&#xA;                }&#xA;            }&#xA;&#x9;&#x9;} // end activate method &#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#xA;}&#xA;" fileType="library" name="IXForwardImpl.cs" srcType="user" uri="impl.sp.solve.XForwardImpl/bin/1.0.0.0/IXForwardImpl.dll" versionId="1.0.0.0">
          <dependency>sp.problem_size.Instance_SP/bin/1.0.0.0/IInstance_SP.dll</dependency>
          <dependency>common.problem_size.Class/bin/1.0.0.0/IClass.dll</dependency>
          <dependency>common.solve.BeamWarmingMethod/bin/1.0.0.0/IBeamWarmingMethod.dll</dependency>
          <dependency>common.orientation.X/bin/1.0.0.0/IX.dll</dependency>
          <dependency>%WORKSPACE/impl.sp.solve.XForwardImpl/bin/1.0.0.0/BaseIXForwardImpl.dll</dependency>
          <dependency>common.solve.Forward/bin/1.0.0.0/IForward.dll</dependency>
        </file>
      </sources>
      <visualDescription h="40" w="101" x="87" y="125">
        <color b="255" g="0" r="0"/>
      </visualDescription>
      <port name="blocks">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="blocks" sRef="blocks"/>
      </port>
      <port name="problem">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="problem" sRef="problem"/>
      </port>
      <parameter iname="IInstance_SP" order="0" parid="instance_type" uname="instance" varid="I"/>
      <parameter iname="IClass" order="1" parid="class" uname="class" varid="C"/>
      <parameter iname="IBeamWarmingMethod" order="2" parid="method" uname="method" varid="MTH"/>
      <parameter iname="IX" order="3" parid="orientation" uname="x" varid="DIR"/>
    </interface>
    <unit iRef="IXForwardImpl" private="false" uRef="forward" visibleInterface="true">
      <super cRef="base" uRef="forward"/>
      <slices cRef="blocks_info" replica="0" uRef="blocks" sliceName="blocks" transitive="false">
        <visualDescription h="10" w="10" x="59" y="26"/>
      </slices>
      <slices cRef="problem_data" replica="0" uRef="problem" sliceName="problem" transitive="false">
        <visualDescription h="10" w="10" x="11" y="23"/>
      </slices>
      <slices cRef="method" replica="0" uRef="method" sliceName="method" transitive="false">
        <visualDescription h="10" w="10" x="30" y="27"/>
      </slices>
      <slices cRef="orientation" replica="0" uRef="axis" sliceName="axis" transitive="false">
        <visualDescription h="10" w="10" x="47" y="28"/>
      </slices>
      <visualDescription h="40" w="80" x="155" y="246"/>
    </unit>
    <enumerator cardinality="-1" fromSplit="false" ref="hPE.frontend.base.model.HReplicator@1b2533d1295099559883" varId="n">
      <originRef>base</originRef>
      <originRef>problem_data</originRef>
      <originRef>speed</originRef>
      <links xsi:type="component:EnumerableUnitType" ref="forward"/>
      <visualDescription h="33" w="37" x="55" y="278"/>
    </enumerator>
    <enumerator cardinality="-1" fromSplit="false" ref="hPE.frontend.base.model.HReplicator@1ab5deb1295025097082" varId="n">
      <originRef>xdir</originRef>
      <originRef>base</originRef>
      <links xsi:type="component:EnumerableEntryType" cRef="xdir" uRef="x"/>
      <visualDescription h="20" w="20" x="354" y="190"/>
    </enumerator>
    <enumerator cardinality="-1" fromSplit="false" ref="hPE.frontend.base.model.HReplicator@129a52a1295029089610" varId="n">
      <originRef>method</originRef>
      <originRef>base</originRef>
      <links xsi:type="component:EnumerableEntryType" cRef="method" uRef="method"/>
      <visualDescription h="20" w="20" x="260" y="427"/>
    </enumerator>
  </componentInfo>
</component:component>