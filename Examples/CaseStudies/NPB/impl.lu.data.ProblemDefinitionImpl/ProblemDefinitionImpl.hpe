<?xml version="1.0" encoding="ASCII"?>
<component:component xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:component="http://www.example.org/HashComponent">
  <header hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000891c444d30aacf22a66992be1a134a5432ef0f139f859f1be046939781fa94c17f2375c2dca314b854d8894f3e9c8d52a123314523ff269c0f244d2c4b9957191b3c0bf40ae124befea4a9e41846101a2e96e137242381fdb99d2402296d4b2117c43a46760fb5f28b00da8f438a61d7b5bbae27a9ac10e15b3eeb4a3761c09a" isAbstract="false" kind="Data" name="ProblemDefinitionImpl" packagePath="impl.lu.data">
    <baseType>
      <extensionType>
        <implements>true</implements>
      </extensionType>
      <component hash_component_UID="00240000048000009400000006020000002400005253413100040000110000009f8aadd94be2122c6dbf97a8db4c368df4aa14e5eef40999c777e681c973106bec55b80c133f1e7301d0ff36e2ee37a1d7d095ffff4581f295b2e8fc055fc07304178d993e14731e9c3d1e72370eee41c30ae18e6d096d5d70ac13a2833e8945cd641f4a3cab17bc2397b395bc234fdfa244afa599eb514a94d884e663b3a3a5" localRef="base" location="lu.data.ProblemDefinition/ProblemDefinition.hpe" name="ProblemDefinition" package="lu.data" version="1.0.0.0">
        <visualDescription h="33" w="68" x="279" y="423">
          <color b="255" g="255" r="255"/>
        </visualDescription>
        <parameter formFieldId="instance_type" varName="I"/>
        <parameter formFieldId="class" varName="C"/>
        <unitBounds uRef="problem">
          <visualDescription h="10" w="10" x="30" y="4"/>
        </unitBounds>
      </component>
    </baseType>
    <versions field1="1" field2="0" field3="0" field4="0"/>
    <visualAttributes>
      <color b="255" g="255" r="255"/>
    </visualAttributes>
  </header>
  <componentInfo>
    <innerComponent hash_component_UID="00240000048000009400000006020000002400005253413100040000110000004d9c75ae5f43eaaeb10762b3e7c65b336ea4790b679668da776b55e1821b1f59388b8ea2e5f25263fc4cebe208bc2cb79d9bcbbc6167a4bd4b552d03cca4ef35f734d0cbac01feb8e9a6d6296807fccc63cd003ba735a6445bb240120f051f046aa5787203f6fd7fd7b0cd0e18a980c63f35f8918343d6ea5563d8c3211f8ab1" localRef="instance_type" location="lu.problem_size.Instance_LU/Instance_LU.hpe" name="Instance_LU" package="lu.problem_size" exposed="false">
      <visualDescription h="51" w="111" x="205" y="446">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <parameter formFieldId="class" varName="C"/>
      <unitBounds uRef="instance">
        <visualDescription h="10" w="10" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000237f437b205f7bfa00c2d0b40167897c37f84c96a62c077e2832a5360fa8c1c7438dfa969d99bb36a48a7baefcbd50d84ae2e3e71a349dce24c2b0bc473997871be48fdb29d0d48b0928ca968440c6b6663c6740810dab7b664db0e0cfbfe5b21f223402d0d9bd601294898724b6a1da46e78261ef1ee37ac63ca9b2dbdc0d90" localRef="class" location="common.problem_size.Class/Class.hpe" name="Class" package="common.problem_size" exposed="false">
      <visualDescription h="30" w="50" x="385" y="454">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds uRef="class">
        <visualDescription h="10" w="10" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <supplyParameter cRef="class" varName="C"/>
    <supplyParameter cRef="instance_type" varName="I"/>
    <interface iRef="IProblemDefinitionImpl" nArgs="2">
      <slice isRef="instance">
        <originRef cRef="instance_type" iRef="IInstance"/>
        <visualDescription h="10" w="10" x="2" y="27"/>
      </slice>
      <slice isRef="field">
        <originRef cRef="a" iRef="IField"/>
        <visualDescription h="10" w="10" x="3" y="2"/>
      </slice>
      <sources sourceType="C# Language" versionId="1.0.0.0">
        <file contents="/* Automatically Generated Code */&#xA;&#xA;using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using lu.problem_size.Instance;&#xA;using common.problem_size.Class;&#xA;using lu.data.Field;&#xA;using lu.problem_size.Instance_LU;&#xA;using lu.data.ProblemDefinition;&#xA;&#xA;namespace impl.lu.data.ProblemDefinitionImpl { &#xA;&#xA;public abstract class BaseIProblemDefinitionImpl&lt;I, C>: DataStructure, BaseIProblemDefinition&lt;I, C>&#xA;where I:IInstance_LU&lt;C>&#xA;where C:IClass&#xA;{&#xA;&#xA;private I instance = default(I);&#xA;&#xA;protected I Instance {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.instance == null)&#xA;&#x9;&#x9;&#x9;this.instance = (I) Services.getPort(&quot;instance_type&quot;);&#xA;&#x9;&#x9;return this.instance;&#xA;&#x9;}&#xA;}&#xA;&#xA;private IField a = null;&#xA;&#xA;protected IField A {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.a == null)&#xA;&#x9;&#x9;&#x9;this.a = (IField) Services.getPort(&quot;a&quot;);&#xA;&#x9;&#x9;return this.a;&#xA;&#x9;}&#xA;}&#xA;&#xA;private IField b = null;&#xA;&#xA;protected IField B {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.b == null)&#xA;&#x9;&#x9;&#x9;this.b = (IField) Services.getPort(&quot;b&quot;);&#xA;&#x9;&#x9;return this.b;&#xA;&#x9;}&#xA;}&#xA;&#xA;private IField _c = null;&#xA;&#xA;protected IField _C {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this._c == null)&#xA;&#x9;&#x9;&#x9;this._c = (IField) Services.getPort(&quot;c&quot;);&#xA;&#x9;&#x9;return this._c;&#xA;&#x9;}&#xA;}&#xA;&#xA;private IField d = null;&#xA;&#xA;protected IField D {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.d == null)&#xA;&#x9;&#x9;&#x9;this.d = (IField) Services.getPort(&quot;d&quot;);&#xA;&#x9;&#x9;return this.d;&#xA;&#x9;}&#xA;}&#xA;&#xA;private IField u = null;&#xA;&#xA;protected IField U {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.u == null)&#xA;&#x9;&#x9;&#x9;this.u = (IField) Services.getPort(&quot;u&quot;);&#xA;&#x9;&#x9;return this.u;&#xA;&#x9;}&#xA;}&#xA;&#xA;private IField rsd = null;&#xA;&#xA;protected IField Rsd {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.rsd == null)&#xA;&#x9;&#x9;&#x9;this.rsd = (IField) Services.getPort(&quot;rsd&quot;);&#xA;&#x9;&#x9;return this.rsd;&#xA;&#x9;}&#xA;}&#xA;&#xA;private IField frct = null;&#xA;&#xA;protected IField Frct {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.frct == null)&#xA;&#x9;&#x9;&#x9;this.frct = (IField) Services.getPort(&quot;frct&quot;);&#xA;&#x9;&#x9;return this.frct;&#xA;&#x9;}&#xA;}&#xA;&#xA;private IField flux = null;&#xA;&#xA;protected IField Flux {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.flux == null)&#xA;&#x9;&#x9;&#x9;this.flux = (IField) Services.getPort(&quot;flux&quot;);&#xA;&#x9;&#x9;return this.flux;&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;&#xA;}&#xA;&#xA;}&#xA;" fileType="library" name="BaseIProblemDefinitionImpl.cs" srcType="base" uri="impl.lu.data.ProblemDefinitionImpl/bin/1.0.0.0/BaseIProblemDefinitionImpl.dll" versionId="1.0.0.0">
          <dependency>lu.problem_size.Instance/bin/1.0.0.0/IInstance.dll</dependency>
          <dependency>common.problem_size.Class/bin/1.0.0.0/IClass.dll</dependency>
          <dependency>lu.data.Field/bin/1.0.0.0/IField.dll</dependency>
          <dependency>lu.problem_size.Instance_LU/bin/1.0.0.0/IInstance_LU.dll</dependency>
          <dependency>lu.data.ProblemDefinition/bin/1.0.0.0/BaseIProblemDefinition.dll</dependency>
        </file>
        <file contents="using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using lu.problem_size.Instance_LU;&#xA;using common.problem_size.Class;&#xA;using lu.data.ProblemDefinition;&#xA;&#xA;namespace impl.lu.data.ProblemDefinitionImpl { &#xA;&#x9;public class IProblemDefinitionImpl&lt;I, C> : BaseIProblemDefinitionImpl&lt;I, C>, IProblemDefinition&lt;I, C>&#xA;&#x9;where I:IInstance_LU&lt;C>&#xA;&#x9;where C:IClass {&#xA;        //protected int _nx0 = 0, _ny0 = 0, _nz0 = 0;&#xA;&#x9;&#x9;protected int _isiz01 = 0, _isiz3 = 0;//_isiz02 = 0, _isiz03 = 0,_itmax = 0, _inorm = 0, &#xA;&#x9;&#x9;protected double _dt = 0.0;&#x9;&#x9;&#xA;&#x9;&#x9;protected int _isiz1, _isiz2;&#x9;//_xdim, _ydim, _row, _col, _node, _ndim, _num,&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;protected bool[] _icommn, _icomms, _icomme, _icommw;&#xA;&#xA;&#x9;&#x9;public IProblemDefinitionImpl() {&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;override public void initialize(){&#xA;&#x9;&#x9;    setProblemClass();&#xA;&#xA;            _isiz3 = Instance.isiz3;&#xA;&#xA;            int _num    = this.Ranks.Length;&#xA;//            _node   = this.GlobalRank;         &#xA;//            _ndim   = Constants.nodedim(_num);&#xA;            &#xA;            int ydiv = Constants.ilog2(_num)/2;&#xA;            int xdiv = ydiv;&#xA;            if(xdiv + ydiv != Constants.ilog2(_num))&#xA;                xdiv += 1;&#xA;            xdiv = Constants.ipow2(xdiv);&#xA;            ydiv = Constants.ipow2(ydiv);&#xA;            _isiz1 = _isiz01 / xdiv;&#xA;            if(_isiz1 * xdiv &lt; _isiz01)&#xA;                _isiz1++;&#xA;            _isiz2 = _isiz01 / ydiv;&#xA;            if(_isiz2 * ydiv &lt; _isiz01)&#xA;                _isiz2++;&#xA;&#xA;//&#x9;&#x9;&#x9;_icommn = new bool[_nx0+_ny0+1];&#xA;//&#x9;&#x9;&#x9;_icomms = new bool[_nx0+_ny0+1];&#xA;//&#x9;&#x9;&#x9;_icomme = new bool[_nx0+_ny0+1];&#xA;//&#x9;&#x9;&#x9;_icommw = new bool[_nx0+_ny0+1];&#xA;                &#xA;            A.initialize_field (&quot;a&quot;, _isiz2, _isiz1, 5, 5);&#xA;            B.initialize_field (&quot;b&quot;, _isiz2, _isiz1, 5, 5);&#xA;            _C.initialize_field(&quot;c&quot;, _isiz2, _isiz1, 5, 5);&#xA;            D.initialize_field (&quot;d&quot;, _isiz2, _isiz1, 5, 5);&#xA;            &#xA;            U.initialize_field   (&quot;u&quot;   , _isiz3, _isiz2+4, _isiz1+4, 5);&#xA;            Console.WriteLine(&quot;_isiz3=&quot;+_isiz3 + &quot; _isiz2+4=&quot;+ _isiz2+4 + &quot; _isiz1+4=&quot; + _isiz1+4);&#xA;            Rsd.initialize_field (&quot;rsd&quot; , _isiz3, _isiz2+4, _isiz1+4, 5);&#xA;            Frct.initialize_field(&quot;frct&quot;, _isiz3, _isiz2+4, _isiz1+4, 5);&#xA;            Flux.initialize_field(&quot;flux&quot;, _isiz3, _isiz2+2, _isiz1+2, 5);&#xA;            &#xA;            //proc_grid()&#xA;//&#x9;            _xdim   = (int)Math.Pow(2, (_ndim/2));&#xA;//&#x9;            if(Constants.mod(_ndim, 2)==1)&#xA;//&#x9;                _xdim = _xdim + _xdim;&#xA;//&#x9;            _ydim   = _num/_xdim;&#xA;//&#x9;            _row    = (int)Constants.mod(_node, _xdim) + 1;&#xA;//&#x9;            _col    = _node/_xdim + 1; &#xA;            //           &#xA;&#xA;            Constants.setConstants(Instance.isiz01,Instance.isiz02,Instance.isiz03);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;private void setProblemClass(){&#xA;//&#x9;&#x9;&#x9;_itmax  = Instance.itmax;&#xA;//&#x9;&#x9;&#x9;_inorm  = Instance.inorm;&#xA;&#x9;&#x9;&#x9;_isiz01 = Instance.isiz01;&#xA;//&#x9;&#x9;&#x9;_isiz02 = Instance.isiz02;&#xA;//&#x9;&#x9;&#x9;_isiz03 = Instance.isiz03;&#xA;//&#x9;&#x9;&#x9;_isiz3  = Instance.isiz3;&#xA;//            _dt     = Instance.dt;&#xD;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public double [,,,] Field_a { get { return A.Field; } }&#xA;&#x9;&#x9;public double [,,,] Field_b { get { return B.Field; } }&#xA;&#x9;&#x9;public double [,,,] Field_c { get { return _C.Field; } }&#xA;&#x9;&#x9;public double [,,,] Field_d { get { return D.Field; } }&#xA;&#xA;&#x9;&#x9;public double [,,,] Field_rsd  { get { return Rsd.Field;  } }&#xA;&#x9;&#x9;public double [,,,] Field_frct { get { return Frct.Field; } }&#xA;&#x9;&#x9;public double [,,,] Field_flux { get { return Flux.Field; } }&#xA;&#x9;&#x9;public double [,,,] Field_u    { get { return U.Field;    } }&#xA;&#x9;&#x9;&#xA;//&#x9;&#x9;public int node      { get { return _node;   } }&#xA;//&#x9;&#x9;public int ndim      { get { return _ndim;   } }&#xA;//&#x9;&#x9;public int num       { get { return _num;    } }&#xA;//&#x9;&#x9;public int xdim      { get { return _xdim;   } }&#xA;//&#x9;&#x9;public int ydim      { get { return _ydim;   } }&#xA;//&#x9;&#x9;public int row       { get { return _row;    } }&#xA;//&#x9;&#x9;public int col       { get { return _col;    } }&#xA;&#x9;&#x9;&#xA;//&#x9;&#x9;public int nx0       { get { return _nx0;    } }&#xA;//&#x9;&#x9;public int ny0       { get { return _ny0;    } }&#xA;//&#x9;&#x9;public int nz0       { get { return _nz0;    } }&#xA;&#x9;&#x9;&#xA;//        public int itmax  { get { return _itmax;    } }&#xA;//        public int inorm  { get { return _inorm;    } }&#xA;//        public int isiz01 { get { return _isiz01;   } }&#xA;//        public int isiz02 { get { return _isiz02;   } }&#xA;//        public int isiz03 { get { return _isiz03;   } }&#xA;//        public int isiz3  { get { return _isiz3;    } }&#xA;//&#x9;&#x9;public double dt  { get { return _dt;       } }&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;//&#x9;&#x9;public bool[] icommn { get { return _icommn; } }&#xA;//&#x9;&#x9;public bool[] icomms { get { return _icomms; } }&#xA;//&#x9;&#x9;public bool[] icomme { get { return _icomme; } }&#xA;//&#x9;&#x9;public bool[] icommw { get { return _icommw; } }&#xA;&#x9;&#x9;public int isiz1     { get { return _isiz1;  } }&#xA;&#x9;&#x9;public int isiz2     { get { return _isiz2;  } } &#x9;&#x9;&#xA;&#x9;}&#xA;}&#xA;" fileType="library" name="IProblemDefinitionImpl.cs" srcType="user" uri="impl.lu.data.ProblemDefinitionImpl/bin/1.0.0.0/IProblemDefinitionImpl.dll" versionId="1.0.0.0">
          <dependency>lu.problem_size.Instance_LU/bin/1.0.0.0/IInstance_LU.dll</dependency>
          <dependency>common.problem_size.Class/bin/1.0.0.0/IClass.dll</dependency>
          <dependency>%WORKSPACE/impl.lu.data.ProblemDefinitionImpl/bin/1.0.0.0/BaseIProblemDefinitionImpl.dll</dependency>
          <dependency>lu.data.ProblemDefinition/bin/1.0.0.0/IProblemDefinition.dll</dependency>
        </file>
      </sources>
      <visualDescription h="96" w="149" x="239" y="169">
        <color b="0" g="255" r="0"/>
      </visualDescription>
      <parameter iname="IInstance_LU" order="0" parid="instance_type" uname="instance" varid="I"/>
      <parameter iname="IClass" order="1" parid="class" uname="class" varid="C"/>
    </interface>
    <unit iRef="IProblemDefinitionImpl" private="false" uRef="problem" visibleInterface="true">
      <super cRef="base" uRef="problem"/>
      <slices cRef="instance_type" replica="0" uRef="instance" sliceName="instance" transitive="false">
        <visualDescription h="10" w="10" x="2" y="26"/>
      </slices>
      <slices cRef="a" replica="0" uRef="field" sliceName="field" transitive="false">
        <visualDescription h="10" w="10" x="28" y="2"/>
      </slices>
      <slices cRef="b" replica="0" uRef="field" sliceName="field" transitive="false">
        <visualDescription h="10" w="10" x="42" y="0"/>
      </slices>
      <slices cRef="c" replica="0" uRef="field" sliceName="field" transitive="false">
        <visualDescription h="10" w="10" x="56" y="2"/>
      </slices>
      <slices cRef="d" replica="0" uRef="field" sliceName="field" transitive="false">
        <visualDescription h="10" w="10" x="67" y="6"/>
      </slices>
      <slices cRef="u" replica="0" uRef="field" sliceName="field" transitive="false">
        <visualDescription h="10" w="10" x="66" y="17"/>
      </slices>
      <slices cRef="rsd" replica="0" uRef="field" sliceName="field" transitive="false">
        <visualDescription h="10" w="10" x="67" y="28"/>
      </slices>
      <slices cRef="frct" replica="0" uRef="field" sliceName="field" transitive="false">
        <visualDescription h="10" w="10" x="66" y="40"/>
      </slices>
      <slices cRef="flux" replica="0" uRef="field" sliceName="field" transitive="false">
        <visualDescription h="10" w="10" x="55" y="46"/>
      </slices>
      <visualDescription h="59" w="80" x="274" y="306"/>
    </unit>
    <enumerator cardinality="-1" fromSplit="false" ref="hPE.frontend.base.model.HReplicator@196ae3e1301427817312" varId="n">
      <originRef>base</originRef>
      <originRef>rsd</originRef>
      <links xsi:type="component:EnumerableUnitType" ref="problem"/>
      <visualDescription h="30" w="30" x="187" y="321"/>
    </enumerator>
  </componentInfo>
</component:component>