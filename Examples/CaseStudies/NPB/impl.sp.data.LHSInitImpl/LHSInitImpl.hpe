<?xml version="1.0" encoding="ASCII"?>
<component:component xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:component="http://www.example.org/HashComponent">
  <header hash_component_UID="00240000048000009400000006020000002400005253413100040000110000006b6be3166b9ad75fd438e40630c74ace6fd59c2eaee511e07a080c94f97db3d53324e0d59a159c281ecfe706fc146466a35ffff454dd38f3c3f926111a1d335f22f836b0dfe648842b86a38cee4d5394a47504dd2da8d27725dba92c88418a7177edcda0c15836279d419161c64a5c0cc8c3157d460db4347755277db8b6eab0" isAbstract="false" kind="Computation" name="LHSInitImpl" packagePath="impl.sp.data">
    <baseType>
      <extensionType>
        <implements>true</implements>
      </extensionType>
      <component hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000e50c982b62bbbbda83d59d748c7d4eec76cc728ae1a2b9c02388a3d4691833b25aaf202a216962ad33ba9d7766b12d15131161b39718c2d95ccec70bb3acadd6bba4e8c705bb9389ca49e065f0b8ec9f23ae729bf106fbddc1528709e0f7df8a811a497d5883fa128050ec5403672acd5e76781e5cb7b65c500c054dbc3bc5bc" localRef="base" location="common.data.LHSInit/LHSInit.hpe" name="LHSInit" package="common.data" version="1.0.0.0">
        <visualDescription h="67" w="84" x="203" y="408">
          <color b="255" g="255" r="255"/>
        </visualDescription>
        <parameter formFieldId="instance_type" varName="I"/>
        <parameter formFieldId="class" varName="C"/>
        <port hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000cfe94b8926d4a7de4f70d204303375a68658c9c988f5e0ec7f1f3dce28b75501399411f8002d0637e06b03a2849ef779a22e26ae137759213f595fd13ccb5101bb6f07e7560df0d8b1beadc8dacecefd49c7844d298e78991b98dd4650ec7bf0b26716727a7bc437f39a5ccede87c7db6829de68c511abb9d0b4e3644bcf66ad" localRef="blocks_info" location="common.datapartition.BlocksInfo/BlocksInfo.hpe" name="BlocksInfo" package="common.datapartition" exposed="true">
          <visualDescription h="30" w="112" x="399" y="388">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <unitBounds uRef="blocks">
            <visualDescription h="10" w="10" x="5" y="2"/>
          </unitBounds>
        </port>
        <port hash_component_UID="002400000480000094000000060200000024000052534131000400001100000009b97ce4f3981d78e251ff90894751a2f19e3d7fcafeadee8da1cb93890a7d9ed59b4773f575afc0782c61b877ac17cea1ab4429bfd162c1bdff0b6c7fe9d07f8e9ccdcd219b58671c77cf6cfbada633e18309cb4c2e518fedeaa6aecf435a12dc4a18c8384c15d61dfab5a2056f58c2bcf936823b8d84a8c5cc5e25827a1598" localRef="problem_data" location="common.data.ProblemDefinition/ProblemDefinition.hpe" name="ProblemDefinition" package="common.data" exposed="true">
          <visualDescription h="30" w="142" x="379" y="260">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <parameter formFieldId="instance_type" varName="I"/>
          <parameter formFieldId="class" varName="C"/>
          <unitBounds uRef="problem">
            <visualDescription h="10" w="10" x="5" y="2"/>
          </unitBounds>
        </port>
        <unitBounds uRef="lhsinit">
          <visualDescription h="10" w="10" x="39" y="12"/>
        </unitBounds>
      </component>
    </baseType>
    <versions field1="1" field2="0" field3="0" field4="0"/>
    <visualAttributes>
      <color b="255" g="255" r="255"/>
    </visualAttributes>
  </header>
  <componentInfo>
    <innerComponent hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000237f437b205f7bfa00c2d0b40167897c37f84c96a62c077e2832a5360fa8c1c7438dfa969d99bb36a48a7baefcbd50d84ae2e3e71a349dce24c2b0bc473997871be48fdb29d0d48b0928ca968440c6b6663c6740810dab7b664db0e0cfbfe5b21f223402d0d9bd601294898724b6a1da46e78261ef1ee37ac63ca9b2dbdc0d90" localRef="class" location="common.problem_size.Class/Class.hpe" name="Class" package="common.problem_size" exposed="false">
      <visualDescription h="30" w="50" x="230" y="426">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds uRef="class">
        <visualDescription h="10" w="10" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000796ff7bbb33560060ee9951c4f8242d987089c0c50af1d3a6ab2f92466788c33bfa42e66a347c4206d81a948be78598f82f386b898f40714662cb0134d02313a7e06d04944957cb9149a5069ebfcc65b58711afd15bfbe6f3144cf719a1d8c90833890d5ed1eac7e3b8a657a774a065ca04588c7743c47a41fe59e21cd7767a4" localRef="instance" location="sp.problem_size.Instance_SP/Instance_SP.hpe" name="Instance_SP" package="sp.problem_size" exposed="false">
      <visualDescription h="30" w="115" x="156" y="480">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <parameter formFieldId="class" varName="C"/>
      <unitBounds uRef="instance">
        <visualDescription h="10" w="10" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <supplyParameter cRef="class" varName="C"/>
    <supplyParameter cRef="instance" varName="I"/>
    <interface iRef="ILHSInitImpl" nArgs="2">
      <slice isRef="problem">
        <originRef cRef="problem_data" iRef="IProblemDefinition"/>
        <visualDescription h="10" w="10" x="69" y="8"/>
      </slice>
      <slice isRef="blocks">
        <originRef cRef="blocks_info" iRef="IBlocks"/>
        <visualDescription h="10" w="10" x="51" y="22"/>
      </slice>
      <protocol xsi:type="component:ActionSkipType" label="hPE.frontend.kinds.activate.model.protocol.HSkipAction@1ddff23" repeat="0">
        <visualDescription h="50" w="50" x="75" y="75"/>
      </protocol>
      <sources sourceType="C# Language" versionId="1.0.0.0">
        <file contents="/* Automatically Generated Code */&#xA;&#xA;using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using common.datapartition.BlocksInfo;&#xA;using common.data.ProblemDefinition;&#xA;using sp.problem_size.Instance_SP;&#xA;using common.problem_size.Class;&#xA;using common.data.LHSInit;&#xA;&#xA;namespace impl.sp.data.LHSInitImpl { &#xA;&#xA;public abstract class BaseILHSInitImpl&lt;I, C>: Computation, BaseILHSInit&lt;I, C>&#xA;where I:IInstance_SP&lt;C>&#xA;where C:IClass&#xA;{&#xA;&#xA;private IBlocks blocks = null;&#xA;&#xA;public IBlocks Blocks {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.blocks == null)&#xA;&#x9;&#x9;&#x9;this.blocks = (IBlocks) Services.getPort(&quot;blocks_info&quot;);&#xA;&#x9;&#x9;return this.blocks;&#xA;&#x9;}&#xA;}&#xA;&#xA;private IProblemDefinition&lt;I, C> problem = null;&#xA;&#xA;public IProblemDefinition&lt;I, C> Problem {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.problem == null)&#xA;&#x9;&#x9;&#x9;this.problem = (IProblemDefinition&lt;I, C>) Services.getPort(&quot;problem_data&quot;);&#xA;&#x9;&#x9;return this.problem;&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;abstract public void compute(); &#xA;&#xA;&#xA;}&#xA;&#xA;}&#xA;" fileType="library" name="BaseILHSInitImpl.cs" srcType="base" uri="impl.sp.data.LHSInitImpl/bin/1.0.0.0/BaseILHSInitImpl.dll" versionId="1.0.0.0">
          <dependency>common.datapartition.BlocksInfo/bin/1.0.0.0/IBlocks.dll</dependency>
          <dependency>common.data.ProblemDefinition/bin/1.0.0.0/IProblemDefinition.dll</dependency>
          <dependency>sp.problem_size.Instance_SP/bin/1.0.0.0/IInstance_SP.dll</dependency>
          <dependency>common.problem_size.Class/bin/1.0.0.0/IClass.dll</dependency>
          <dependency>common.data.LHSInit/bin/1.0.0.0/BaseILHSInit.dll</dependency>
        </file>
        <file contents="using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using sp.problem_size.Instance_SP;&#xA;using common.problem_size.Class;&#xA;using common.data.LHSInit;&#xA;using common.data.ProblemDefinition;&#xA;&#xA;namespace impl.sp.data.LHSInitImpl { &#xA;&#xA;&#x9;public class ILHSInitImpl&lt;I, C> : BaseILHSInitImpl&lt;I, C>, ILHSInit&lt;I, C>&#xA;&#x9;&#x9;where I:IInstance_SP&lt;C>&#xA;&#x9;&#x9;where C:IClass&#xA;&#x9;{&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public ILHSInitImpl() &#xA;&#x9;&#x9;{ &#xA;&#x9;&#x9;&#x9;initialize();&#xA;&#x9;&#x9;} &#xA;&#x9;&#x9;&#xA;&#x9;&#x9;private int[,] cell_size, cell_low, cell_high, start, end, slice, cell_coord;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;private int ncells, IMAX, JMAX, KMAX, maxcells;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;private double[,,,,] lhs;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public void initialize()&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;ncells = Problem.NCells;&#xA;&#x9;&#x9;&#x9;lhs = Problem.Field_u;&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;cell_size = Blocks.cell_size;&#xA;&#x9;&#x9;&#x9;cell_low = Blocks.cell_low;&#xA;&#x9;&#x9;&#x9;cell_high = Blocks.cell_high;&#xA;&#x9;&#x9;&#x9;cell_coord = Blocks.cell_coord;&#xA;&#x9;&#x9;&#x9;start = Blocks.cell_start;&#xA;&#x9;&#x9;&#x9;end = Blocks.cell_end;&#xA;&#x9;&#x9;&#x9;slice = Blocks.cell_slice;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;IMAX = Problem.IMAX;&#xA;&#x9;&#x9;&#x9;JMAX = Problem.JMAX;&#xA;&#x9;&#x9;&#x9;KMAX = Problem.KMAX;&#xA;&#x9;&#x9;&#x9;maxcells = Problem.maxcells;&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public override void compute() &#xA;&#x9;&#x9;{ &#xA;&#xA;        //---------------------------------------------------------------------&#xA;        // loop over all cells                                       &#xA;        //---------------------------------------------------------------------&#xA;        for (int c = 0; c &lt; ncells; c++)&#xA;        {&#xA;            //---------------------------------------------------------------------&#xA;            // first, initialize the start and end arrays&#xA;            //---------------------------------------------------------------------&#xA;&#xA;            for (int d = 0; d &lt; 3; d++)&#xA;            {&#xA;                if (cell_coord[c, d] == 0)&#xA;                    start[c, d] = 3;&#xA;                else&#xA;                    start[c, d] = 2;&#xA;&#xA;                if (cell_coord[c, d] == ncells - 1)&#xA;                    end[c, d] = 1;&#xA;                else&#xA;                    end[c, d] = 0;&#xA;            }&#xA;&#xA;&#xA;            //---------------------------------------------------------------------&#xA;            // zap the whole left hand side for starters&#xA;            //---------------------------------------------------------------------&#xA;&#xA;            for (int k = 2; k &lt; 2 + cell_size[c, 2]; k++)&#xA;            {&#xA;                for (int j = 2; j &lt; 2 + cell_size[c, 1]; j++)&#xA;                {&#xA;                    for (int i = 2; i &lt; 2 + cell_size[c, 0]; i++)&#xA;                    {&#xA;                        for (int n = 0; n &lt; 15; n++)&#xA;                        {&#xA;                            lhs[c, k, j, i, n] = 0.0d;&#xA;                        }&#xA;                    }&#xA;                }&#xA;            }&#xA;&#xA;            //---------------------------------------------------------------------&#xA;            // next, set all diagonal values to 1. This is overkill, but convenient&#xA;            //---------------------------------------------------------------------&#xA;&#xA;            for (int n = 0; n &lt; 3; n++)&#xA;            {&#xA;                for (int k = 2; k &lt; 2 + cell_size[c, 2]; k++)&#xA;                {&#xA;                    for (int j = 2; j &lt; 2 + cell_size[c, 1]; j++)&#xA;                    {&#xA;                        for (int i = 2; i &lt; 2 + cell_size[c, 0]; i++)&#xA;                        {&#xA;                            lhs[c, k, j, i, 5 * n + 2] = 1.0d;&#xA;                        }&#xA;                    }&#xA;                }&#xA;            }&#xA;        }&#xA;&#x9;&#x9;} // end activate method &#xA;&#x9;&#xA;&#x9;}&#xA;&#xA;}&#xA;" fileType="library" name="ILHSInitImpl.cs" srcType="user" uri="impl.sp.data.LHSInitImpl/bin/1.0.0.0/ILHSInitImpl.dll" versionId="1.0.0.0">
          <dependency>sp.problem_size.Instance_SP/bin/1.0.0.0/IInstance_SP.dll</dependency>
          <dependency>common.problem_size.Class/bin/1.0.0.0/IClass.dll</dependency>
          <dependency>%WORKSPACE/impl.sp.data.LHSInitImpl/bin/1.0.0.0/BaseILHSInitImpl.dll</dependency>
          <dependency>common.data.LHSInit/bin/1.0.0.0/ILHSInit.dll</dependency>
        </file>
      </sources>
      <visualDescription h="40" w="80" x="228" y="143">
        <color b="0" g="255" r="128"/>
      </visualDescription>
      <port name="problem">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="problem" sRef="problem"/>
      </port>
      <port name="blocks">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="blocks" sRef="blocks"/>
      </port>
      <parameter iname="IInstance_SP" order="0" parid="instance_type" uname="instance" varid="I"/>
      <parameter iname="IClass" order="1" parid="class" uname="class" varid="C"/>
    </interface>
    <unit iRef="ILHSInitImpl" private="false" uRef="lhsinit" visibleInterface="true">
      <super cRef="base" uRef="lhsinit"/>
      <slices cRef="problem_data" replica="0" uRef="problem" sliceName="problem" transitive="false">
        <visualDescription h="10" w="10" x="69" y="8"/>
      </slices>
      <slices cRef="blocks_info" replica="0" uRef="blocks" sliceName="blocks" transitive="false">
        <visualDescription h="10" w="10" x="51" y="22"/>
      </slices>
      <visualDescription h="40" w="80" x="248" y="284"/>
    </unit>
    <enumerator cardinality="-1" fromSplit="false" ref="hPE.frontend.base.model.HReplicator@1b2533d1295099559883" varId="n">
      <originRef>base</originRef>
      <originRef>problem_data</originRef>
      <originRef>speed</originRef>
      <links xsi:type="component:EnumerableUnitType" ref="lhsinit"/>
      <visualDescription h="60" w="61" x="33" y="233"/>
    </enumerator>
  </componentInfo>
</component:component>