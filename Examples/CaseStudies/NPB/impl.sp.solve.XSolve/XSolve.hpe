<?xml version="1.0" encoding="ASCII"?>
<component:component xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:component="http://www.example.org/HashComponent">
  <header hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000018a31e7929e1865431ebe80d73fbfcfe93794638016b7c620f3c54362cedf1aafbde87711305f31701909eb1af86fbf72f835e127f76724e21f11aed239f37aa1fde7d30e5786582ccab57975eb3333851532e706d479716b915d005ae5432c9f2b2ab8feafd8b060cc0182e6d590d3649e74f7aa45aac9a053c9e31eb40ed5" isAbstract="false" kind="Computation" name="XSolve" packagePath="impl.sp.solve">
    <baseType>
      <extensionType>
        <implements>true</implements>
      </extensionType>
      <component hash_component_UID="002400000480000094000000060200000024000052534131000400001100000077612c91ee4b781821f077c68dc6fccb454c249f3dba304b8e3b42eb46a3544dcfe27ed37c87cf7ae336a4681cb5eac89c20dbe71c7b67d7efe959584aabcf637c1d536f8f03193b452911553f141a3a4be1b87fdae7ea6a655b1bc49113d0dc35cccf24c59a3c6965b5ffc1fcc68cfa9ded959499f701f72ef56e1df01eeca0" localRef="base" location="common.solve.Solve/Solve.hpe" name="Solve" package="common.solve" version="1.0.0.0">
        <visualDescription h="30" w="50" x="246" y="291">
          <color b="255" g="255" r="255"/>
        </visualDescription>
        <parameter formFieldId="direction" varName="DIR"/>
        <parameter formFieldId="method" varName="MTH"/>
        <port hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000cfe94b8926d4a7de4f70d204303375a68658c9c988f5e0ec7f1f3dce28b75501399411f8002d0637e06b03a2849ef779a22e26ae137759213f595fd13ccb5101bb6f07e7560df0d8b1beadc8dacecefd49c7844d298e78991b98dd4650ec7bf0b26716727a7bc437f39a5ccede87c7db6829de68c511abb9d0b4e3644bcf66ad" localRef="blocks_info" location="common.datapartition.BlocksInfo/BlocksInfo.hpe" name="BlocksInfo" package="common.datapartition" exposed="true">
          <visualDescription h="53" w="112" x="428" y="338">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <unitBounds uRef="blocks">
            <visualDescription h="10" w="10" x="5" y="2"/>
          </unitBounds>
        </port>
        <port hash_component_UID="002400000480000094000000060200000024000052534131000400001100000009b97ce4f3981d78e251ff90894751a2f19e3d7fcafeadee8da1cb93890a7d9ed59b4773f575afc0782c61b877ac17cea1ab4429bfd162c1bdff0b6c7fe9d07f8e9ccdcd219b58671c77cf6cfbada633e18309cb4c2e518fedeaa6aecf435a12dc4a18c8384c15d61dfab5a2056f58c2bcf936823b8d84a8c5cc5e25827a1598" localRef="problem_data" location="common.data.ProblemDefinition/ProblemDefinition.hpe" name="ProblemDefinition" package="common.data" exposed="true">
          <visualDescription h="45" w="106" x="427" y="209">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <unitBounds uRef="problem">
            <visualDescription h="10" w="10" x="47" y="9"/>
          </unitBounds>
        </port>
        <port hash_component_UID="00240000048000009400000006020000002400005253413100040000110000009b5fdf9e2fd2e1d4c40d5d105e19369c7729126e13c1d35d7124531d9c4fa1a01ecb25564a9fc1e7175d98659a5280d86a339f77d53abc6eff4debf0c86ea2c480a3ffedb149923bba754c2bb0fb6117e2416acad5d23bebfe734b82b120e8ca3451465ce29e2c470da1b915836a5db31d0e17997a541c0f79ea1aed03990587" localRef="topology" location="common.topology.Ring/Ring.hpe" name="Ring" package="common.topology" exposed="true">
          <visualDescription h="35" w="92" x="323" y="126">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <unitBounds uRef="cell">
            <visualDescription h="10" w="10" x="63" y="6"/>
          </unitBounds>
        </port>
        <unitBounds uRef="solve">
          <visualDescription h="10" w="10" x="5" y="2"/>
        </unitBounds>
      </component>
    </baseType>
    <versions field1="1" field2="0" field3="0" field4="0"/>
    <visualAttributes>
      <color b="255" g="255" r="255"/>
    </visualAttributes>
  </header>
  <componentInfo>
    <innerComponent hash_component_UID="002400000480000094000000060200000024000052534131000400001100000099ec807d7886f0c2735f4a4c2dc60d8feb0a435847e291a0f9dd7aed2539883c551cf8dd8fe530fe7d695458a20d532e4a58b5cf62af87f410238ec43d1e140b210efe08dea6fc4983660e10cc3431cd1102137a5df63ef9bef47a99b409c0b1c86bd4aa322397fd56e1ed3be2e81f8d1a9765c5dc9134ec1eb1b5d4567311ae" localRef="xdir" location="common.direction.X/X.hpe" name="X" package="common.direction" exposed="false">
      <visualDescription h="30" w="50" x="109" y="171">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds uRef="x">
        <visualDescription h="10" w="10" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000159d9ccb4ff0bb35a4fe190495e9c0d9a8406fa4adae5405850aed7cf83bbe6096bcb7deb5b07550a718fabec888b38f45c00ad4323db7b35e01dd236f9d1af6d8d0e529844de79031b63f05f2e810d0218c315e2c720d374b2bc2c0b15ec45863f2832e19f30c9bf6ee1519c76cd5e6f0ed485d2027397f93caec006396c587" localRef="method" location="common.solve.BeamWarmingMethod/BeamWarmingMethod.hpe" name="BeamWarmingMethod" package="common.solve" exposed="false">
      <visualDescription h="30" w="50" x="53" y="244">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds uRef="method">
        <visualDescription h="10" w="10" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <supplyParameter cRef="xdir" varName="DIR"/>
    <supplyParameter cRef="method" varName="MTH"/>
    <interface iRef="IXSolveImpl" nArgs="0">
      <slice isRef="shift">
        <originRef cRef="shift" iRef="IShift"/>
        <visualDescription h="10" w="10" x="17" y="5"/>
      </slice>
      <slice isRef="forward">
        <originRef cRef="forward" iRef="IForward"/>
        <visualDescription h="10" w="10" x="8" y="28"/>
      </slice>
      <slice isRef="lhs">
        <originRef cRef="lhs" iRef="ILHS"/>
        <visualDescription h="10" w="10" x="32" y="26"/>
      </slice>
      <slice isRef="matvecproduct">
        <originRef cRef="matvecproduct" iRef="IBlockDiagonalMatVecProduct"/>
        <visualDescription h="10" w="10" x="66" y="18"/>
      </slice>
      <slice isRef="backward">
        <originRef cRef="backward" iRef="IBackward"/>
        <visualDescription h="10" w="10" x="57" y="5"/>
      </slice>
      <protocol xsi:type="component:ActionCombinatorParType" label="hPE.frontend.kinds.activate.model.protocol.HParAction@ac350f" repeat="0">
        <visualDescription h="150" w="310" x="75" y="75"/>
        <action xsi:type="component:ActionActivateType" label="hPE.frontend.kinds.activate.model.protocol.HDoAction@1cf9944" repeat="0" sliceRef="forward">
          <visualDescription h="50" w="50" x="10" y="50"/>
        </action>
        <action xsi:type="component:ActionActivateType" label="hPE.frontend.kinds.activate.model.protocol.HDoAction@57487e" repeat="0" sliceRef="lhs">
          <visualDescription h="50" w="50" x="70" y="50"/>
        </action>
        <action xsi:type="component:ActionActivateType" label="hPE.frontend.kinds.activate.model.protocol.HDoAction@587374" repeat="0" sliceRef="matvecproduct">
          <visualDescription h="50" w="50" x="130" y="50"/>
        </action>
        <action xsi:type="component:ActionActivateType" label="hPE.frontend.kinds.activate.model.protocol.HDoAction@103dc71" repeat="0" sliceRef="backward">
          <visualDescription h="50" w="50" x="190" y="50"/>
        </action>
        <action xsi:type="component:ActionActivateType" label="hPE.frontend.kinds.activate.model.protocol.HDoAction@7d97da" repeat="0" sliceRef="shift">
          <visualDescription h="50" w="50" x="250" y="50"/>
        </action>
      </protocol>
      <sources sourceType="C# Language" versionId="1.0.0.0">
        <file contents="/* Automatically Generated Code */&#xA;&#xA;using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using common.datapartition.BlocksInfo;&#xA;using common.topology.Ring;&#xA;using common.Buffer;&#xA;using common.solve.LHS;&#xA;using common.data.ProblemDefinition;&#xA;using common.solve.Backward;&#xA;using common.solve.BlockDiagonalMatVecProduct;&#xA;using common.solve.Forward;&#xA;using common.interactionpattern.Shift;&#xA;using common.solve.Solve;&#xA;&#xA;namespace impl.sp.solve.XSolve { &#xA;&#xA;public abstract class BaseIXSolveImpl: Computation, BaseISolve&#xA;{&#xA;&#xA;protected IBlocks blocks = null;&#xA;&#xA;public IBlocks Blocks {&#xA;&#x9;set {&#xA;&#x9;&#x9;this.blocks = value;&#xA;&#x9;&#x9;forward.Blocks = value;&#xA;&#x9;&#x9;matvecproduct.Blocks = value;&#xA;&#x9;&#x9;backward.Blocks = value;&#xA;&#x9;&#x9;lhs.Blocks = value;&#xA;&#x9;}&#xA;}&#xA;&#xA;protected ICell cell = null;&#xA;&#xA;public ICell Cell {&#xA;&#x9;set {&#xA;&#x9;&#x9;this.cell = value;&#xA;&#x9;&#x9;shift.Cell = value;&#xA;&#x9;}&#xA;}&#xA;&#xA;protected IBuffer output_buffer = null;&#xA;&#xA;protected IBuffer Output_buffer {&#xA;&#x9;set {&#xA;&#x9;&#x9;this.output_buffer = value;&#xA;&#x9;&#x9;shift.Output_buffer = value;&#xA;&#x9;}&#xA;}&#xA;&#xA;protected IBuffer input_buffer = null;&#xA;&#xA;protected IBuffer Input_buffer {&#xA;&#x9;set {&#xA;&#x9;&#x9;this.input_buffer = value;&#xA;&#x9;&#x9;shift.Input_buffer = value;&#xA;&#x9;}&#xA;}&#xA;&#xA;protected ILHS lhs = null;&#xA;&#xA;protected ILHS Lhs {&#xA;&#x9;set {&#xA;&#x9;&#x9;this.lhs = value;&#xA;&#x9;}&#xA;}&#xA;&#xA;protected IProblemDefinition problem = null;&#xA;&#xA;public IProblemDefinition Problem {&#xA;&#x9;set {&#xA;&#x9;&#x9;this.problem = value;&#xA;&#x9;&#x9;forward.Problem = value;&#xA;&#x9;&#x9;matvecproduct.Problem = value;&#xA;&#x9;&#x9;backward.Problem = value;&#xA;&#x9;&#x9;lhs.Problem = value;&#xA;&#x9;}&#xA;}&#xA;&#xA;protected IBackward backward = null;&#xA;&#xA;protected IBackward Backward {&#xA;&#x9;set {&#xA;&#x9;&#x9;this.backward = value;&#xA;&#x9;}&#xA;}&#xA;&#xA;protected IBlockDiagonalMatVecProduct matvecproduct = null;&#xA;&#xA;protected IBlockDiagonalMatVecProduct Matvecproduct {&#xA;&#x9;set {&#xA;&#x9;&#x9;this.matvecproduct = value;&#xA;&#x9;}&#xA;}&#xA;&#xA;protected IForward forward = null;&#xA;&#xA;protected IForward Forward {&#xA;&#x9;set {&#xA;&#x9;&#x9;this.forward = value;&#xA;&#x9;}&#xA;}&#xA;&#xA;protected IShift shift = null;&#xA;&#xA;protected IShift Shift {&#xA;&#x9;set {&#xA;&#x9;&#x9;this.shift = value;&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;public BaseIXSolveImpl() { &#xA;&#xA;} &#xA;&#xA;public static string UID = &quot;0024000004800000940000000602000000240000525341310004000011000000018a31e7929e1865431ebe80d73fbfcfe93794638016b7c620f3c54362cedf1aafbde87711305f31701909eb1af86fbf72f835e127f76724e21f11aed239f37aa1fde7d30e5786582ccab57975eb3333851532e706d479716b915d005ae5432c9f2b2ab8feafd8b060cc0182e6d590d3649e74f7aa45aac9a053c9e31eb40ed5&quot;;&#xA;&#xA;override public void createSlices() {&#xA;&#x9;base.createSlices();&#xA;&#x9;this.Shift = (IShift) BackEnd.createSlice(this, UID,&quot;shift&quot;,&quot;shift);&#xA;&#x9;this.Forward = (IForward) BackEnd.createSlice(this, UID,&quot;forward&quot;,&quot;forward);&#xA;&#x9;this.Matvecproduct = (IBlockDiagonalMatVecProduct) BackEnd.createSlice(this, UID,&quot;matvecproduct&quot;,&quot;matvecproduct);&#xA;&#x9;this.Backward = (IBackward) BackEnd.createSlice(this, UID,&quot;backward&quot;,&quot;backward);&#xA;&#x9;this.Lhs = (ILHS) BackEnd.createSlice(this, UID,&quot;lhs&quot;,&quot;lhs);&#xA;&#x9;this.Input_buffer = (IBuffer) BackEnd.createSlice(this, UID,&quot;input_buffer&quot;,&quot;buffer);&#xA;&#x9;this.Output_buffer = (IBuffer) BackEnd.createSlice(this, UID,&quot;output_buffer&quot;,&quot;buffer);&#xA;} &#xA;&#xA;abstract public void compute(); &#xA;&#xA;&#xA;}&#xA;&#xA;}&#xA;" fileType="library" name="BaseIXSolveImpl.cs" srcType="base" uri="impl.sp.solve.XSolve/bin/1.0.0.0/BaseIXSolveImpl.dll" versionId="1.0.0.0">
          <dependency>common.datapartition.BlocksInfo/bin/1.0.0.0/IBlocks.dll</dependency>
          <dependency>common.topology.Ring/bin/1.0.0.0/ICell.dll</dependency>
          <dependency>common.Buffer/bin/1.0.0.0/IBuffer.dll</dependency>
          <dependency>common.solve.LHS/bin/1.0.0.0/ILHS.dll</dependency>
          <dependency>common.data.ProblemDefinition/bin/1.0.0.0/IProblemDefinition.dll</dependency>
          <dependency>common.solve.Backward/bin/1.0.0.0/IBackward.dll</dependency>
          <dependency>common.solve.BlockDiagonalMatVecProduct/bin/1.0.0.0/IBlockDiagonalMatVecProduct.dll</dependency>
          <dependency>common.solve.Forward/bin/1.0.0.0/IForward.dll</dependency>
          <dependency>common.interactionpattern.Shift/bin/1.0.0.0/IShift.dll</dependency>
          <dependency>common.solve.Solve/bin/1.0.0.0/BaseISolve.dll</dependency>
        </file>
        <file contents="using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using common.solve.Solve;&#xA;&#xA;namespace impl.sp.solve.XSolve { &#xA;&#xA;public class IXSolveImpl : BaseIXSolveImpl, ISolve&#xA;{&#xA;&#xA;public IXSolveImpl() { &#xA;&#xA;} &#xA;&#xA;public override void compute() { &#xA;&#x9;#pragma omp parallel sections&#xA;&#x9;{&#xA;&#x9;&#x9;#pragma omp section&#xA;&#x9;&#x9;forward.compute();&#xA;&#x9;&#x9;#pragma omp section&#xA;&#x9;&#x9;lhs.compute();&#xA;&#x9;&#x9;#pragma omp section&#xA;&#x9;&#x9;matvecproduct.compute();&#xA;&#x9;&#x9;#pragma omp section&#xA;&#x9;&#x9;backward.compute();&#xA;&#x9;&#x9;#pragma omp section&#xA;&#x9;&#x9;shift.synchronize();&#xA;&#x9;}&#xA;&#xA;} // end activate method &#xA;&#xA;}&#xA;&#xA;}&#xA;" fileType="library" name="IXSolveImpl.cs" srcType="user" uri="impl.sp.solve.XSolve/bin/1.0.0.0/IXSolveImpl.dll" versionId="1.0.0.0">
          <dependency>%WORKSPACE/impl.sp.solve.XSolve/bin/1.0.0.0/BaseIXSolveImpl.dll</dependency>
          <dependency>common.solve.Solve/bin/1.0.0.0/ISolve.dll</dependency>
        </file>
      </sources>
      <visualDescription h="40" w="80" x="19" y="94">
        <color b="0" g="0" r="255"/>
      </visualDescription>
      <port name="output_buffer">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="output_buffer" sRef="shift"/>
      </port>
      <port name="input_buffer">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="input_buffer" sRef="shift"/>
      </port>
      <port name="cell">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="cell" sRef="shift"/>
      </port>
      <port name="problem">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="problem" sRef="forward"/>
        <slice pRef="problem" sRef="lhs"/>
        <slice pRef="problem" sRef="matvecproduct"/>
        <slice pRef="problem" sRef="backward"/>
      </port>
      <port name="blocks">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="blocks" sRef="forward"/>
        <slice pRef="blocks" sRef="lhs"/>
        <slice pRef="blocks" sRef="matvecproduct"/>
        <slice pRef="blocks" sRef="backward"/>
      </port>
    </interface>
    <unit iRef="IXSolveImpl" private="false" uRef="solve" visibleInterface="true">
      <super cRef="base" uRef="solve"/>
      <slices cRef="topology" replica="0" uRef="cell" sliceName="cell" transitive="true">
        <visualDescription h="10" w="10" x="35" y="27"/>
      </slices>
      <slices cRef="blocks_info" replica="0" uRef="blocks" sliceName="blocks" transitive="true">
        <visualDescription h="10" w="10" x="59" y="26"/>
      </slices>
      <slices cRef="problem_data" replica="0" uRef="problem" sliceName="problem" transitive="true">
        <visualDescription h="10" w="10" x="11" y="23"/>
      </slices>
      <slices cRef="shift" replica="0" uRef="shift" sliceName="shift" transitive="false">
        <visualDescription h="10" w="10" x="17" y="5"/>
        <port>cell</port>
      </slices>
      <slices cRef="forward" replica="0" uRef="forward" sliceName="forward" transitive="false">
        <visualDescription h="10" w="10" x="8" y="28"/>
        <port>blocks</port>
        <port>problem</port>
      </slices>
      <slices cRef="lhs" replica="0" uRef="lhs" sliceName="lhs" transitive="false">
        <visualDescription h="10" w="10" x="32" y="26"/>
        <port>blocks</port>
        <port>problem</port>
      </slices>
      <slices cRef="matvecproduct" replica="0" uRef="matvecproduct" sliceName="matvecproduct" transitive="false">
        <visualDescription h="10" w="10" x="66" y="18"/>
        <port>blocks</port>
        <port>problem</port>
      </slices>
      <slices cRef="backward" replica="0" uRef="backward" sliceName="backward" transitive="false">
        <visualDescription h="10" w="10" x="57" y="5"/>
        <port>blocks</port>
        <port>problem</port>
      </slices>
      <visualDescription h="40" w="80" x="19" y="200"/>
    </unit>
    <enumerator cardinality="-1" fromSplit="false" ref="hPE.frontend.base.model.HReplicator@1b2533d1295099559883" varId="n">
      <originRef>base</originRef>
      <originRef>lhs</originRef>
      <originRef>problem_data</originRef>
      <originRef>speed</originRef>
      <links xsi:type="component:EnumerableUnitType" ref="solve"/>
      <visualDescription h="58" w="85" x="178" y="456"/>
    </enumerator>
    <enumerator cardinality="-1" fromSplit="false" ref="hPE.frontend.base.model.HReplicator@1ab5deb1295025097082" varId="n">
      <originRef>xdir</originRef>
      <originRef>base</originRef>
      <links xsi:type="component:EnumerableEntryType" cRef="xdir" uRef="x"/>
      <visualDescription h="20" w="20" x="354" y="190"/>
    </enumerator>
    <enumerator cardinality="-1" fromSplit="false" ref="hPE.frontend.base.model.HReplicator@129a52a1295029089610" varId="n">
      <originRef>method</originRef>
      <originRef>base</originRef>
      <links xsi:type="component:EnumerableEntryType" cRef="method" uRef="method"/>
      <visualDescription h="20" w="20" x="260" y="427"/>
    </enumerator>
  </componentInfo>
</component:component>