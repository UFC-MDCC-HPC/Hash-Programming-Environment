<?xml version="1.0" encoding="ASCII"?>
<component:component xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:component="http://www.example.org/HashComponent">
  <header hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000d58af5fbdffa2decdc64f8c8e20c2a6ac5e8ef09e9fa14b7e5eb5c53eee812f75b5dad9709ea84d93667ffea29249bed900028f419ebd1c5e2f6780f1eab97c422afb2c06c5d74f1cf4df04dcf6205d7cf001cb0ecb2c939efb42037602c886f2cf0750c4900a3cca58e689f486ed1ed0f70751804c1ee4cc55a93f98214c783" isAbstract="false" kind="Computation" name="SSORImpl" packagePath="impl.lu.ssor">
    <baseType>
      <extensionType>
        <implements>true</implements>
      </extensionType>
      <component hash_component_UID="00240000048000009400000006020000002400005253413100040000110000009f4e1fa9f5523cc1c2e7db9b0e1b6c299ac7c8600cebd4703f6a7003833b83d0382abba8cb07934466b9172a18264360519ec4300dc75775d259244e1f43efe5a60c3c0d013eb79c7c9748c1144c67767c416c39cd4693e21e7bcb0b9aafd136f56692650033b6b95d32528d7e8d4862d1aff645e71a3ac8e1eae833614a3690" localRef="base" location="lu.ssor.SSOR/SSOR.hpe" name="SSOR" package="lu.ssor" version="1.0.0.0">
        <visualDescription h="48" w="75" x="274" y="340">
          <color b="255" g="255" r="255"/>
        </visualDescription>
        <parameter formFieldId="instance_type" varName="I"/>
        <parameter formFieldId="class" varName="C"/>
        <port hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000f3194c0a7b197fb560dfcad8ee5b421b78f1f03d002a081027a334aa25ebf3ca7669300c0fd23f8f1547226d2833753b8583e09a6b1fcc393107abb8e8670fb2d48b48ea486fa7f94cb968f2760707e531b14426dedc94542dfdf89efcdf612aeabb738a4b713e0a7a9b3ee97b95d783693b746ddcce119ba7c5080176270d8a" localRef="blocks_info" location="lu.datapartition.BlocksInfo/BlocksInfo.hpe" name="BlocksInfo" package="lu.datapartition" exposed="true">
          <visualDescription h="29" w="76" x="58" y="360">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <unitBounds uRef="blocks">
            <visualDescription h="10" w="10" x="71" y="18"/>
          </unitBounds>
        </port>
        <port hash_component_UID="00240000048000009400000006020000002400005253413100040000110000009f8aadd94be2122c6dbf97a8db4c368df4aa14e5eef40999c777e681c973106bec55b80c133f1e7301d0ff36e2ee37a1d7d095ffff4581f295b2e8fc055fc07304178d993e14731e9c3d1e72370eee41c30ae18e6d096d5d70ac13a2833e8945cd641f4a3cab17bc2397b395bc234fdfa244afa599eb514a94d884e663b3a3a5" localRef="problem_data" location="lu.data.ProblemDefinition/ProblemDefinition.hpe" name="ProblemDefinition" package="lu.data" exposed="true">
          <visualDescription h="31" w="95" x="444" y="223">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <parameter formFieldId="instance_type" varName="I"/>
          <parameter formFieldId="class" varName="C"/>
          <unitBounds uRef="problem">
            <visualDescription h="10" w="10" x="10" y="24"/>
          </unitBounds>
        </port>
        <port hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000a5f16b771d8e6498d2d3de28ff69055bf66aa7e281fc4b0ebd4b16e81176b4e3da49a70c73092d2f9616290fa7acb2e06f92a486f19d7c2b61b569e4e990c21941ac8db14315fcead8106a62cd8e81a7ce87e967196af8b5d8b3647706c0121ae7dd36c0144f157e051a1e08938e4b954a423dff981f6493aa277f9639d533c9" localRef="neighbors" location="lu.topology.Neighbors/Neighbors.hpe" name="Neighbors" package="lu.topology" exposed="true">
          <visualDescription h="25" w="61" x="471" y="267">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <unitBounds uRef="neighbors">
            <visualDescription h="10" w="10" x="64" y="15"/>
          </unitBounds>
        </port>
        <port hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000059fdc60f0095a1142aef66ff82b5e8659158d29c9ae6eedd576a96e33ae1faaddaf78b57c8cab897deeb79b165ed011c3cd25deeeed69da38fc30a1143e39fa67ab658c278a82203de07eafa3dafe7704a84c1fffc42035b92d09563efdfe7b59862d01f598f626efa5cd4eef962fb18970112f8a530495c2a482922a19258b" localRef="mpi" location="environment.MPIDirect/MPIDirect.hpe" name="MPIDirect" package="environment" exposed="true">
          <visualDescription h="30" w="54" x="478" y="313">
            <color b="240" g="32" r="160"/>
          </visualDescription>
          <unitBounds uRef="mpi">
            <visualDescription h="10" w="10" x="22" y="3"/>
          </unitBounds>
        </port>
        <unitBounds uRef="ssor">
          <visualDescription h="10" w="10" x="33" y="3"/>
        </unitBounds>
      </component>
    </baseType>
    <versions field1="1" field2="0" field3="0" field4="0"/>
    <visualAttributes>
      <color b="255" g="255" r="255"/>
    </visualAttributes>
  </header>
  <componentInfo>
    <innerComponent hash_component_UID="00240000048000009400000006020000002400005253413100040000110000004d9c75ae5f43eaaeb10762b3e7c65b336ea4790b679668da776b55e1821b1f59388b8ea2e5f25263fc4cebe208bc2cb79d9bcbbc6167a4bd4b552d03cca4ef35f734d0cbac01feb8e9a6d6296807fccc63cd003ba735a6445bb240120f051f046aa5787203f6fd7fd7b0cd0e18a980c63f35f8918343d6ea5563d8c3211f8ab1" localRef="instance_type" location="lu.problem_size.Instance_LU/Instance_LU.hpe" name="Instance_LU" package="lu.problem_size" exposed="false">
      <visualDescription h="34" w="110" x="95" y="134">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <parameter formFieldId="class" varName="C"/>
      <unitBounds uRef="instance">
        <visualDescription h="10" w="10" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000237f437b205f7bfa00c2d0b40167897c37f84c96a62c077e2832a5360fa8c1c7438dfa969d99bb36a48a7baefcbd50d84ae2e3e71a349dce24c2b0bc473997871be48fdb29d0d48b0928ca968440c6b6663c6740810dab7b664db0e0cfbfe5b21f223402d0d9bd601294898724b6a1da46e78261ef1ee37ac63ca9b2dbdc0d90" localRef="class" location="common.problem_size.Class/Class.hpe" name="Class" package="common.problem_size" exposed="false">
      <visualDescription h="30" w="50" x="116" y="191">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds uRef="class">
        <visualDescription h="10" w="10" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <supplyParameter cRef="class" varName="C"/>
    <supplyParameter cRef="instance_type" varName="I"/>
    <interface iRef="ISSORImpl" nArgs="2">
      <slice isRef="rhs">
        <originRef cRef="rhs" iRef="IRhs"/>
        <visualDescription h="10" w="10" x="99" y="64"/>
      </slice>
      <slice isRef="l2norm">
        <originRef cRef="l2norm" iRef="IL2Norm"/>
        <visualDescription h="10" w="10" x="110" y="74"/>
      </slice>
      <slice isRef="triangular_part_jacobian_matrix">
        <originRef cRef="jacld" iRef="ITriangularPartJacobianMatrix"/>
        <visualDescription h="10" w="10" x="2" y="3"/>
      </slice>
      <slice isRef="block_triangular_solution">
        <originRef cRef="blts" iRef="IBlockTriangularSolution"/>
        <visualDescription h="10" w="10" x="21" y="26"/>
      </slice>
      <slice isRef="timer">
        <originRef cRef="timer" iRef="ITimer"/>
        <visualDescription h="10" w="10" x="133" y="54"/>
      </slice>
      <slice isRef="instance">
        <originRef cRef="instance_type" iRef="IInstance"/>
        <visualDescription h="10" w="10" x="86" y="23"/>
      </slice>
      <protocol xsi:type="component:ActionCombinatorParType" label="hPE.frontend.kinds.activate.model.protocol.HParAction@1c7cc1d" repeat="0">
        <visualDescription h="150" w="370" x="75" y="75"/>
        <action xsi:type="component:ActionActivateType" label="hPE.frontend.kinds.activate.model.protocol.HDoAction@299852" repeat="0" sliceRef="rhs">
          <visualDescription h="50" w="50" x="10" y="50"/>
        </action>
        <action xsi:type="component:ActionActivateType" label="hPE.frontend.kinds.activate.model.protocol.HDoAction@cf472b" repeat="0" sliceRef="l2norm">
          <visualDescription h="50" w="50" x="70" y="50"/>
        </action>
        <action xsi:type="component:ActionActivateType" label="hPE.frontend.kinds.activate.model.protocol.HDoAction@496f08" repeat="0" sliceRef="triangular_part_jacobian_matrix">
          <visualDescription h="50" w="50" x="130" y="50"/>
        </action>
        <action xsi:type="component:ActionActivateType" label="hPE.frontend.kinds.activate.model.protocol.HDoAction@118a58d" repeat="0" sliceRef="triangular_part_jacobian_matrix">
          <visualDescription h="50" w="50" x="190" y="50"/>
        </action>
        <action xsi:type="component:ActionActivateType" label="hPE.frontend.kinds.activate.model.protocol.HDoAction@11cf9ad" repeat="0" sliceRef="block_triangular_solution">
          <visualDescription h="50" w="50" x="250" y="50"/>
        </action>
        <action xsi:type="component:ActionActivateType" label="hPE.frontend.kinds.activate.model.protocol.HDoAction@14bfeaa" repeat="0" sliceRef="block_triangular_solution">
          <visualDescription h="50" w="50" x="310" y="50"/>
        </action>
      </protocol>
      <sources sourceType="C# Language" versionId="1.0.0.0">
        <file contents="/* Automatically Generated Code */&#xA;&#xA;using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using lu.ssor.Rhs;&#xA;using lu.problem_size.Instance_LU;&#xA;using common.problem_size.Class;&#xA;using lu.data.ProblemDefinition;&#xA;using lu.datapartition.BlocksInfo;&#xA;using lu.ssor.L2Norm;&#xA;using lu.ssor.BlockTriangularSolution;&#xA;using lu.triangular.Lower;&#xA;using lu.triangular.Upper;&#xA;using environment.MPIDirect;&#xA;using common.benchmarking.Timer;&#xA;using lu.ssor.TriangularPartJacobianMatrix;&#xA;using lu.topology.Neighbors;&#xA;using lu.problem_size.Instance;&#xA;using lu.ssor.SSOR;&#xA;&#xA;namespace impl.lu.ssor.SSORImpl { &#xA;&#xA;public abstract class BaseISSORImpl&lt;I, C>: Computation, BaseISSOR&lt;I, C>&#xA;where I:IInstance_LU&lt;C>&#xA;where C:IClass&#xA;{&#xA;&#xA;private IRhs&lt;I, C> rhs = null;&#xA;&#xA;protected IRhs&lt;I, C> Rhs {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.rhs == null)&#xA;&#x9;&#x9;&#x9;this.rhs = (IRhs&lt;I, C>) Services.getPort(&quot;rhs&quot;);&#xA;&#x9;&#x9;return this.rhs;&#xA;&#x9;}&#xA;}&#xA;&#xA;private IProblemDefinition&lt;I, C> problem = null;&#xA;&#xA;public IProblemDefinition&lt;I, C> Problem {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.problem == null)&#xA;&#x9;&#x9;&#x9;this.problem = (IProblemDefinition&lt;I, C>) Services.getPort(&quot;problem_data&quot;);&#xA;&#x9;&#x9;return this.problem;&#xA;&#x9;}&#xA;}&#xA;&#xA;private IBlocksInfo blocks = null;&#xA;&#xA;public IBlocksInfo Blocks {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.blocks == null)&#xA;&#x9;&#x9;&#x9;this.blocks = (IBlocksInfo) Services.getPort(&quot;blocks_info&quot;);&#xA;&#x9;&#x9;return this.blocks;&#xA;&#x9;}&#xA;}&#xA;&#xA;private IL2Norm&lt;I, C> l2norm = null;&#xA;&#xA;protected IL2Norm&lt;I, C> L2norm {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.l2norm == null)&#xA;&#x9;&#x9;&#x9;this.l2norm = (IL2Norm&lt;I, C>) Services.getPort(&quot;l2norm&quot;);&#xA;&#x9;&#x9;return this.l2norm;&#xA;&#x9;}&#xA;}&#xA;&#xA;private IBlockTriangularSolution&lt;I, C, ILower> block_triangular_solution = null;&#xA;&#xA;protected IBlockTriangularSolution&lt;I, C, ILower> Block_triangular_solution {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.block_triangular_solution == null)&#xA;&#x9;&#x9;&#x9;this.block_triangular_solution = (IBlockTriangularSolution&lt;I, C, ILower>) Services.getPort(&quot;blts&quot;);&#xA;&#x9;&#x9;return this.block_triangular_solution;&#xA;&#x9;}&#xA;}&#xA;&#xA;private IBlockTriangularSolution&lt;I, C, IUpper> block_triangular_solution = null;&#xA;&#xA;protected IBlockTriangularSolution&lt;I, C, IUpper> Block_triangular_solution {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.block_triangular_solution == null)&#xA;&#x9;&#x9;&#x9;this.block_triangular_solution = (IBlockTriangularSolution&lt;I, C, IUpper>) Services.getPort(&quot;buts&quot;);&#xA;&#x9;&#x9;return this.block_triangular_solution;&#xA;&#x9;}&#xA;}&#xA;&#xA;private IMPIDirect mpi = null;&#xA;&#xA;public IMPIDirect Mpi {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.mpi == null)&#xA;&#x9;&#x9;&#x9;this.mpi = (IMPIDirect) Services.getPort(&quot;mpi&quot;);&#xA;&#x9;&#x9;return this.mpi;&#xA;&#x9;}&#xA;}&#xA;&#xA;private ITimer timer = null;&#xA;&#xA;protected ITimer Timer {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.timer == null)&#xA;&#x9;&#x9;&#x9;this.timer = (ITimer) Services.getPort(&quot;timer&quot;);&#xA;&#x9;&#x9;return this.timer;&#xA;&#x9;}&#xA;}&#xA;&#xA;private ITriangularPartJacobianMatrix&lt;I, C, ILower> triangular_part_jacobian_matrix = null;&#xA;&#xA;protected ITriangularPartJacobianMatrix&lt;I, C, ILower> Triangular_part_jacobian_matrix {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.triangular_part_jacobian_matrix == null)&#xA;&#x9;&#x9;&#x9;this.triangular_part_jacobian_matrix = (ITriangularPartJacobianMatrix&lt;I, C, ILower>) Services.getPort(&quot;jacld&quot;);&#xA;&#x9;&#x9;return this.triangular_part_jacobian_matrix;&#xA;&#x9;}&#xA;}&#xA;&#xA;private ITriangularPartJacobianMatrix&lt;I, C, IUpper> triangular_part_jacobian_matrix = null;&#xA;&#xA;protected ITriangularPartJacobianMatrix&lt;I, C, IUpper> Triangular_part_jacobian_matrix {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.triangular_part_jacobian_matrix == null)&#xA;&#x9;&#x9;&#x9;this.triangular_part_jacobian_matrix = (ITriangularPartJacobianMatrix&lt;I, C, IUpper>) Services.getPort(&quot;jacu&quot;);&#xA;&#x9;&#x9;return this.triangular_part_jacobian_matrix;&#xA;&#x9;}&#xA;}&#xA;&#xA;private INeighbors neighbors = null;&#xA;&#xA;public INeighbors Neighbors {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.neighbors == null)&#xA;&#x9;&#x9;&#x9;this.neighbors = (INeighbors) Services.getPort(&quot;neighbors&quot;);&#xA;&#x9;&#x9;return this.neighbors;&#xA;&#x9;}&#xA;}&#xA;&#xA;private I instance = default(I);&#xA;&#xA;protected I Instance {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.instance == null)&#xA;&#x9;&#x9;&#x9;this.instance = (I) Services.getPort(&quot;instance_type&quot;);&#xA;&#x9;&#x9;return this.instance;&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;abstract public void compute(); &#xA;&#xA;&#xA;}&#xA;&#xA;}&#xA;" fileType="library" name="BaseISSORImpl.cs" srcType="base" uri="impl.lu.ssor.SSORImpl/bin/1.0.0.0/BaseISSORImpl.dll" versionId="1.0.0.0">
          <dependency>lu.ssor.Rhs/bin/1.0.0.0/IRhs.dll</dependency>
          <dependency>lu.problem_size.Instance_LU/bin/1.0.0.0/IInstance_LU.dll</dependency>
          <dependency>common.problem_size.Class/bin/1.0.0.0/IClass.dll</dependency>
          <dependency>lu.data.ProblemDefinition/bin/1.0.0.0/IProblemDefinition.dll</dependency>
          <dependency>lu.datapartition.BlocksInfo/bin/1.0.0.0/IBlocksInfo.dll</dependency>
          <dependency>lu.ssor.L2Norm/bin/1.0.0.0/IL2Norm.dll</dependency>
          <dependency>lu.ssor.BlockTriangularSolution/bin/1.0.0.0/IBlockTriangularSolution.dll</dependency>
          <dependency>lu.triangular.Lower/bin/1.0.0.0/ILower.dll</dependency>
          <dependency>lu.triangular.Upper/bin/1.0.0.0/IUpper.dll</dependency>
          <dependency>environment.MPIDirect/bin/1.0.0.0/IMPIDirect.dll</dependency>
          <dependency>common.benchmarking.Timer/bin/1.0.0.0/ITimer.dll</dependency>
          <dependency>lu.ssor.TriangularPartJacobianMatrix/bin/1.0.0.0/ITriangularPartJacobianMatrix.dll</dependency>
          <dependency>lu.topology.Neighbors/bin/1.0.0.0/INeighbors.dll</dependency>
          <dependency>lu.problem_size.Instance/bin/1.0.0.0/IInstance.dll</dependency>
          <dependency>lu.ssor.SSOR/bin/1.0.0.0/BaseISSOR.dll</dependency>
        </file>
        <file contents="using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using lu.problem_size.Instance_LU;&#xA;using common.problem_size.Class;&#xA;using lu.ssor.SSOR;&#xA;&#xA;namespace impl.lu.ssor.SSORImpl { &#xA;&#xA;public class ISSORImpl&lt;I, C> : BaseISSORImpl&lt;I, C>, ISSOR&lt;I, C>&#xA;where I:IInstance_LU&lt;C>&#xA;where C:IClass&#xA;{&#xA;&#xA;public ISSORImpl() { &#xA;&#xA;} &#xA;&#xA;public override void compute() { &#xA;&#x9;#pragma omp parallel sections&#xA;&#x9;{&#xA;&#x9;&#x9;#pragma omp section&#xA;&#x9;&#x9;rhs.compute();&#xA;&#x9;&#x9;#pragma omp section&#xA;&#x9;&#x9;l2norm.compute();&#xA;&#x9;&#x9;#pragma omp section&#xA;&#x9;&#x9;triangular_part_jacobian_matrix.compute();&#xA;&#x9;&#x9;#pragma omp section&#xA;&#x9;&#x9;null.compute();&#xA;&#x9;&#x9;#pragma omp section&#xA;&#x9;&#x9;block_triangular_solution.compute();&#xA;&#x9;&#x9;#pragma omp section&#xA;&#x9;&#x9;null.compute();&#xA;&#x9;}&#xA;&#xA;} // end activate method &#xA;&#xA;}&#xA;&#xA;}&#xA;" fileType="library" name="ISSORImpl.cs" srcType="user" uri="impl.lu.ssor.SSORImpl/bin/1.0.0.0/ISSORImpl.dll" versionId="1.0.0.0">
          <dependency>lu.problem_size.Instance_LU/bin/1.0.0.0/IInstance_LU.dll</dependency>
          <dependency>common.problem_size.Class/bin/1.0.0.0/IClass.dll</dependency>
          <dependency>%WORKSPACE/impl.lu.ssor.SSORImpl/bin/1.0.0.0/BaseISSORImpl.dll</dependency>
          <dependency>lu.ssor.SSOR/bin/1.0.0.0/ISSOR.dll</dependency>
        </file>
      </sources>
      <visualDescription h="91" w="147" x="173" y="102">
        <color b="255" g="128" r="0"/>
      </visualDescription>
      <port name="blocks">
        <visualDescription h="10" w="10" x="130" y="0"/>
        <slice pRef="blocks" sRef="rhs"/>
        <slice pRef="blocks" sRef="l2norm"/>
        <slice pRef="blocks" sRef="triangular_part_jacobian_matrix"/>
        <slice pRef="blocks" sRef="triangular_part_jacobian_matrix"/>
        <slice pRef="blocks" sRef="block_triangular_solution"/>
        <slice pRef="blocks" sRef="block_triangular_solution"/>
      </port>
      <port name="neighbors">
        <visualDescription h="10" w="10" x="39" y="60"/>
        <slice pRef="neighbors" sRef="rhs"/>
        <slice pRef="neighbors" sRef="block_triangular_solution"/>
        <slice pRef="neighbors" sRef="block_triangular_solution"/>
      </port>
      <port name="problem">
        <visualDescription h="10" w="10" x="0" y="76"/>
        <slice pRef="problem" sRef="rhs"/>
        <slice pRef="problem" sRef="l2norm"/>
        <slice pRef="problem" sRef="triangular_part_jacobian_matrix"/>
        <slice pRef="problem" sRef="triangular_part_jacobian_matrix"/>
        <slice pRef="problem" sRef="block_triangular_solution"/>
        <slice pRef="problem" sRef="block_triangular_solution"/>
      </port>
      <port name="mpi">
        <visualDescription h="10" w="10" x="131" y="76"/>
        <slice pRef="mpi" sRef="l2norm"/>
        <slice pRef="mpi" sRef="timer"/>
      </port>
      <parameter iname="IInstance_LU" order="0" parid="instance_type" uname="instance" varid="I"/>
      <parameter iname="IClass" order="1" parid="class" uname="class" varid="C"/>
    </interface>
    <unit iRef="ISSORImpl" private="false" uRef="ssor" visibleInterface="true">
      <super cRef="base" uRef="ssor"/>
      <slices cRef="blocks_info" replica="0" uRef="blocks" sliceName="blocks" transitive="true">
        <visualDescription h="10" w="10" x="0" y="21"/>
      </slices>
      <slices cRef="problem_data" replica="0" uRef="problem" sliceName="problem" transitive="true">
        <visualDescription h="10" w="10" x="113" y="18"/>
      </slices>
      <slices cRef="neighbors" replica="0" uRef="neighbors" sliceName="neighbors" transitive="true">
        <visualDescription h="10" w="10" x="8" y="25"/>
      </slices>
      <slices cRef="mpi" replica="0" uRef="mpi" sliceName="mpi" transitive="true">
        <visualDescription h="10" w="10" x="25" y="18"/>
      </slices>
      <slices cRef="rhs" replica="0" uRef="rhs" sliceName="rhs" transitive="false">
        <visualDescription h="10" w="10" x="13" y="3"/>
        <port>blocks</port>
        <port>problem</port>
        <port>neighbors</port>
      </slices>
      <slices cRef="l2norm" replica="0" uRef="l2norm" sliceName="l2norm" transitive="false">
        <visualDescription h="10" w="10" x="23" y="42"/>
        <port>problem</port>
        <port>blocks</port>
        <port>mpi</port>
      </slices>
      <slices cRef="jacld" replica="0" uRef="triangular_part_jacobian_matrix" sliceName="triangular_part_jacobian_matrix" transitive="false">
        <visualDescription h="10" w="10" x="64" y="3"/>
        <port>problem</port>
        <port>blocks</port>
      </slices>
      <slices cRef="jacu" replica="0" uRef="triangular_part_jacobian_matrix" sliceName="triangular_part_jacobian_matrix" transitive="false">
        <visualDescription h="10" w="10" x="89" y="5"/>
        <port>problem</port>
        <port>blocks</port>
      </slices>
      <slices cRef="blts" replica="0" uRef="block_triangular_solution" sliceName="block_triangular_solution" transitive="false">
        <visualDescription h="10" w="10" x="8" y="30"/>
        <port>blocks</port>
        <port>problem</port>
        <port>neighbors</port>
      </slices>
      <slices cRef="buts" replica="0" uRef="block_triangular_solution" sliceName="block_triangular_solution" transitive="false">
        <visualDescription h="10" w="10" x="4" y="18"/>
        <port>blocks</port>
        <port>problem</port>
        <port>neighbors</port>
      </slices>
      <slices cRef="timer" replica="0" uRef="timer" sliceName="timer" transitive="false">
        <visualDescription h="10" w="10" x="48" y="43"/>
        <port>mpi</port>
      </slices>
      <slices cRef="instance_type" replica="0" uRef="instance" sliceName="instance" transitive="false">
        <visualDescription h="10" w="10" x="86" y="23"/>
      </slices>
      <visualDescription h="54" w="105" x="230" y="241"/>
    </unit>
    <enumerator cardinality="-1" fromSplit="false" ref="hPE.frontend.base.model.HReplicator@196ae3e1301427817312" varId="n">
      <originRef>base</originRef>
      <originRef>rhs</originRef>
      <originRef>exchange1</originRef>
      <originRef>problem_data</originRef>
      <originRef>d</originRef>
      <links xsi:type="component:EnumerableUnitType" ref="ssor"/>
      <visualDescription h="53" w="53" x="52" y="253"/>
    </enumerator>
  </componentInfo>
</component:component>