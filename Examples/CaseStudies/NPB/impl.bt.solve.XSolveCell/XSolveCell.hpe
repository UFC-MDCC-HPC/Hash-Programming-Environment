<?xml version="1.0" encoding="ASCII"?>
<component:component xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:component="http://www.example.org/HashComponent">
  <header hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000f3c58a9acdca947c07de1ff5a42abd5ca39e2d88029ae378bf0ce402de49182ad099089436aeddab978a91b4b89315c274db3754b563ce5fb89a9f2c8b908cd1d5b60b56192976d097745b838f186bcc8c74d812671229122f7c0e2fac8086e052775abe53cabf0c3bc382bf53398e8035c4779c599bb27fadb9489108ce55b1" isAbstract="false" kind="Computation" name="XSolveCell" packagePath="impl.bt.solve">
    <baseType>
      <extensionType>
        <implements>true</implements>
      </extensionType>
      <component hash_component_UID="002400000480000094000000060200000024000052534131000400001100000085d41542940741460bcbb9c79aa04f1a26d61f6ab4f70cd68afb7cc856189bb278afa64f13159ea4de45f056c1e857cf17da63e85a3c38743e53f3f57e2e0c5d105cac8eba4d9c6bf8bb913b6060788005d6acbd793f9007b727493ca2ff0ebf11b41c5fa16009b0395aabdb5e103619402465840321e9767a5b3585862337b3" localRef="base" location="bt.solve.SolveCell/SolveCell.hpe" name="SolveCell" package="bt.solve" version="1.0.0.0">
        <visualDescription h="30" w="50" x="252" y="412">
          <color b="255" g="255" r="255"/>
        </visualDescription>
        <parameter formFieldId="instance_type" varName="I"/>
        <parameter formFieldId="orientation" varName="DIR"/>
        <parameter formFieldId="class" varName="C"/>
        <parameter formFieldId="method" varName="MTH"/>
        <port hash_component_UID="002400000480000094000000060200000024000052534131000400001100000009b97ce4f3981d78e251ff90894751a2f19e3d7fcafeadee8da1cb93890a7d9ed59b4773f575afc0782c61b877ac17cea1ab4429bfd162c1bdff0b6c7fe9d07f8e9ccdcd219b58671c77cf6cfbada633e18309cb4c2e518fedeaa6aecf435a12dc4a18c8384c15d61dfab5a2056f58c2bcf936823b8d84a8c5cc5e25827a1598" localRef="problem_data" location="common.data.ProblemDefinition/ProblemDefinition.hpe" name="ProblemDefinition" package="common.data" exposed="true">
          <visualDescription h="42" w="115" x="393" y="414">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <parameter formFieldId="instance_type" varName="I"/>
          <parameter formFieldId="class" varName="C"/>
          <unitBounds uRef="problem">
            <visualDescription h="10" w="10" x="5" y="2"/>
          </unitBounds>
        </port>
        <port hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000cfe94b8926d4a7de4f70d204303375a68658c9c988f5e0ec7f1f3dce28b75501399411f8002d0637e06b03a2849ef779a22e26ae137759213f595fd13ccb5101bb6f07e7560df0d8b1beadc8dacecefd49c7844d298e78991b98dd4650ec7bf0b26716727a7bc437f39a5ccede87c7db6829de68c511abb9d0b4e3644bcf66ad" localRef="blocks_info" location="common.datapartition.BlocksInfo/BlocksInfo.hpe" name="BlocksInfo" package="common.datapartition" exposed="true">
          <visualDescription h="42" w="86" x="72" y="414">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <unitBounds uRef="blocks">
            <visualDescription h="10" w="10" x="5" y="2"/>
          </unitBounds>
        </port>
        <unitBounds uRef="solve_cell">
          <visualDescription h="10" w="10" x="5" y="2"/>
        </unitBounds>
      </component>
    </baseType>
    <versions field1="1" field2="0" field3="0" field4="0"/>
    <visualAttributes>
      <color b="255" g="255" r="255"/>
    </visualAttributes>
  </header>
  <componentInfo>
    <innerComponent hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000bf53b0511383425a287205701028bd02468fc3d7e016187e316b324317e52a13e4ef0306034cc0f1612eac77c8c89171d233ab624d7f88cf7617781ea97fa7fcba7539b5065ba46eeb6fa2c58d5cc8c4bac53ea60ddac7bab5ad64d967540e78947590eeb466137ff49b1db9e8e77e8207f5e253a70d62b1914edf8cbfcfc0a4" localRef="instance_type" location="bt.problem_size.Instance_BT/Instance_BT.hpe" name="Instance_BT" package="bt.problem_size" exposed="false">
      <visualDescription h="69" w="128" x="104" y="110">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <parameter formFieldId="class" varName="C"/>
      <unitBounds uRef="instance">
        <visualDescription h="10" w="10" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000237f437b205f7bfa00c2d0b40167897c37f84c96a62c077e2832a5360fa8c1c7438dfa969d99bb36a48a7baefcbd50d84ae2e3e71a349dce24c2b0bc473997871be48fdb29d0d48b0928ca968440c6b6663c6740810dab7b664db0e0cfbfe5b21f223402d0d9bd601294898724b6a1da46e78261ef1ee37ac63ca9b2dbdc0d90" localRef="class" location="common.problem_size.Class/Class.hpe" name="Class" package="common.problem_size" exposed="false">
      <visualDescription h="30" w="50" x="503" y="112">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds uRef="class">
        <visualDescription h="10" w="10" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent hash_component_UID="002400000480000094000000060200000024000052534131000400001100000099ec807d7886f0c2735f4a4c2dc60d8feb0a435847e291a0f9dd7aed2539883c551cf8dd8fe530fe7d695458a20d532e4a58b5cf62af87f410238ec43d1e140b210efe08dea6fc4983660e10cc3431cd1102137a5df63ef9bef47a99b409c0b1c86bd4aa322397fd56e1ed3be2e81f8d1a9765c5dc9134ec1eb1b5d4567311ae" localRef="orientation" location="common.orientation.X/X.hpe" name="X" package="common.orientation" exposed="false">
      <visualDescription h="48" w="96" x="422" y="166">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds uRef="x">
        <visualDescription h="10" w="10" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent hash_component_UID="002400000480000094000000060200000024000052534131000400001100000025529ab026e77dd546c5f94e76127e76d2c281e7bdedc252d61f6953b04f54d154593621b2aef59dcd634eb5fd324c6e2ad6536ac74f2cdeb85f88c97805cf25c77d65ca931e199c09fa9424a481585529fd2e43b58709ac4c948c2b5b81be648a3f130bd9795324dc2c04a3d5143030b3afa496239772cd9f2e7d3d9a599082" localRef="method" location="bt.solve.BeamWarmingMethod/BeamWarmingMethod.hpe" name="BeamWarmingMethod" package="bt.solve" exposed="false">
      <visualDescription h="30" w="50" x="472" y="264">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds uRef="method">
        <visualDescription h="10" w="10" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <supplyParameter cRef="class" varName="C"/>
    <supplyParameter cRef="orientation" varName="DIR"/>
    <supplyParameter cRef="instance_type" varName="I"/>
    <supplyParameter cRef="method" varName="MTH"/>
    <interface iRef="IXSolveCell" nArgs="4">
      <slice isRef="blocks">
        <originRef cRef="blocks_info" iRef="IBlocks"/>
        <visualDescription h="10" w="10" x="25" y="1"/>
      </slice>
      <slice isRef="problem">
        <originRef cRef="problem_data" iRef="IProblemDefinition"/>
        <visualDescription h="10" w="10" x="44" y="0"/>
      </slice>
      <slice isRef="lhsabinit">
        <originRef cRef="lhsabinit" iRef="ILhsABInit"/>
        <visualDescription h="10" w="10" x="60" y="19"/>
      </slice>
      <slice isRef="axis">
        <originRef cRef="orientation" iRef="IAxis"/>
        <visualDescription h="10" w="10" x="42" y="26"/>
      </slice>
      <slice isRef="method">
        <originRef cRef="method" iRef="IMethod"/>
        <visualDescription h="10" w="10" x="11" y="21"/>
      </slice>
      <slice isRef="binvcrhs">
        <originRef cRef="binvcrhs" iRef="IBinvcRhs"/>
        <visualDescription h="10" w="10" x="62" y="4"/>
      </slice>
      <slice isRef="binvrhs">
        <originRef cRef="binvrhs" iRef="IBinvRhs"/>
        <visualDescription h="10" w="10" x="65" y="30"/>
      </slice>
      <slice isRef="matmul_sub">
        <originRef cRef="matmulsub" iRef="IMatMulSub"/>
        <visualDescription h="10" w="10" x="53" y="28"/>
      </slice>
      <slice isRef="matvec_sub">
        <originRef cRef="matvecsub" iRef="IMatVecSub"/>
        <visualDescription h="10" w="10" x="22" y="25"/>
      </slice>
      <protocol xsi:type="component:ActionCombinatorParType" label="hPE.frontend.kinds.activate.model.protocol.HParAction@47779d1c" repeat="0">
        <visualDescription h="150" w="310" x="75" y="75"/>
        <action xsi:type="component:ActionActivateType" label="hPE.frontend.kinds.activate.model.protocol.HDoAction@7debbdeb" repeat="0" sliceRef="lhsabinit">
          <visualDescription h="50" w="50" x="10" y="50"/>
        </action>
        <action xsi:type="component:ActionActivateType" label="hPE.frontend.kinds.activate.model.protocol.HDoAction@1cfe3" repeat="0" sliceRef="binvcrhs">
          <visualDescription h="50" w="50" x="70" y="50"/>
        </action>
        <action xsi:type="component:ActionActivateType" label="hPE.frontend.kinds.activate.model.protocol.HDoAction@76f74015" repeat="0" sliceRef="binvrhs">
          <visualDescription h="50" w="50" x="130" y="50"/>
        </action>
        <action xsi:type="component:ActionActivateType" label="hPE.frontend.kinds.activate.model.protocol.HDoAction@62905fb7" repeat="0" sliceRef="matmul_sub">
          <visualDescription h="50" w="50" x="190" y="50"/>
        </action>
        <action xsi:type="component:ActionActivateType" label="hPE.frontend.kinds.activate.model.protocol.HDoAction@747c19ee" repeat="0" sliceRef="matvec_sub">
          <visualDescription h="50" w="50" x="250" y="50"/>
        </action>
      </protocol>
      <sources sourceType="C# Language" versionId="1.0.0.0">
        <file contents="/* Automatically Generated Code */&#xA;&#xA;using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using common.datapartition.BlocksInfo;&#xA;using common.data.ProblemDefinition;&#xA;using bt.problem_size.Instance_BT;&#xA;using common.problem_size.Class;&#xA;using bt.solve.BinvRhs;&#xA;using bt.solve.BeamWarmingMethod;&#xA;using bt.solve.MatMulSub;&#xA;using common.orientation.Axis;&#xA;using bt.solve.LhsABInit;&#xA;using bt.solve.BinvcRhs;&#xA;using common.solve.Method;&#xA;using bt.solve.MatVecSub;&#xA;using common.orientation.X;&#xA;using bt.solve.SolveCell;&#xA;&#xA;namespace impl.bt.solve.XSolveCell { &#xA;&#x9;public abstract class BaseIXSolveCell&lt;I, C, DIR, MTH>: Computation, BaseISolveCell&lt;I, C, DIR, MTH>&#xA;&#x9;where I:IInstance_BT&lt;C>&#xA;&#x9;where C:IClass&#xA;&#x9;where DIR:IX&#xA;&#x9;where MTH:IBeamWarmingMethod {&#xA;&#x9;&#x9;#region data&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;protected int MAX_CELL_DIM, IMAX;&#xA;&#x9;&#x9;&#x9;protected int[,] start, end, cell_size;&#xA;&#x9;&#x9;&#x9;protected double[,,,,] rho_i, u, qs, rhs; &#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;protected double tx1, tx2, tx3, ty1, ty2, ty3, tz1, tz2, tz3,&#xA;&#x9;&#x9;&#x9;                  c1, c2, c3, c4, c5,&#xA;&#x9;&#x9;&#x9;                  c3c4, con43, c1345, dt,&#xA;&#x9;&#x9;&#x9;                  dx1, dx2, dx3, dx4, dx5, dy1, dy2, dy3, dy4, dy5, dz1, dz2, dz3, dz4, dz5;&#xA;&#xA;&#x9;&#x9;&#x9;override public void initialize(){&#xA;&#x9;            start = Blocks.cell_start;&#xA;&#x9;&#x9;&#x9;&#x9;end = Blocks.cell_end;&#xA;&#x9;&#x9;&#x9;&#x9;cell_size = Blocks.cell_size;&#xA;&#x9;&#x9;&#x9;&#x9;MAX_CELL_DIM = Problem.MAX_CELL_DIM;&#xA;&#x9;&#x9;&#x9;&#x9;IMAX = Problem.IMAX;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;            rho_i = Problem.Field_rho;&#xA;&#x9;&#x9;&#x9;&#x9;qs = Problem.Field_qs;&#x9;            &#xA;&#x9;&#x9;&#x9;&#x9;u = Problem.Field_u;&#xA;&#x9;&#x9;&#x9;&#x9;rhs = Problem.Field_rhs;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;tx1 = Constants.tx1;&#xA;&#x9;&#x9;&#x9;&#x9;tx2 = Constants.tx2;&#xA;&#x9;&#x9;&#x9;&#x9;tx3 = Constants.tx3;&#xA;&#x9;&#x9;&#x9;&#x9;ty1 = Constants.ty1;&#xA;&#x9;&#x9;&#x9;&#x9;ty2 = Constants.ty2;&#xA;&#x9;&#x9;&#x9;&#x9;ty3 = Constants.ty3;&#xA;&#x9;&#x9;&#x9;&#x9;tz1 = Constants.tz1;&#xA;&#x9;&#x9;&#x9;&#x9;tz2 = Constants.tz2;&#xA;&#x9;&#x9;&#x9;&#x9;tz3 = Constants.tz3;&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;c1 = Constants.c1;&#xA;&#x9;&#x9;&#x9;&#x9;c2 = Constants.c2;&#xA;&#x9;&#x9;&#x9;&#x9;c3 = Constants.c3;&#xA;&#x9;&#x9;&#x9;&#x9;c4 = Constants.c4;&#xA;&#x9;&#x9;&#x9;&#x9;c5 = Constants.c5;&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;c3c4 = Constants.c3c4;&#xA;&#x9;&#x9;&#x9;&#x9;con43 = Constants.con43;&#xA;&#x9;&#x9;&#x9;&#x9;c1345 = Constants.c1345;&#xA;&#x9;&#x9;&#x9;&#x9;dt = Constants.dt;&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;dx1 = Constants.dx1;&#xA;&#x9;&#x9;&#x9;&#x9;dx2 = Constants.dx2;&#xA;&#x9;&#x9;&#x9;&#x9;dx3 = Constants.dx3;&#xA;&#x9;&#x9;&#x9;&#x9;dx4 = Constants.dx4;&#xA;&#x9;&#x9;&#x9;&#x9;dx5 = Constants.dx5;&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;dy1 = Constants.dy1;&#xA;&#x9;&#x9;&#x9;&#x9;dy2 = Constants.dy2;&#xA;&#x9;&#x9;&#x9;&#x9;dy3 = Constants.dy3;&#xA;&#x9;&#x9;&#x9;&#x9;dy4 = Constants.dy4;&#xA;&#x9;&#x9;&#x9;&#x9;dy5 = Constants.dy5;&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;dz1 = Constants.dz1;&#xA;&#x9;&#x9;&#x9;&#x9;dz2 = Constants.dz2;&#xA;&#x9;&#x9;&#x9;&#x9;dz3 = Constants.dz3;&#xA;&#x9;&#x9;&#x9;&#x9;dz4 = Constants.dz4;&#xA;&#x9;&#x9;&#x9;&#x9;dz5 = Constants.dz5;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;#endregion&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;private IBlocks blocks = null;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public IBlocks Blocks {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.blocks == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.blocks = (IBlocks) Services.getPort(&quot;blocks_info&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.blocks;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;private IProblemDefinition&lt;I, C> problem = null;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public IProblemDefinition&lt;I, C> Problem {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.problem == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.problem = (IProblemDefinition&lt;I, C>) Services.getPort(&quot;problem_data&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.problem;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;private IBinvRhs&lt;MTH> binvrhs = null;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;protected IBinvRhs&lt;MTH> Binvrhs {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.binvrhs == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.binvrhs = (IBinvRhs&lt;MTH>) Services.getPort(&quot;binvrhs&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.binvrhs;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;private IMatMulSub&lt;MTH> matmul_sub = null;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;protected IMatMulSub&lt;MTH> Matmul_sub {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.matmul_sub == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.matmul_sub = (IMatMulSub&lt;MTH>) Services.getPort(&quot;matmulsub&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.matmul_sub;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;private DIR axis = default(DIR);&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;protected DIR Axis {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.axis == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.axis = (DIR) Services.getPort(&quot;orientation&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.axis;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;private ILhsABInit&lt;I, C> lhsabinit = null;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;protected ILhsABInit&lt;I, C> Lhsabinit {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.lhsabinit == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.lhsabinit = (ILhsABInit&lt;I, C>) Services.getPort(&quot;lhsabinit&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.lhsabinit;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;private IBinvcRhs&lt;MTH> binvcrhs = null;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;protected IBinvcRhs&lt;MTH> Binvcrhs {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.binvcrhs == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.binvcrhs = (IBinvcRhs&lt;MTH>) Services.getPort(&quot;binvcrhs&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.binvcrhs;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;private MTH method = default(MTH);&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;protected MTH Method {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.method == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.method = (MTH) Services.getPort(&quot;method&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.method;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;private IMatVecSub&lt;MTH> matvec_sub = null;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;protected IMatVecSub&lt;MTH> Matvec_sub {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.matvec_sub == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.matvec_sub = (IMatVecSub&lt;MTH>) Services.getPort(&quot;matvecsub&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.matvec_sub;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public static double pow2(double p) { return p * p; }&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;abstract public int go(); &#xA;&#x9;}&#xA;}&#xA;" fileType="library" name="BaseIXSolveCell.cs" srcType="base" uri="impl.bt.solve.XSolveCell/bin/1.0.0.0/BaseIXSolveCell.dll" versionId="1.0.0.0">
          <dependency>common.datapartition.BlocksInfo/bin/1.0.0.0/IBlocks.dll</dependency>
          <dependency>common.data.ProblemDefinition/bin/1.0.0.0/IProblemDefinition.dll</dependency>
          <dependency>bt.problem_size.Instance_BT/bin/1.0.0.0/IInstance_BT.dll</dependency>
          <dependency>common.problem_size.Class/bin/1.0.0.0/IClass.dll</dependency>
          <dependency>bt.solve.BinvRhs/bin/1.0.0.0/IBinvRhs.dll</dependency>
          <dependency>bt.solve.BeamWarmingMethod/bin/1.0.0.0/IBeamWarmingMethod.dll</dependency>
          <dependency>bt.solve.MatMulSub/bin/1.0.0.0/IMatMulSub.dll</dependency>
          <dependency>common.orientation.Axis/bin/1.0.0.0/IAxis.dll</dependency>
          <dependency>bt.solve.LhsABInit/bin/1.0.0.0/ILhsABInit.dll</dependency>
          <dependency>bt.solve.BinvcRhs/bin/1.0.0.0/IBinvcRhs.dll</dependency>
          <dependency>common.solve.Method/bin/1.0.0.0/IMethod.dll</dependency>
          <dependency>bt.solve.MatVecSub/bin/1.0.0.0/IMatVecSub.dll</dependency>
          <dependency>common.orientation.X/bin/1.0.0.0/IX.dll</dependency>
          <dependency>bt.solve.SolveCell/bin/1.0.0.0/BaseISolveCell.dll</dependency>
        </file>
        <file contents="using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using bt.problem_size.Instance_BT;&#xA;using common.problem_size.Class;&#xA;using common.orientation.X;&#xA;using bt.solve.BeamWarmingMethod;&#xA;using bt.solve.SolveCell;&#xA;&#xA;namespace impl.bt.solve.XSolveCell &#xA;{ &#xA;&#x9;public class IXSolveCell&lt;I, C, DIR, MTH> : BaseIXSolveCell&lt;I, C, DIR, MTH>, ISolveCell&lt;I, C, DIR, MTH>&#xA;&#x9;where I:IInstance_BT&lt;C>&#xA;&#x9;where C:IClass&#xA;&#x9;where DIR:IX&#xA;&#x9;where MTH:IBeamWarmingMethod &#xA;&#x9;{&#xA;&#x9;&#x9;private double[,,,,,] lhsc;&#xA;&#x9;&#x9;private int first;&#xA;&#x9;&#x9;private int last;&#xA;&#x9;&#x9;private int c;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public void setParameters(double[,,,,,] lhsc, int first, int last, int c)&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;this.lhsc = lhsc;&#xA;&#x9;&#x9;&#x9;this.first = first;&#xA;&#x9;&#x9;&#x9;this.last = last;&#xA;&#x9;&#x9;&#x9;this.c = c;&#xD;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public override int go()   &#xA;&#x9;&#x9;{ &#xA;            int i, j, k, isize, ksize, jsize, istart;&#xA;            double tmp1, tmp2, tmp3;&#xA;            double[,,] fjac = new double[MAX_CELL_DIM+5, 5, 5];&#xA;            double[,,] njac = new double[MAX_CELL_DIM+5, 5, 5];&#xA;            double[,,] lhsa = new double[MAX_CELL_DIM+3, 5, 5];&#xA;            double[,,] lhsb = new double[MAX_CELL_DIM+3, 5, 5];&#xA;            istart = 2;&#xA;            isize = cell_size[c, 0] + 1;&#xA;            jsize = cell_size[c, 1] - end[c, 1] + 1;&#xA;            ksize = cell_size[c, 2] - end[c, 2] + 1;&#xA;&#xA;            Lhsabinit.setParameters(lhsa, lhsb, isize);&#xA;            Lhsabinit.go();&#xA;            &#xA;            for(k = start[c, 2]; k &lt;= ksize; k++)             &#xA;            {&#xA;                for(j = start[c, 1]; j &lt;= jsize; j++) &#xA;                {&#xA;                    for(i = start[c, 0]-1; i &lt;= cell_size[c, 0] - end[c, 0]+2; i++) &#xA;                    {&#xA;                        tmp1 = rho_i[c, k, j, i, 0];  &#xA;                        tmp2 = tmp1 * tmp1;&#xA;                        tmp3 = tmp1 * tmp2;&#xA;&#xA;                        fjac[i+1, 0, 0] = 0.0d; &#xA;                        fjac[i+1, 1, 0] = 1.0d; &#xA;                        fjac[i+1, 2, 0] = 0.0d; &#xA;                        fjac[i+1, 3, 0] = 0.0d; &#xA;                        fjac[i+1, 4, 0] = 0.0d; &#xA;&#xA;                        fjac[i+1, 0, 1] = -(u[c, k, j, i, 1] * tmp2 * u[c, k, j, i, 1]) + c2 * qs[c, k, j, i, 0];&#xA;                        fjac[i+1, 1, 1] = (2.0d - c2) * (u[c, k, j, i, 1] * tmp1);&#xA;                        fjac[i+1, 2, 1] = -c2 * (u[c, k, j, i, 2] * tmp1);&#xA;                        fjac[i+1, 3, 1] = -c2 * (u[c, k, j, i, 3] * tmp1);&#xA;                        fjac[i+1, 4, 1] = c2;&#xA;&#xA;                        fjac[i+1, 0, 2] = -(u[c, k, j, i, 1] * u[c, k, j, i, 2]) * tmp2;&#xA;                        fjac[i+1, 1, 2] = u[c, k, j, i, 2] * tmp1;&#xA;                        fjac[i+1, 2, 2] = u[c, k, j, i, 1] * tmp1;&#xA;                        fjac[i+1, 3, 2] = 0.0d;&#xA;                        fjac[i+1, 4, 2] = 0.0d;&#xA;&#xA;                        fjac[i+1, 0, 3] = -(u[c, k, j, i, 1] * u[c, k, j, i, 3]) * tmp2;&#xA;                        fjac[i+1, 1, 3] = u[c, k, j, i, 3] * tmp1;&#xA;                        fjac[i+1, 2, 3] = 0.0d;&#xA;                        fjac[i+1, 3, 3] = u[c, k, j, i, 1] * tmp1;&#xA;                        fjac[i+1, 4, 3] = 0.0d;&#xA;&#xA;                        fjac[i+1, 0, 4] = (c2 * 2.0d * qs[c, k, j, i, 0] - c1 * (u[c, k, j, i, 4] * tmp1)) * (u[c, k, j, i, 1] * tmp1);&#xA;                        fjac[i+1, 1, 4] = c1 * u[c, k, j, i, 4] * tmp1 - c2 * (u[c, k, j, i, 1] * u[c, k, j, i, 1] * tmp2 + qs[c, k, j, i, 0]);&#xA;                        fjac[i+1, 2, 4] = -c2 * (u[c, k, j, i, 2] * u[c, k, j, i, 1]) * tmp2;&#xA;                        fjac[i+1, 3, 4] = -c2 * (u[c, k, j, i, 3] * u[c, k, j, i, 1]) * tmp2;&#xA;                        fjac[i+1, 4, 4] = c1 * (u[c, k, j, i, 1] * tmp1);&#xA;&#xA;                        njac[i+1, 0, 0] = 0.0d;&#xA;                        njac[i+1, 1, 0] = 0.0d;&#xA;                        njac[i+1, 2, 0] = 0.0d;&#xA;                        njac[i+1, 3, 0] = 0.0d;&#xA;                        njac[i+1, 4, 0] = 0.0d;&#xA;&#xA;                        njac[i+1, 0, 1] = -con43 * c3c4 * tmp2 * u[c, k, j, i, 1];  &#xA;                        njac[i+1, 1, 1] = con43 * c3c4 * tmp1;&#xA;                        njac[i+1, 2, 1] = 0.0d;&#xA;                        njac[i+1, 3, 1] = 0.0d;&#xA;                        njac[i+1, 4, 1] = 0.0d;&#xA;&#xA;                        njac[i+1, 0, 2] = -c3c4 * tmp2 * u[c, k, j, i, 2];  &#xA;                        njac[i+1, 1, 2] = 0.0d;&#xA;                        njac[i+1, 2, 2] = c3c4 * tmp1;&#xA;                        njac[i+1, 3, 2] = 0.0d;&#xA;                        njac[i+1, 4, 2] = 0.0d;&#xA;&#xA;                        njac[i+1, 0, 3] = -c3c4 * tmp2 * u[c, k, j, i, 3];  &#xA;                        njac[i+1, 1, 3] = 0.0d;&#xA;                        njac[i+1, 2, 3] = 0.0d;&#xA;                        njac[i+1, 3, 3] = c3c4 * tmp1;&#xA;                        njac[i+1, 4, 3] = 0.0d;&#xA;&#xA;                        njac[i+1, 0, 4] = -(con43 * c3c4&#xA;                            - c1345) * tmp3 * (pow2(u[c, k, j, i, 1]))           &#xA;                            - (c3c4 - c1345) * tmp3 * (pow2(u[c, k, j, i, 2]))  &#xA;                            - (c3c4 - c1345) * tmp3 * (pow2(u[c, k, j, i, 3]))  &#xA;                            - c1345 * tmp2 * u[c, k, j, i, 4];  &#xA;&#xA;                        njac[i+1, 1, 4] = (con43 * c3c4 - c1345) * tmp2 * u[c, k, j, i, 1];  &#xA;                        njac[i+1, 2, 4] = (c3c4 - c1345) * tmp2 * u[c, k, j, i, 2];          &#xA;                        njac[i+1, 3, 4] = (c3c4 - c1345) * tmp2 * u[c, k, j, i, 3];          &#xA;                        njac[i+1, 4, 4] = (c1345) * tmp1;&#xA;                    }&#xA;                    &#xA;                    for(i = start[c, 0]; i &lt;= isize - end[c, 0]; i++) &#xA;                    {&#xA;                        tmp1 = dt * tx1;&#xA;                        tmp2 = dt * tx2;&#xA;&#xA;                        lhsa[i, 0, 0] = -tmp2 * fjac[i, 0, 0] - tmp1 * njac[i, 0, 0] - tmp1 * dx1;&#xA;                        lhsa[i, 1, 0] = -tmp2 * fjac[i, 1, 0] - tmp1 * njac[i, 1, 0];&#xA;                        lhsa[i, 2, 0] = -tmp2 * fjac[i, 2, 0] - tmp1 * njac[i, 2, 0];&#xA;                        lhsa[i, 3, 0] = -tmp2 * fjac[i, 3, 0] - tmp1 * njac[i, 3, 0];&#xA;                        lhsa[i, 4, 0] = -tmp2 * fjac[i, 4, 0] - tmp1 * njac[i, 4, 0];&#xA;&#xA;                        lhsa[i, 0, 1] = -tmp2 * fjac[i, 0, 1] - tmp1 * njac[i, 0, 1];&#xA;                        lhsa[i, 1, 1] = -tmp2 * fjac[i, 1, 1] - tmp1 * njac[i, 1, 1] - tmp1 * dx2;&#xA;                        lhsa[i, 2, 1] = -tmp2 * fjac[i, 2, 1] - tmp1 * njac[i, 2, 1];&#xA;                        lhsa[i, 3, 1] = -tmp2 * fjac[i, 3, 1] - tmp1 * njac[i, 3, 1];&#xA;                        lhsa[i, 4, 1] = -tmp2 * fjac[i, 4, 1] - tmp1 * njac[i, 4, 1];&#xA;&#xA;                        lhsa[i, 0, 2] = -tmp2 * fjac[i, 0, 2] - tmp1 * njac[i, 0, 2];&#xA;                        lhsa[i, 1, 2] = -tmp2 * fjac[i, 1, 2] - tmp1 * njac[i, 1, 2];&#xA;                        lhsa[i, 2, 2] = -tmp2 * fjac[i, 2, 2] - tmp1 * njac[i, 2, 2] - tmp1 * dx3;&#xA;                        lhsa[i, 3, 2] = -tmp2 * fjac[i, 3, 2] - tmp1 * njac[i, 3, 2];&#xA;                        lhsa[i, 4, 2] = -tmp2 * fjac[i, 4, 2] - tmp1 * njac[i, 4, 2];&#xA;&#xA;                        lhsa[i, 0, 3] = -tmp2 * fjac[i, 0, 3] - tmp1 * njac[i, 0, 3];&#xA;                        lhsa[i, 1, 3] = -tmp2 * fjac[i, 1, 3] - tmp1 * njac[i, 1, 3];&#xA;                        lhsa[i, 2, 3] = -tmp2 * fjac[i, 2, 3] - tmp1 * njac[i, 2, 3];&#xA;                        lhsa[i, 3, 3] = -tmp2 * fjac[i, 3, 3] - tmp1 * njac[i, 3, 3] - tmp1 * dx4;&#xA;                        lhsa[i, 4, 3] = -tmp2 * fjac[i, 4, 3] - tmp1 * njac[i, 4, 3];&#xA;&#xA;                        lhsa[i, 0, 4] = -tmp2 * fjac[i, 0, 4] - tmp1 * njac[i, 0, 4];&#xA;                        lhsa[i, 1, 4] = -tmp2 * fjac[i, 1, 4] - tmp1 * njac[i, 1, 4];&#xA;                        lhsa[i, 2, 4] = -tmp2 * fjac[i, 2, 4] - tmp1 * njac[i, 2, 4];&#xA;                        lhsa[i, 3, 4] = -tmp2 * fjac[i, 3, 4] - tmp1 * njac[i, 3, 4];&#xA;                        lhsa[i, 4, 4] = -tmp2 * fjac[i, 4, 4] - tmp1 * njac[i, 4, 4] - tmp1 * dx5;&#xA;&#xA;                        lhsb[i, 0, 0] = 1.0d + tmp1 * 2.0d * njac[i+1, 0, 0] + tmp1 * 2.0d * dx1;&#xA;                        lhsb[i, 1, 0] = tmp1 * 2.0d * njac[i+1, 1, 0];&#xA;                        lhsb[i, 2, 0] = tmp1 * 2.0d * njac[i+1, 2, 0];&#xA;                        lhsb[i, 3, 0] = tmp1 * 2.0d * njac[i+1, 3, 0];&#xA;                        lhsb[i, 4, 0] = tmp1 * 2.0d * njac[i+1, 4, 0];&#xA;&#xA;                        lhsb[i, 0, 1] = tmp1 * 2.0d * njac[i+1, 0, 1];&#xA;                        lhsb[i, 1, 1] = 1.0d + tmp1 * 2.0d * njac[i+1, 1, 1] + tmp1 * 2.0d * dx2;&#xA;                        lhsb[i, 2, 1] = tmp1 * 2.0d * njac[i+1, 2, 1];&#xA;                        lhsb[i, 3, 1] = tmp1 * 2.0d * njac[i+1, 3, 1];&#xA;                        lhsb[i, 4, 1] = tmp1 * 2.0d * njac[i+1, 4, 1];&#xA;&#xA;                        lhsb[i, 0, 2] = tmp1 * 2.0d * njac[i+1, 0, 2];&#xA;                        lhsb[i, 1, 2] = tmp1 * 2.0d * njac[i+1, 1, 2];&#xA;                        lhsb[i, 2, 2] = 1.0d + tmp1 * 2.0d * njac[i+1, 2, 2] + tmp1 * 2.0d * dx3;&#xA;                        lhsb[i, 3, 2] = tmp1 * 2.0d * njac[i+1, 3, 2];&#xA;                        lhsb[i, 4, 2] = tmp1 * 2.0d * njac[i+1, 4, 2];&#xA;&#xA;                        lhsb[i, 0, 3] = tmp1 * 2.0d * njac[i+1, 0, 3];&#xA;                        lhsb[i, 1, 3] = tmp1 * 2.0d * njac[i+1, 1, 3];&#xA;                        lhsb[i, 2, 3] = tmp1 * 2.0d * njac[i+1, 2, 3];&#xA;                        lhsb[i, 3, 3] = 1.0d + tmp1 * 2.0d * njac[i+1, 3, 3] + tmp1 * 2.0d * dx4;&#xA;                        lhsb[i, 4, 3] = tmp1 * 2.0d * njac[i+1, 4, 3];&#xA;&#xA;                        lhsb[i, 0, 4] = tmp1 * 2.0d * njac[i+1, 0, 4];&#xA;                        lhsb[i, 1, 4] = tmp1 * 2.0d * njac[i+1, 1, 4];&#xA;                        lhsb[i, 2, 4] = tmp1 * 2.0d * njac[i+1, 2, 4];&#xA;                        lhsb[i, 3, 4] = tmp1 * 2.0d * njac[i+1, 3, 4];&#xA;                        lhsb[i, 4, 4] = 1.0d + tmp1 * 2.0d * njac[i+1, 4, 4] + tmp1 * 2.0d * dx5;&#xA;&#xA;                        lhsc[c, k, j, i, 0, 0] = tmp2 * fjac[i+2, 0, 0] - tmp1 * njac[i+2, 0, 0] - tmp1 * dx1;&#xA;                        lhsc[c, k, j, i, 1, 0] = tmp2 * fjac[i+2, 1, 0] - tmp1 * njac[i+2, 1, 0];&#xA;                        lhsc[c, k, j, i, 2, 0] = tmp2 * fjac[i+2, 2, 0] - tmp1 * njac[i+2, 2, 0];&#xA;                        lhsc[c, k, j, i, 3, 0] = tmp2 * fjac[i+2, 3, 0] - tmp1 * njac[i+2, 3, 0];&#xA;                        lhsc[c, k, j, i, 4, 0] = tmp2 * fjac[i+2, 4, 0] - tmp1 * njac[i+2, 4, 0];&#xA;&#xA;                        lhsc[c, k, j, i, 0, 1] = tmp2 * fjac[i+2, 0, 1] - tmp1 * njac[i+2, 0, 1];&#xA;                        lhsc[c, k, j, i, 1, 1] = tmp2 * fjac[i+2, 1, 1] - tmp1 * njac[i+2, 1, 1] - tmp1 * dx2;&#xA;                        lhsc[c, k, j, i, 2, 1] = tmp2 * fjac[i+2, 2, 1] - tmp1 * njac[i+2, 2, 1];&#xA;                        lhsc[c, k, j, i, 3, 1] = tmp2 * fjac[i+2, 3, 1] - tmp1 * njac[i+2, 3, 1];&#xA;                        lhsc[c, k, j, i, 4, 1] = tmp2 * fjac[i+2, 4, 1] - tmp1 * njac[i+2, 4, 1];&#xA;&#xA;                        lhsc[c, k, j, i, 0, 2] = tmp2 * fjac[i+2, 0, 2] - tmp1 * njac[i+2, 0, 2];&#xA;                        lhsc[c, k, j, i, 1, 2] = tmp2 * fjac[i+2, 1, 2] - tmp1 * njac[i+2, 1, 2];&#xA;                        lhsc[c, k, j, i, 2, 2] = tmp2 * fjac[i+2, 2, 2] - tmp1 * njac[i+2, 2, 2] - tmp1 * dx3;&#xA;                        lhsc[c, k, j, i, 3, 2] = tmp2 * fjac[i+2, 3, 2] - tmp1 * njac[i+2, 3, 2];&#xA;                        lhsc[c, k, j, i, 4, 2] = tmp2 * fjac[i+2, 4, 2] - tmp1 * njac[i+2, 4, 2];&#xA;&#xA;                        lhsc[c, k, j, i, 0, 3] = tmp2 * fjac[i+2, 0, 3] - tmp1 * njac[i+2, 0, 3];&#xA;                        lhsc[c, k, j, i, 1, 3] = tmp2 * fjac[i+2, 1, 3] - tmp1 * njac[i+2, 1, 3];&#xA;                        lhsc[c, k, j, i, 2, 3] = tmp2 * fjac[i+2, 2, 3] - tmp1 * njac[i+2, 2, 3];&#xA;                        lhsc[c, k, j, i, 3, 3] = tmp2 * fjac[i+2, 3, 3] - tmp1 * njac[i+2, 3, 3] - tmp1 * dx4;&#xA;                        lhsc[c, k, j, i, 4, 3] = tmp2 * fjac[i+2, 4, 3] - tmp1 * njac[i+2, 4, 3];&#xA;&#xA;                        lhsc[c, k, j, i, 0, 4] = tmp2 * fjac[i+2, 0, 4] - tmp1 * njac[i+2, 0, 4];&#xA;                        lhsc[c, k, j, i, 1, 4] = tmp2 * fjac[i+2, 1, 4] - tmp1 * njac[i+2, 1, 4];&#xA;                        lhsc[c, k, j, i, 2, 4] = tmp2 * fjac[i+2, 2, 4] - tmp1 * njac[i+2, 2, 4];&#xA;                        lhsc[c, k, j, i, 3, 4] = tmp2 * fjac[i+2, 3, 4] - tmp1 * njac[i+2, 3, 4];&#xA;                        lhsc[c, k, j, i, 4, 4] = tmp2 * fjac[i+2, 4, 4] - tmp1 * njac[i+2, 4, 4] - tmp1 * dx5;&#xA;                    }&#xA;                    &#xA;                    if(first == 1) &#xA;                    {&#xA;                        Binvcrhs.setParameters(lhsb, lhsc, rhs, istart, c, k, j, istart, c, k, j, istart);&#xA;                        Binvcrhs.go();&#xA;                    }&#xA;                    &#xA;                    for(i = istart + first; i &lt;= isize - last; i++) &#xA;                    {&#xA;                        Matvec_sub.setParameters(lhsa, rhs, rhs, i, c, k, j, i-1, c, k, j, i);&#xA;                        Matvec_sub.go();&#xA;                        Matmul_sub.setParameters(lhsa, lhsc, lhsb, i, c, k, j, i-1, i);&#xA;                        Matmul_sub.go();&#xA;                        Binvcrhs.setParameters(lhsb, lhsc, rhs, i, c, k, j, i, c, k, j, i);&#xA;                        Binvcrhs.go();&#xA;                    }&#xA;                    &#xA;                    if(last == 1) &#xA;                    {&#xA;                        Matvec_sub.setParameters(lhsa, rhs, rhs, isize, c, k, j, isize-1, c, k, j, isize);&#xA;                        Matvec_sub.go();&#xA;                        Matmul_sub.setParameters(lhsa, lhsc, lhsb, isize, c, k, j, isize-1, isize);&#xA;                        Matmul_sub.go();&#xA;                        Binvrhs.setParameters(lhsb, rhs, isize, c, k, j, isize);&#xA;                        Binvrhs.go();&#xA;                    }&#xA;                }&#xA;            }&#xA;            &#xA;            return 0;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;" fileType="library" name="IXSolveCell.cs" srcType="user" uri="impl.bt.solve.XSolveCell/bin/1.0.0.0/IXSolveCell.dll" versionId="1.0.0.0">
          <dependency>bt.problem_size.Instance_BT/bin/1.0.0.0/IInstance_BT.dll</dependency>
          <dependency>common.problem_size.Class/bin/1.0.0.0/IClass.dll</dependency>
          <dependency>common.orientation.X/bin/1.0.0.0/IX.dll</dependency>
          <dependency>bt.solve.BeamWarmingMethod/bin/1.0.0.0/IBeamWarmingMethod.dll</dependency>
          <dependency>%WORKSPACE/impl.bt.solve.XSolveCell/bin/1.0.0.0/BaseIXSolveCell.dll</dependency>
          <dependency>bt.solve.SolveCell/bin/1.0.0.0/ISolveCell.dll</dependency>
        </file>
      </sources>
      <visualDescription h="51" w="103" x="198" y="158">
        <color b="255" g="128" r="255"/>
      </visualDescription>
      <port name="blocks">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="blocks" sRef="blocks"/>
      </port>
      <port name="problem">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="problem" sRef="problem"/>
      </port>
      <parameter iname="IInstance_BT" order="0" parid="instance_type" uname="instance" varid="I"/>
      <parameter iname="IClass" order="1" parid="class" uname="class" varid="C"/>
      <parameter iname="IX" order="2" parid="orientation" uname="x" varid="DIR"/>
      <parameter iname="IBeamWarmingMethod" order="3" parid="method" uname="method" varid="MTH"/>
    </interface>
    <unit iRef="IXSolveCell" private="false" uRef="solve_cell" visibleInterface="true">
      <super cRef="base" uRef="solve_cell"/>
      <slices cRef="blocks_info" replica="0" uRef="blocks" sliceName="blocks" transitive="false">
        <visualDescription h="10" w="10" x="25" y="1"/>
      </slices>
      <slices cRef="problem_data" replica="0" uRef="problem" sliceName="problem" transitive="false">
        <visualDescription h="10" w="10" x="44" y="0"/>
      </slices>
      <slices cRef="lhsabinit" replica="0" uRef="lhsabinit" sliceName="lhsabinit" transitive="false">
        <visualDescription h="10" w="10" x="7" y="8"/>
      </slices>
      <slices cRef="orientation" replica="0" uRef="axis" sliceName="axis" transitive="false">
        <visualDescription h="10" w="10" x="24" y="42"/>
      </slices>
      <slices cRef="method" replica="0" uRef="method" sliceName="method" transitive="false">
        <visualDescription h="10" w="10" x="5" y="37"/>
      </slices>
      <slices cRef="binvcrhs" replica="0" uRef="binvcrhs" sliceName="binvcrhs" transitive="false">
        <visualDescription h="10" w="10" x="68" y="7"/>
      </slices>
      <slices cRef="binvrhs" replica="0" uRef="binvrhs" sliceName="binvrhs" transitive="false">
        <visualDescription h="10" w="10" x="75" y="30"/>
      </slices>
      <slices cRef="matmulsub" replica="0" uRef="matmul_sub" sliceName="matmul_sub" transitive="false">
        <visualDescription h="10" w="10" x="62" y="39"/>
      </slices>
      <slices cRef="matvecsub" replica="0" uRef="matvec_sub" sliceName="matvec_sub" transitive="false">
        <visualDescription h="10" w="10" x="42" y="40"/>
      </slices>
      <visualDescription h="55" w="87" x="209" y="298"/>
    </unit>
    <enumerator cardinality="-1" fromSplit="false" ref="hPE.frontend.base.model.HReplicator@129a52a1295029089610" varId="n">
      <originRef>base</originRef>
      <originRef>binvrhs</originRef>
      <originRef>method</originRef>
      <links xsi:type="component:EnumerableUnitType" ref="solve_cell"/>
      <visualDescription h="60" w="61" x="61" y="289"/>
    </enumerator>
    <enumerator cardinality="-1" fromSplit="false" ref="hPE.frontend.base.model.HReplicator@1ab5deb1295025097082" varId="n">
      <originRef>orientation</originRef>
      <originRef>base</originRef>
      <links xsi:type="component:EnumerableEntryType" cRef="orientation" uRef="x"/>
      <visualDescription h="20" w="20" x="329" y="167"/>
    </enumerator>
    <enumerator cardinality="-1" fromSplit="false" ref="hPE.frontend.base.model.HReplicator@129a52a1295029089610" varId="n">
      <originRef>method</originRef>
      <originRef>base</originRef>
      <links xsi:type="component:EnumerableEntryType" cRef="method" uRef="method"/>
      <visualDescription h="20" w="20" x="327" y="263"/>
    </enumerator>
  </componentInfo>
</component:component>