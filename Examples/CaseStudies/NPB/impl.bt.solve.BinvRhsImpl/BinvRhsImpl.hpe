<?xml version="1.0" encoding="ASCII"?>
<component:component xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:component="http://www.example.org/HashComponent">
  <header hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000471aeb7eff626930c12c80bf94fb4eaa7efa2756c13ff6e7dd7be9fe03a1f8b69370af6a0372746fca61bfc87362dcc9f550fc67cdaf15d39dc5c3837a98a23006da59437520106054e275eff1b05a5404ae11790352bc753be33da588f9a2cfc15b35a2669ec1ed99a386158a9a7fe2986dd43b6d182dfde0859527865f5e88" isAbstract="false" kind="Computation" name="BinvRhsImpl" packagePath="impl.bt.solve">
    <baseType>
      <extensionType>
        <implements>true</implements>
      </extensionType>
      <component hash_component_UID="00240000048000009400000006020000002400005253413100040000110000003964d9230613b46d8ba1ac6ea49b3825d5292afbecafe814056823785bc6da7e65b332d9913824cedca9d744592863cc0c38e5f66919f0aad3e9137f5e52620c7532b2bf471928c5359763ff77a27d912bdeadf23d83af73e7f3cffc5069db0c55588fcb2592a3bf94023b30756df1ecabe6ca6de425241e4cc7718786f980b1" localRef="base" location="bt.solve.BinvRhs/BinvRhs.hpe" name="BinvRhs" package="bt.solve" version="1.0.0.0">
        <visualDescription h="30" w="50" x="269" y="419">
          <color b="255" g="255" r="255"/>
        </visualDescription>
        <parameter formFieldId="instance_type" varName="I"/>
        <parameter formFieldId="class" varName="C"/>
        <parameter formFieldId="method" varName="MTH"/>
        <unitBounds uRef="binvrhs">
          <visualDescription h="10" w="10" x="5" y="2"/>
        </unitBounds>
      </component>
    </baseType>
    <versions field1="1" field2="0" field3="0" field4="0"/>
    <visualAttributes>
      <color b="255" g="255" r="255"/>
    </visualAttributes>
  </header>
  <componentInfo>
    <innerComponent hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000bf53b0511383425a287205701028bd02468fc3d7e016187e316b324317e52a13e4ef0306034cc0f1612eac77c8c89171d233ab624d7f88cf7617781ea97fa7fcba7539b5065ba46eeb6fa2c58d5cc8c4bac53ea60ddac7bab5ad64d967540e78947590eeb466137ff49b1db9e8e77e8207f5e253a70d62b1914edf8cbfcfc0a4" localRef="instance_type" location="bt.problem_size.Instance_BT/Instance_BT.hpe" name="Instance_BT" package="bt.problem_size" exposed="false">
      <visualDescription h="64" w="147" x="438" y="84">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <parameter formFieldId="class" varName="C"/>
      <unitBounds uRef="instance">
        <visualDescription h="10" w="10" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent hash_component_UID="002400000480000094000000060200000024000052534131000400001100000025529ab026e77dd546c5f94e76127e76d2c281e7bdedc252d61f6953b04f54d154593621b2aef59dcd634eb5fd324c6e2ad6536ac74f2cdeb85f88c97805cf25c77d65ca931e199c09fa9424a481585529fd2e43b58709ac4c948c2b5b81be648a3f130bd9795324dc2c04a3d5143030b3afa496239772cd9f2e7d3d9a599082" localRef="method" location="bt.solve.BeamWarmingMethod/BeamWarmingMethod.hpe" name="BeamWarmingMethod" package="bt.solve" exposed="false">
      <visualDescription h="30" w="50" x="491" y="232">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds uRef="method">
        <visualDescription h="10" w="10" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000237f437b205f7bfa00c2d0b40167897c37f84c96a62c077e2832a5360fa8c1c7438dfa969d99bb36a48a7baefcbd50d84ae2e3e71a349dce24c2b0bc473997871be48fdb29d0d48b0928ca968440c6b6663c6740810dab7b664db0e0cfbfe5b21f223402d0d9bd601294898724b6a1da46e78261ef1ee37ac63ca9b2dbdc0d90" localRef="class" location="common.problem_size.Class/Class.hpe" name="Class" package="common.problem_size" exposed="false">
      <visualDescription h="30" w="50" x="242" y="121">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds uRef="class">
        <visualDescription h="10" w="10" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <supplyParameter cRef="class" varName="C"/>
    <supplyParameter cRef="method" varName="MTH"/>
    <supplyParameter cRef="instance_type" varName="I"/>
    <interface iRef="IBinvRhsImpl" nArgs="1">
      <slice isRef="method">
        <originRef cRef="method" iRef="IMethod"/>
        <visualDescription h="10" w="10" x="32" y="24"/>
      </slice>
      <protocol xsi:type="component:ActionSkipType" label="hPE.frontend.kinds.activate.model.protocol.HSkipAction@337b6f68" repeat="0">
        <visualDescription h="50" w="50" x="75" y="75"/>
      </protocol>
      <sources sourceType="C# Language" versionId="1.0.0.0">
        <file contents="/* Automatically Generated Code */&#xA;&#xA;using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using common.solve.Method;&#xA;using bt.solve.BeamWarmingMethod;&#xA;using bt.solve.BinvRhs;&#xA;&#xA;namespace impl.bt.solve.BinvRhsImpl { &#xA;&#xA;public abstract class BaseIBinvRhsImpl&lt;MTH>: Computation, BaseIBinvRhs&lt;MTH>&#xA;where MTH:IBeamWarmingMethod&#xA;{&#xA;&#xA;/*private IBlocks blocks = null;&#xA;&#xA;public IBlocks Blocks {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.blocks == null)&#xA;&#x9;&#x9;&#x9;this.blocks = (IBlocks) Services.getPort(&quot;blocks_info&quot;);&#xA;&#x9;&#x9;return this.blocks;&#xA;&#x9;}&#xA;}&#xA;&#xA;private IProblemDefinition&lt;I, C> problem = null;&#xA;&#xA;public IProblemDefinition&lt;I, C> Problem {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.problem == null)&#xA;&#x9;&#x9;&#x9;this.problem = (IProblemDefinition&lt;I, C>) Services.getPort(&quot;problem_data&quot;);&#xA;&#x9;&#x9;return this.problem;&#xA;&#x9;}&#xA;}&#xA;&#x9;&#x9; */&#xA;&#x9;&#x9;&#xA;private MTH method = default(MTH);&#xA;&#xA;protected MTH Method {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.method == null)&#xA;&#x9;&#x9;&#x9;this.method = (MTH) Services.getPort(&quot;method&quot;);&#xA;&#x9;&#x9;return this.method;&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;abstract public int go(); &#xA;&#xA;&#xA;&#xA;}&#xA;&#xA;}&#xA;" fileType="library" name="BaseIBinvRhsImpl.cs" srcType="base" uri="impl.bt.solve.BinvRhsImpl/bin/1.0.0.0/BaseIBinvRhsImpl.dll" versionId="1.0.0.0">
          <dependency>common.datapartition.BlocksInfo/bin/1.0.0.0/IBlocks.dll</dependency>
          <dependency>common.data.ProblemDefinition/bin/1.0.0.0/IProblemDefinition.dll</dependency>
          <dependency>bt.problem_size.Instance_BT/bin/1.0.0.0/IInstance_BT.dll</dependency>
          <dependency>common.problem_size.Class/bin/1.0.0.0/IClass.dll</dependency>
          <dependency>common.solve.Method/bin/1.0.0.0/IMethod.dll</dependency>
          <dependency>bt.solve.BeamWarmingMethod/bin/1.0.0.0/IBeamWarmingMethod.dll</dependency>
          <dependency>bt.solve.BinvRhs/bin/1.0.0.0/BaseIBinvRhs.dll</dependency>
        </file>
        <file contents="using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using bt.solve.BeamWarmingMethod;&#xA;using bt.solve.BinvRhs;&#xA;&#xA;namespace impl.bt.solve.BinvRhsImpl &#xA;{ &#xA;&#x9;public class IBinvRhsImpl&lt;MTH> : BaseIBinvRhsImpl&lt;MTH>, IBinvRhs&lt;MTH>&#xA;&#x9;&#x9;where MTH:IBeamWarmingMethod &#xA;&#x9;{&#xA;&#x9;&#x9;private double[,,] lhs;&#xA;&#x9;&#x9;private double[,,,,] r;&#xA;&#x9;&#x9;private int l1, r1, r2, r3, r4;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public void setParameters(double[,,] lhs, double[,,,,] r, int l1, int r1, int r2, int r3, int r4) &#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;this.lhs = lhs;&#xA;&#x9;&#x9;&#x9;this.r = r;&#xA;&#x9;&#x9;&#x9;this.l1 = l1;&#xA;&#x9;&#x9;&#x9;this.r1 = r1;&#xA;&#x9;&#x9;&#x9;this.r2 = r2;&#xA;&#x9;&#x9;&#x9;this.r3 = r3;&#xA;&#x9;&#x9;&#x9;this.r4 = r4;&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;public override int go()   &#xA;&#x9;&#x9;{ &#xA;&#x9;&#x9;&#x9;double pivot, coeff;&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;pivot = 1.00d / lhs[l1, 0, 0];&#xA;&#x9;&#x9;&#x9;lhs[l1, 1, 0] = lhs[l1, 1, 0] * pivot;&#xA;&#x9;&#x9;&#x9;lhs[l1, 2, 0] = lhs[l1, 2, 0] * pivot;&#xA;&#x9;&#x9;&#x9;lhs[l1, 3, 0] = lhs[l1, 3, 0] * pivot;&#xA;&#x9;&#x9;&#x9;lhs[l1, 4, 0] = lhs[l1, 4, 0] * pivot;&#xA;&#x9;&#x9;&#x9;r[r1, r2, r3, r4, 0] = r[r1, r2, r3, r4, 0] * pivot;&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;coeff =         lhs[l1, 0, 1];&#xA;&#x9;&#x9;&#x9;lhs[l1, 1, 1] = lhs[l1, 1, 1] - coeff * lhs[l1, 1, 0];&#xA;&#x9;&#x9;&#x9;lhs[l1, 2, 1] = lhs[l1, 2, 1] - coeff * lhs[l1, 2, 0];&#xA;&#x9;&#x9;&#x9;lhs[l1, 3, 1] = lhs[l1, 3, 1] - coeff * lhs[l1, 3, 0];&#xA;&#x9;&#x9;&#x9;lhs[l1, 4, 1] = lhs[l1, 4, 1] - coeff * lhs[l1, 4, 0];&#xA;&#x9;&#x9;&#x9;r[r1, r2, r3, r4, 1] = r[r1, r2, r3, r4, 1] - coeff * r[r1, r2, r3, r4, 0];&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;coeff =         lhs[l1, 0, 2];&#xA;&#x9;&#x9;&#x9;lhs[l1, 1, 2] = lhs[l1, 1, 2] - coeff * lhs[l1, 1, 0];&#xA;&#x9;&#x9;&#x9;lhs[l1, 2, 2] = lhs[l1, 2, 2] - coeff * lhs[l1, 2, 0];&#xA;&#x9;&#x9;&#x9;lhs[l1, 3, 2] = lhs[l1, 3, 2] - coeff * lhs[l1, 3, 0];&#xA;&#x9;&#x9;&#x9;lhs[l1, 4, 2] = lhs[l1, 4, 2] - coeff * lhs[l1, 4, 0];&#xA;&#x9;&#x9;&#x9;r[r1, r2, r3, r4, 2] = r[r1, r2, r3, r4, 2] - coeff * r[r1, r2, r3, r4, 0];&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;coeff =         lhs[l1, 0, 3];&#xA;&#x9;&#x9;&#x9;lhs[l1, 1, 3] = lhs[l1, 1, 3] - coeff * lhs[l1, 1, 0];&#xA;&#x9;&#x9;&#x9;lhs[l1, 2, 3] = lhs[l1, 2, 3] - coeff * lhs[l1, 2, 0];&#xA;&#x9;&#x9;&#x9;lhs[l1, 3, 3] = lhs[l1, 3, 3] - coeff * lhs[l1, 3, 0];&#xA;&#x9;&#x9;&#x9;lhs[l1, 4, 3] = lhs[l1, 4, 3] - coeff * lhs[l1, 4, 0];&#xA;&#x9;&#x9;&#x9;r[r1, r2, r3, r4, 3] = r[r1, r2, r3, r4, 3] - coeff * r[r1, r2, r3, r4, 0];&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;coeff =         lhs[l1, 0, 4];&#xA;&#x9;&#x9;&#x9;lhs[l1, 1, 4] = lhs[l1, 1, 4] - coeff * lhs[l1, 1, 0];&#xA;&#x9;&#x9;&#x9;lhs[l1, 2, 4] = lhs[l1, 2, 4] - coeff * lhs[l1, 2, 0];&#xA;&#x9;&#x9;&#x9;lhs[l1, 3, 4] = lhs[l1, 3, 4] - coeff * lhs[l1, 3, 0];&#xA;&#x9;&#x9;&#x9;lhs[l1, 4, 4] = lhs[l1, 4, 4] - coeff * lhs[l1, 4, 0];&#xA;&#x9;&#x9;&#x9;r[r1, r2, r3, r4, 4] = r[r1, r2, r3, r4, 4] - coeff * r[r1, r2, r3, r4, 0];&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;pivot = 1.00d / lhs[l1, 1, 1];&#xA;&#x9;&#x9;&#x9;lhs[l1, 2, 1] = lhs[l1, 2, 1] * pivot;&#xA;&#x9;&#x9;&#x9;lhs[l1, 3, 1] = lhs[l1, 3, 1] * pivot;&#xA;&#x9;&#x9;&#x9;lhs[l1, 4, 1] = lhs[l1, 4, 1] * pivot;&#xA;&#x9;&#x9;&#x9;r[r1, r2, r3, r4, 1] = r[r1, r2, r3, r4, 1] * pivot;&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;coeff =         lhs[l1, 1, 0];&#xA;&#x9;&#x9;&#x9;lhs[l1, 2, 0] = lhs[l1, 2, 0] - coeff * lhs[l1, 2, 1];&#xA;&#x9;&#x9;&#x9;lhs[l1, 3, 0] = lhs[l1, 3, 0] - coeff * lhs[l1, 3, 1];&#xA;&#x9;&#x9;&#x9;lhs[l1, 4, 0] = lhs[l1, 4, 0] - coeff * lhs[l1, 4, 1];&#xA;&#x9;&#x9;&#x9;r[r1, r2, r3, r4, 0] = r[r1, r2, r3, r4, 0] - coeff * r[r1, r2, r3, r4, 1];&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;coeff =         lhs[l1, 1, 2];&#xA;&#x9;&#x9;&#x9;lhs[l1, 2, 2] = lhs[l1, 2, 2] - coeff * lhs[l1, 2, 1];&#xA;&#x9;&#x9;&#x9;lhs[l1, 3, 2] = lhs[l1, 3, 2] - coeff * lhs[l1, 3, 1];&#xA;&#x9;&#x9;&#x9;lhs[l1, 4, 2] = lhs[l1, 4, 2] - coeff * lhs[l1, 4, 1];&#xA;&#x9;&#x9;&#x9;r[r1, r2, r3, r4, 2] = r[r1, r2, r3, r4, 2] - coeff * r[r1, r2, r3, r4, 1];&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;coeff =         lhs[l1, 1, 3];&#xA;&#x9;&#x9;&#x9;lhs[l1, 2, 3] = lhs[l1, 2, 3] - coeff * lhs[l1, 2, 1];&#xA;&#x9;&#x9;&#x9;lhs[l1, 3, 3] = lhs[l1, 3, 3] - coeff * lhs[l1, 3, 1];&#xA;&#x9;&#x9;&#x9;lhs[l1, 4, 3] = lhs[l1, 4, 3] - coeff * lhs[l1, 4, 1];&#xA;&#x9;&#x9;&#x9;r[r1, r2, r3, r4, 3] = r[r1, r2, r3, r4, 3] - coeff * r[r1, r2, r3, r4, 1];&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;coeff =         lhs[l1, 1, 4];&#xA;&#x9;&#x9;&#x9;lhs[l1, 2, 4] = lhs[l1, 2, 4] - coeff * lhs[l1, 2, 1];&#xA;&#x9;&#x9;&#x9;lhs[l1, 3, 4] = lhs[l1, 3, 4] - coeff * lhs[l1, 3, 1];&#xA;&#x9;&#x9;&#x9;lhs[l1, 4, 4] = lhs[l1, 4, 4] - coeff * lhs[l1, 4, 1];&#xA;&#x9;&#x9;&#x9;r[r1, r2, r3, r4, 4] = r[r1, r2, r3, r4, 4] - coeff * r[r1, r2, r3, r4, 1];&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;pivot = 1.00d / lhs[l1, 2, 2];&#xA;&#x9;&#x9;&#x9;lhs[l1, 3, 2] = lhs[l1, 3, 2] * pivot;&#xA;&#x9;&#x9;&#x9;lhs[l1, 4, 2] = lhs[l1, 4, 2] * pivot;&#xA;&#x9;&#x9;&#x9;r[r1, r2, r3, r4, 2] = r[r1, r2, r3, r4, 2] * pivot;&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;coeff =         lhs[l1, 2, 0];&#xA;&#x9;&#x9;&#x9;lhs[l1, 3, 0] = lhs[l1, 3, 0] - coeff * lhs[l1, 3, 2];&#xA;&#x9;&#x9;&#x9;lhs[l1, 4, 0] = lhs[l1, 4, 0] - coeff * lhs[l1, 4, 2];&#xA;&#x9;&#x9;&#x9;r[r1, r2, r3, r4, 0] = r[r1, r2, r3, r4, 0] - coeff * r[r1, r2, r3, r4, 2];&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;coeff =         lhs[l1, 2, 1];&#xA;&#x9;&#x9;&#x9;lhs[l1, 3, 1] = lhs[l1, 3, 1] - coeff * lhs[l1, 3, 2];&#xA;&#x9;&#x9;&#x9;lhs[l1, 4, 1] = lhs[l1, 4, 1] - coeff * lhs[l1, 4, 2];&#xA;&#x9;&#x9;&#x9;r[r1, r2, r3, r4, 1] = r[r1, r2, r3, r4, 1] - coeff * r[r1, r2, r3, r4, 2];&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;coeff =         lhs[l1, 2, 3];&#xA;&#x9;&#x9;&#x9;lhs[l1, 3, 3] = lhs[l1, 3, 3] - coeff * lhs[l1, 3, 2];&#xA;&#x9;&#x9;&#x9;lhs[l1, 4, 3] = lhs[l1, 4, 3] - coeff * lhs[l1, 4, 2];&#xA;&#x9;&#x9;&#x9;r[r1, r2, r3, r4, 3] = r[r1, r2, r3, r4, 3] - coeff * r[r1, r2, r3, r4, 2];&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;coeff =         lhs[l1, 2, 4];&#xA;&#x9;&#x9;&#x9;lhs[l1, 3, 4] = lhs[l1, 3, 4] - coeff * lhs[l1, 3, 2];&#xA;&#x9;&#x9;&#x9;lhs[l1, 4, 4] = lhs[l1, 4, 4] - coeff * lhs[l1, 4, 2];&#xA;&#x9;&#x9;&#x9;r[r1, r2, r3, r4, 4] = r[r1, r2, r3, r4, 4] - coeff * r[r1, r2, r3, r4, 2];&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;pivot = 1.00d / lhs[l1, 3, 3];&#xA;&#x9;&#x9;&#x9;lhs[l1, 4, 3] = lhs[l1, 4, 3] * pivot;&#xA;&#x9;&#x9;&#x9;r[r1, r2, r3, r4, 3] = r[r1, r2, r3, r4, 3] * pivot;&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;coeff = lhs[l1, 3, 0];&#xA;&#x9;&#x9;&#x9;lhs[l1, 4, 0] = lhs[l1, 4, 0] - coeff * lhs[l1, 4, 3];&#xA;&#x9;&#x9;&#x9;r[r1, r2, r3, r4, 0] = r[r1, r2, r3, r4, 0] - coeff * r[r1, r2, r3, r4, 3];&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;coeff = lhs[l1, 3, 1];&#xA;&#x9;&#x9;&#x9;lhs[l1, 4, 1] = lhs[l1, 4, 1] - coeff * lhs[l1, 4, 3];&#xA;&#x9;&#x9;&#x9;r[r1, r2, r3, r4, 1] = r[r1, r2, r3, r4, 1] - coeff * r[r1, r2, r3, r4, 3];&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;coeff = lhs[l1, 3, 2];&#xA;&#x9;&#x9;&#x9;lhs[l1, 4, 2] = lhs[l1, 4, 2] - coeff * lhs[l1, 4, 3];&#xA;&#x9;&#x9;&#x9;r[r1, r2, r3, r4, 2] = r[r1, r2, r3, r4, 2] - coeff * r[r1, r2, r3, r4, 3];&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;coeff = lhs[l1, 3, 4];&#xA;&#x9;&#x9;&#x9;lhs[l1, 4, 4] = lhs[l1, 4, 4] - coeff * lhs[l1, 4, 3];&#xA;&#x9;&#x9;&#x9;r[r1, r2, r3, r4, 4] = r[r1, r2, r3, r4, 4] - coeff * r[r1, r2, r3, r4, 3];&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;pivot = 1.00d / lhs[l1, 4, 4];&#xA;&#x9;&#x9;&#x9;r[r1, r2, r3, r4, 4] = r[r1, r2, r3, r4, 4] * pivot;&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;coeff = lhs[l1, 4, 0];&#xA;&#x9;&#x9;&#x9;r[r1, r2, r3, r4, 0] = r[r1, r2, r3, r4, 0] - coeff * r[r1, r2, r3, r4, 4];&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;coeff = lhs[l1, 4, 1];&#xA;&#x9;&#x9;&#x9;r[r1, r2, r3, r4, 1] = r[r1, r2, r3, r4, 1] - coeff * r[r1, r2, r3, r4, 4];&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;coeff = lhs[l1, 4, 2];&#xA;&#x9;&#x9;&#x9;r[r1, r2, r3, r4, 2] = r[r1, r2, r3, r4, 2] - coeff * r[r1, r2, r3, r4, 4];&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;coeff = lhs[l1, 4, 3];&#xA;&#x9;&#x9;&#x9;r[r1, r2, r3, r4, 3] = r[r1, r2, r3, r4, 3] - coeff * r[r1, r2, r3, r4, 4];&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;return 0;&#xA;&#x9;&#x9;} // end activate method &#xA;&#x9;}&#xA;}&#xA;" fileType="library" name="IBinvRhsImpl.cs" srcType="user" uri="impl.bt.solve.BinvRhsImpl/bin/1.0.0.0/IBinvRhsImpl.dll" versionId="1.0.0.0">
          <dependency>bt.problem_size.Instance_BT/bin/1.0.0.0/IInstance_BT.dll</dependency>
          <dependency>common.problem_size.Class/bin/1.0.0.0/IClass.dll</dependency>
          <dependency>bt.solve.BeamWarmingMethod/bin/1.0.0.0/IBeamWarmingMethod.dll</dependency>
          <dependency>%WORKSPACE/impl.bt.solve.BinvRhsImpl/bin/1.0.0.0/BaseIBinvRhsImpl.dll</dependency>
          <dependency>bt.solve.BinvRhs/bin/1.0.0.0/IBinvRhs.dll</dependency>
        </file>
      </sources>
      <visualDescription h="40" w="143" x="84" y="120">
        <color b="255" g="128" r="255"/>
      </visualDescription>
      <parameter iname="IBeamWarmingMethod" order="0" parid="method" uname="method" varid="MTH"/>
    </interface>
    <unit iRef="IBinvRhsImpl" private="false" uRef="binvrhs" visibleInterface="true">
      <super cRef="base" uRef="binvrhs"/>
      <slices cRef="method" replica="0" uRef="method" sliceName="method" transitive="false">
        <visualDescription h="10" w="10" x="32" y="24"/>
      </slices>
      <visualDescription h="40" w="80" x="228" y="302"/>
    </unit>
    <enumerator cardinality="-1" fromSplit="false" ref="hPE.frontend.base.model.HReplicator@129a52a1295029089610" varId="n">
      <originRef>base</originRef>
      <originRef>method</originRef>
      <links xsi:type="component:EnumerableUnitType" ref="binvrhs"/>
      <visualDescription h="20" w="20" x="195" y="327"/>
    </enumerator>
    <enumerator cardinality="-1" fromSplit="false" ref="hPE.frontend.base.model.HReplicator@129a52a1295029089610" varId="n">
      <originRef>method</originRef>
      <originRef>base</originRef>
      <links xsi:type="component:EnumerableEntryType" cRef="method" uRef="method"/>
      <visualDescription h="20" w="20" x="463" y="162"/>
    </enumerator>
  </componentInfo>
</component:component>