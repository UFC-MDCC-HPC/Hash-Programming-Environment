<?xml version="1.0" encoding="ASCII"?>
<component:component xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:component="http://www.example.org/HashComponent">
  <header hash_component_UID="002400000480000094000000060200000024000052534131000400001100000019adf4be323bafb823757d0c1902908c1736902efa77b9c1f8d958fb8786108f33f23e6a2fa62e02b64f1c438e09e94a5c3d5a7c86343d2627e8da6420200e80611b9d6ceb62c2563071cb03ba761ce30dc2896ee68279bfd2386f0f073ae28606ae8349c6b0625e7e08cdbccaf83911dd584b8fb86dd11f5513712fbf2a46a8" isAbstract="false" kind="Computation" name="ADI" packagePath="impl.bt">
    <baseType>
      <extensionType>
        <implements>true</implements>
      </extensionType>
      <component hash_component_UID="00240000048000009400000006020000002400005253413100040000110000008182bdd73f0a92bd01babb318eb96bde0a0942b909fa5a968cb3940a88384a9a8f9f16bfc013ec1549ebd7c12261130ba6797731851e25bb4e55f3c8ded80fd3a95be8be597d6e7b244ebad3186c52a9c5236f8bd72d34f8c8931bf6f2777fb24f5bff65b5737b2364313529c6a342a5095a0d352737f9a26fe21af349fa5398" localRef="base" location="bt.ADI/ADI.hpe" name="ADI" package="bt" version="1.0.0.0">
        <visualDescription h="30" w="50" x="193" y="390">
          <color b="255" g="255" r="255"/>
        </visualDescription>
        <parameter formFieldId="class" varName="C"/>
        <port hash_component_UID="002400000480000094000000060200000024000052534131000400001100000009b97ce4f3981d78e251ff90894751a2f19e3d7fcafeadee8da1cb93890a7d9ed59b4773f575afc0782c61b877ac17cea1ab4429bfd162c1bdff0b6c7fe9d07f8e9ccdcd219b58671c77cf6cfbada633e18309cb4c2e518fedeaa6aecf435a12dc4a18c8384c15d61dfab5a2056f58c2bcf936823b8d84a8c5cc5e25827a1598" localRef="problem_data" location="common.data.ProblemDefinition/ProblemDefinition.hpe" name="ProblemDefinition" package="common.data" exposed="true">
          <visualDescription h="30" w="139" x="173" y="508">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <parameter formFieldId="instance_type" varName="?"/>
          <parameter formFieldId="class" varName="C"/>
          <unitBounds uRef="problem">
            <visualDescription h="10" w="10" x="34" y="45"/>
          </unitBounds>
        </port>
        <port hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000cfe94b8926d4a7de4f70d204303375a68658c9c988f5e0ec7f1f3dce28b75501399411f8002d0637e06b03a2849ef779a22e26ae137759213f595fd13ccb5101bb6f07e7560df0d8b1beadc8dacecefd49c7844d298e78991b98dd4650ec7bf0b26716727a7bc437f39a5ccede87c7db6829de68c511abb9d0b4e3644bcf66ad" localRef="blocks_info" location="common.datapartition.BlocksInfo/BlocksInfo.hpe" name="BlocksInfo" package="common.datapartition" exposed="true">
          <visualDescription h="30" w="84" x="81" y="477">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <unitBounds uRef="blocks">
            <visualDescription h="10" w="10" x="6" y="26"/>
          </unitBounds>
        </port>
        <port hash_component_UID="00240000048000009400000006020000002400005253413100040000110000009b5fdf9e2fd2e1d4c40d5d105e19369c7729126e13c1d35d7124531d9c4fa1a01ecb25564a9fc1e7175d98659a5280d86a339f77d53abc6eff4debf0c86ea2c480a3ffedb149923bba754c2bb0fb6117e2416acad5d23bebfe734b82b120e8ca3451465ce29e2c470da1b915836a5db31d0e17997a541c0f79ea1aed03990587" localRef="x" location="common.topology.Ring/Ring.hpe" name="Ring" package="common.topology" exposed="true">
          <visualDescription h="35" w="48" x="306" y="293">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <unitBounds uRef="cell">
            <visualDescription h="10" w="10" x="63" y="6"/>
          </unitBounds>
        </port>
        <port hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000059fdc60f0095a1142aef66ff82b5e8659158d29c9ae6eedd576a96e33ae1faaddaf78b57c8cab897deeb79b165ed011c3cd25deeeed69da38fc30a1143e39fa67ab658c278a82203de07eafa3dafe7704a84c1fffc42035b92d09563efdfe7b59862d01f598f626efa5cd4eef962fb18970112f8a530495c2a482922a19258b" localRef="mpi" location="environment.MPIDirect/MPIDirect.hpe" name="MPIDirect" package="environment" exposed="true">
          <visualDescription h="30" w="50" x="383" y="485">
            <color b="240" g="32" r="160"/>
          </visualDescription>
          <unitBounds uRef="mpi">
            <visualDescription h="10" w="10" x="5" y="2"/>
          </unitBounds>
        </port>
        <port hash_component_UID="00240000048000009400000006020000002400005253413100040000110000009b5fdf9e2fd2e1d4c40d5d105e19369c7729126e13c1d35d7124531d9c4fa1a01ecb25564a9fc1e7175d98659a5280d86a339f77d53abc6eff4debf0c86ea2c480a3ffedb149923bba754c2bb0fb6117e2416acad5d23bebfe734b82b120e8ca3451465ce29e2c470da1b915836a5db31d0e17997a541c0f79ea1aed03990587" localRef="y" location="common.topology.Ring/Ring.hpe" name="Ring" package="common.topology" exposed="true">
          <visualDescription h="35" w="44" x="403" y="312">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <unitBounds uRef="cell">
            <visualDescription h="10" w="10" x="63" y="6"/>
          </unitBounds>
        </port>
        <port hash_component_UID="00240000048000009400000006020000002400005253413100040000110000009b5fdf9e2fd2e1d4c40d5d105e19369c7729126e13c1d35d7124531d9c4fa1a01ecb25564a9fc1e7175d98659a5280d86a339f77d53abc6eff4debf0c86ea2c480a3ffedb149923bba754c2bb0fb6117e2416acad5d23bebfe734b82b120e8ca3451465ce29e2c470da1b915836a5db31d0e17997a541c0f79ea1aed03990587" localRef="z" location="common.topology.Ring/Ring.hpe" name="Ring" package="common.topology" exposed="true">
          <visualDescription h="36" w="45" x="393" y="359">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <unitBounds uRef="cell">
            <visualDescription h="10" w="10" x="63" y="6"/>
          </unitBounds>
        </port>
        <unitBounds uRef="adi">
          <visualDescription h="10" w="10" x="5" y="2"/>
        </unitBounds>
      </component>
    </baseType>
    <versions field1="1" field2="0" field3="0" field4="0"/>
    <visualAttributes>
      <color b="255" g="255" r="255"/>
    </visualAttributes>
  </header>
  <componentInfo>
    <innerComponent hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000237f437b205f7bfa00c2d0b40167897c37f84c96a62c077e2832a5360fa8c1c7438dfa969d99bb36a48a7baefcbd50d84ae2e3e71a349dce24c2b0bc473997871be48fdb29d0d48b0928ca968440c6b6663c6740810dab7b664db0e0cfbfe5b21f223402d0d9bd601294898724b6a1da46e78261ef1ee37ac63ca9b2dbdc0d90" localRef="class" location="common.problem_size.Class/Class.hpe" name="Class" package="common.problem_size" exposed="false">
      <visualDescription h="30" w="50" x="155" y="160">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds uRef="class">
        <visualDescription h="10" w="10" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <supplyParameter cRef="class" varName="C"/>
    <interface iRef="IADIImpl" nArgs="1">
      <slice isRef="solve">
        <originRef cRef="x_solve" iRef="ISolve"/>
        <visualDescription h="10" w="10" x="80" y="80"/>
      </slice>
      <slice isRef="y_solve">
        <originRef cRef="y_solve" iRef="ISolve"/>
        <visualDescription h="10" w="10" x="142" y="58"/>
      </slice>
      <slice isRef="z_solve">
        <originRef cRef="z_solve" iRef="ISolve"/>
        <visualDescription h="10" w="10" x="148" y="20"/>
      </slice>
      <slice isRef="compute_rhs">
        <originRef cRef="compute_rhs" iRef="IComputeRHS"/>
        <visualDescription h="10" w="10" x="20" y="55"/>
      </slice>
      <slice isRef="add">
        <originRef cRef="add" iRef="IAdd"/>
        <visualDescription h="10" w="10" x="40" y="43"/>
      </slice>
      <slice isRef="copy_faces">
        <originRef cRef="copy_faces" iRef="ICopyFaces"/>
        <visualDescription h="10" w="10" x="5" y="76"/>
      </slice>
      <protocol xsi:type="component:ActionCombinatorParType" label="hPE.frontend.kinds.activate.model.protocol.HParAction@17bdab58" repeat="0">
        <visualDescription h="150" w="370" x="75" y="75"/>
        <action xsi:type="component:ActionActivateType" label="hPE.frontend.kinds.activate.model.protocol.HDoAction@253c2a95" repeat="0" sliceRef="solve">
          <visualDescription h="50" w="50" x="10" y="50"/>
        </action>
        <action xsi:type="component:ActionActivateType" label="hPE.frontend.kinds.activate.model.protocol.HDoAction@110faf4c" repeat="0" sliceRef="solve">
          <visualDescription h="50" w="50" x="70" y="50"/>
        </action>
        <action xsi:type="component:ActionActivateType" label="hPE.frontend.kinds.activate.model.protocol.HDoAction@1cbdaf54" repeat="0" sliceRef="solve">
          <visualDescription h="50" w="50" x="130" y="50"/>
        </action>
        <action xsi:type="component:ActionActivateType" label="hPE.frontend.kinds.activate.model.protocol.HDoAction@6941c289" repeat="0" sliceRef="compute_rhs">
          <visualDescription h="50" w="50" x="190" y="50"/>
        </action>
        <action xsi:type="component:ActionActivateType" label="hPE.frontend.kinds.activate.model.protocol.HDoAction@5c4ae65b" repeat="0" sliceRef="add">
          <visualDescription h="50" w="50" x="250" y="50"/>
        </action>
        <action xsi:type="component:ActionActivateType" label="hPE.frontend.kinds.activate.model.protocol.HDoAction@39598fb3" repeat="0" sliceRef="copy_faces">
          <visualDescription h="50" w="50" x="310" y="50"/>
        </action>
      </protocol>
      <sources sourceType="C# Language" versionId="1.0.0.0">
        <file contents="/* Automatically Generated Code */&#xA;&#xA;using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using common.datapartition.BlocksInfo;&#xA;using common.topology.Ring;&#xA;using common.CopyFaces;&#xA;using bt.problem_size.Instance_BT;&#xA;using common.problem_size.Class;&#xA;using common.ComputeRHS;&#xA;using bt.solve.Solve;&#xA;using common.orientation.Z;&#xA;using bt.solve.BeamWarmingMethod;&#xA;using common.direction.Direction;&#xA;using environment.MPIDirect;&#xA;using common.orientation.X;&#xA;using common.orientation.Y;&#xA;using common.Add;&#xA;using common.data.ProblemDefinition;&#xA;using bt.ADI;&#xA;&#xA;namespace impl.bt.ADI { &#xA;&#xA;public abstract class BaseIADIImpl&lt;C>: Computation, BaseIADI&lt;C>&#xA;where C:IClass&#xA;{&#xA;&#xA;private IBlocks blocks = null;&#xA;&#xA;public IBlocks Blocks {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.blocks == null)&#xA;&#x9;&#x9;&#x9;this.blocks = (IBlocks) Services.getPort(&quot;blocks_info&quot;);&#xA;&#x9;&#x9;return this.blocks;&#xA;&#x9;}&#xA;}&#xA;&#xA;private ICell cell = null;&#xA;&#xA;public ICell Cell {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.cell == null)&#xA;&#x9;&#x9;&#x9;this.cell = (ICell) Services.getPort(&quot;topology&quot;);&#xA;&#x9;&#x9;return this.cell;&#xA;&#x9;}&#xA;}&#xA;&#xA;private ICell x = null;&#xA;&#xA;public ICell X {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.x == null)&#xA;&#x9;&#x9;&#x9;this.x = (ICell) Services.getPort(&quot;x&quot;);&#xA;&#x9;&#x9;return this.x;&#xA;&#x9;}&#xA;}&#xA;&#xA;private ICell z = null;&#xA;&#xA;public ICell Z {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.z == null)&#xA;&#x9;&#x9;&#x9;this.z = (ICell) Services.getPort(&quot;z&quot;);&#xA;&#x9;&#x9;return this.z;&#xA;&#x9;}&#xA;}&#xA;&#xA;private ICell y = null;&#xA;&#xA;public ICell Y {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.y == null)&#xA;&#x9;&#x9;&#x9;this.y = (ICell) Services.getPort(&quot;y&quot;);&#xA;&#x9;&#x9;return this.y;&#xA;&#x9;}&#xA;}&#xA;&#xA;private ICopyFaces&lt;IInstance_BT&lt;C>, C> copy_faces = null;&#xA;&#xA;protected ICopyFaces&lt;IInstance_BT&lt;C>, C> Copy_faces {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.copy_faces == null)&#xA;&#x9;&#x9;&#x9;this.copy_faces = (ICopyFaces&lt;IInstance_BT&lt;C>, C>) Services.getPort(&quot;copy_faces&quot;);&#xA;&#x9;&#x9;return this.copy_faces;&#xA;&#x9;}&#xA;}&#xA;&#xA;private IComputeRHS&lt;IInstance_BT&lt;C>, C> compute_rhs = null;&#xA;&#xA;protected IComputeRHS&lt;IInstance_BT&lt;C>, C> Compute_rhs {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.compute_rhs == null)&#xA;&#x9;&#x9;&#x9;this.compute_rhs = (IComputeRHS&lt;IInstance_BT&lt;C>, C>) Services.getPort(&quot;compute_rhs&quot;);&#xA;&#x9;&#x9;return this.compute_rhs;&#xA;&#x9;}&#xA;}&#xA;&#xA;private ISolve&lt;IInstance_BT&lt;C>, C, IZ, IBeamWarmingMethod> z_solve = null;&#xA;&#xA;protected ISolve&lt;IInstance_BT&lt;C>, C, IZ, IBeamWarmingMethod> Z_solve {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.z_solve == null)&#xA;&#x9;&#x9;&#x9;this.z_solve = (ISolve&lt;IInstance_BT&lt;C>, C, IZ, IBeamWarmingMethod>) Services.getPort(&quot;z_solve&quot;);&#xA;&#x9;&#x9;return this.z_solve;&#xA;&#x9;}&#xA;}&#xA;&#xA;private IMPIDirect mpi = null;&#xA;&#xA;public IMPIDirect Mpi {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.mpi == null)&#xA;&#x9;&#x9;&#x9;this.mpi = (IMPIDirect) Services.getPort(&quot;mpi&quot;);&#xA;&#x9;&#x9;return this.mpi;&#xA;&#x9;}&#xA;}&#xA;&#xA;private ISolve&lt;IInstance_BT&lt;C>, C, IX, IBeamWarmingMethod> x_solve = null;&#xA;&#xA;protected ISolve&lt;IInstance_BT&lt;C>, C, IX, IBeamWarmingMethod> X_solve {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.x_solve == null)&#xA;&#x9;&#x9;&#x9;this.x_solve = (ISolve&lt;IInstance_BT&lt;C>, C, IX, IBeamWarmingMethod>) Services.getPort(&quot;x_solve&quot;);&#xA;&#x9;&#x9;return this.x_solve;&#xA;&#x9;}&#xA;}&#xA;&#xA;private ISolve&lt;IInstance_BT&lt;C>, C, IY, IBeamWarmingMethod> y_solve = null;&#xA;&#xA;protected ISolve&lt;IInstance_BT&lt;C>, C, IY, IBeamWarmingMethod> Y_solve {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.y_solve == null)&#xA;&#x9;&#x9;&#x9;this.y_solve = (ISolve&lt;IInstance_BT&lt;C>, C, IY, IBeamWarmingMethod>) Services.getPort(&quot;y_solve&quot;);&#xA;&#x9;&#x9;return this.y_solve;&#xA;&#x9;}&#xA;}&#xA;&#xA;private IAdd&lt;IInstance_BT&lt;C>, C> add = null;&#xA;&#xA;protected IAdd&lt;IInstance_BT&lt;C>, C> Add {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.add == null)&#xA;&#x9;&#x9;&#x9;this.add = (IAdd&lt;IInstance_BT&lt;C>, C>) Services.getPort(&quot;add&quot;);&#xA;&#x9;&#x9;return this.add;&#xA;&#x9;}&#xA;}&#xA;&#xA;private IProblemDefinition&lt;IInstance_BT&lt;C>, C> problem = null;&#xA;&#xA;public IProblemDefinition&lt;IInstance_BT&lt;C>, C> Problem {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.problem == null)&#xA;&#x9;&#x9;&#x9;this.problem = (IProblemDefinition&lt;IInstance_BT&lt;C>, C>) Services.getPort(&quot;problem_data&quot;);&#xA;&#x9;&#x9;return this.problem;&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;abstract public int go(); &#xA;&#xA;&#xA;}&#xA;&#xA;}&#xA;" fileType="library" name="BaseIADIImpl.cs" srcType="base" uri="impl.bt.ADI/bin/1.0.0.0/BaseIADIImpl.dll" versionId="1.0.0.0">
          <dependency>common.datapartition.BlocksInfo/bin/1.0.0.0/IBlocks.dll</dependency>
          <dependency>common.topology.Ring/bin/1.0.0.0/ICell.dll</dependency>
          <dependency>common.CopyFaces/bin/1.0.0.0/ICopyFaces.dll</dependency>
          <dependency>bt.problem_size.Instance_BT/bin/1.0.0.0/IInstance_BT.dll</dependency>
          <dependency>common.problem_size.Class/bin/1.0.0.0/IClass.dll</dependency>
          <dependency>common.ComputeRHS/bin/1.0.0.0/IComputeRHS.dll</dependency>
          <dependency>bt.solve.Solve/bin/1.0.0.0/ISolve.dll</dependency>
          <dependency>common.orientation.Z/bin/1.0.0.0/IZ.dll</dependency>
          <dependency>bt.solve.BeamWarmingMethod/bin/1.0.0.0/IBeamWarmingMethod.dll</dependency>
          <dependency>common.direction.Direction/bin/1.0.0.0/IDirection.dll</dependency>
          <dependency>environment.MPIDirect/bin/1.0.0.0/IMPIDirect.dll</dependency>
          <dependency>common.orientation.X/bin/1.0.0.0/IX.dll</dependency>
          <dependency>common.orientation.Y/bin/1.0.0.0/IY.dll</dependency>
          <dependency>common.Add/bin/1.0.0.0/IAdd.dll</dependency>
          <dependency>common.data.ProblemDefinition/bin/1.0.0.0/IProblemDefinition.dll</dependency>
          <dependency>bt.ADI/bin/1.0.0.0/BaseIADI.dll</dependency>
        </file>
        <file contents="using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using common.problem_size.Class;&#xA;using bt.ADI;&#xA;&#xA;namespace impl.bt.ADI { &#xA;&#xA;public class IADIImpl&lt;C> : BaseIADIImpl&lt;C>, IADI&lt;C>&#xA;where C:IClass&#xA;{&#xA;&#xA;public override int go() &#xA;{&#xA;&#x9;int no_nodes = Ranks.Length;&#xA;&#x9;if (no_nodes > 1) &#xA;&#x9;{&#xA;&#x9;   Copy_faces.go();&#xA;&#x9;}&#xA;&#x9;Compute_rhs.go();&#xA;&#x9;&#xA;&#x9;X_solve.go();&#xA;&#x9;Y_solve.go();&#xA;&#x9;Z_solve.go();&#xA;&#x9;Add.go();&#xA;&#x9;&#xA;&#x9;return 0;&#xA;} // end activate method &#xA;&#xA;}&#xA;&#xA;}&#xA;" fileType="library" name="IADIImpl.cs" srcType="user" uri="impl.bt.ADI/bin/1.0.0.0/IADIImpl.dll" versionId="1.0.0.0">
          <dependency>common.problem_size.Class/bin/1.0.0.0/IClass.dll</dependency>
          <dependency>%WORKSPACE/impl.bt.ADI/bin/1.0.0.0/BaseIADIImpl.dll</dependency>
          <dependency>bt.ADI/bin/1.0.0.0/IADI.dll</dependency>
        </file>
      </sources>
      <visualDescription h="98" w="174" x="131" y="107">
        <color b="0" g="128" r="128"/>
      </visualDescription>
      <port name="z">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="cell" sRef="solve"/>
        <slice pRef="x" sRef="copy_faces"/>
      </port>
      <port name="mpi">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="mpi" sRef="solve"/>
        <slice pRef="mpi" sRef="y_solve"/>
        <slice pRef="mpi" sRef="z_solve"/>
        <slice pRef="mpi" sRef="copy_faces"/>
      </port>
      <port name="problem">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="problem" sRef="solve"/>
        <slice pRef="problem" sRef="y_solve"/>
        <slice pRef="problem" sRef="z_solve"/>
        <slice pRef="problem" sRef="compute_rhs"/>
        <slice pRef="problem" sRef="add"/>
        <slice pRef="problem" sRef="copy_faces"/>
      </port>
      <port name="blocks">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="blocks" sRef="solve"/>
        <slice pRef="blocks" sRef="y_solve"/>
        <slice pRef="blocks" sRef="z_solve"/>
        <slice pRef="blocks" sRef="compute_rhs"/>
        <slice pRef="blocks" sRef="add"/>
        <slice pRef="blocks" sRef="copy_faces"/>
      </port>
      <port name="y">
        <visualDescription h="10" w="10" x="116" y="78"/>
        <slice pRef="cell" sRef="y_solve"/>
        <slice pRef="y" sRef="copy_faces"/>
      </port>
      <port name="z">
        <visualDescription h="10" w="10" x="139" y="68"/>
        <slice pRef="cell" sRef="z_solve"/>
        <slice pRef="z" sRef="copy_faces"/>
      </port>
      <parameter iname="IClass" order="0" parid="class" uname="class" varid="C"/>
    </interface>
    <unit iRef="IADIImpl" private="false" uRef="adi" visibleInterface="true">
      <super cRef="base" uRef="adi"/>
      <slices cRef="problem_data" replica="0" uRef="problem" sliceName="problem" transitive="true">
        <visualDescription h="10" w="10" x="87" y="7"/>
      </slices>
      <slices cRef="blocks_info" replica="0" uRef="blocks" sliceName="blocks" transitive="true">
        <visualDescription h="10" w="10" x="60" y="7"/>
      </slices>
      <slices cRef="x" replica="0" uRef="cell" sliceName="z" transitive="true">
        <visualDescription h="10" w="10" x="35" y="27"/>
      </slices>
      <slices cRef="mpi" replica="0" uRef="mpi" sliceName="mpi" transitive="true">
        <visualDescription h="10" w="10" x="11" y="22"/>
      </slices>
      <slices cRef="y" replica="0" uRef="cell" sliceName="y" transitive="true">
        <visualDescription h="10" w="10" x="35" y="27"/>
      </slices>
      <slices cRef="z" replica="0" uRef="cell" sliceName="z" transitive="true">
        <visualDescription h="10" w="10" x="35" y="27"/>
      </slices>
      <slices cRef="x_solve" replica="0" uRef="solve" sliceName="solve" transitive="false">
        <visualDescription h="10" w="10" x="69" y="9"/>
        <port>problem</port>
        <port>blocks</port>
        <port>z</port>
        <port>mpi</port>
      </slices>
      <slices cRef="y_solve" replica="0" uRef="solve" sliceName="y_solve" transitive="false">
        <visualDescription h="10" w="10" x="68" y="22"/>
        <port>problem</port>
        <port>blocks</port>
        <port>y</port>
        <port>mpi</port>
      </slices>
      <slices cRef="z_solve" replica="0" uRef="solve" sliceName="z_solve" transitive="false">
        <visualDescription h="10" w="10" x="54" y="25"/>
        <port>problem</port>
        <port>blocks</port>
        <port>z</port>
        <port>mpi</port>
      </slices>
      <slices cRef="compute_rhs" replica="0" uRef="compute_rhs" sliceName="compute_rhs" transitive="false">
        <visualDescription h="10" w="10" x="38" y="27"/>
        <port>blocks</port>
        <port>problem</port>
      </slices>
      <slices cRef="add" replica="0" uRef="add" sliceName="add" transitive="false">
        <visualDescription h="10" w="10" x="60" y="0"/>
        <port>problem</port>
        <port>blocks</port>
      </slices>
      <slices cRef="copy_faces" replica="0" uRef="copy_faces" sliceName="copy_faces" transitive="false">
        <visualDescription h="10" w="10" x="21" y="27"/>
        <port>blocks</port>
        <port>problem</port>
        <port>y</port>
        <port>mpi</port>
        <port>z</port>
        <port>z</port>
      </slices>
      <visualDescription h="40" w="80" x="156" y="257"/>
    </unit>
    <enumerator cardinality="-1" fromSplit="false" ref="hPE.frontend.base.model.HReplicator@1b2533d1295099559883" varId="n">
      <originRef>base</originRef>
      <originRef>z_solve</originRef>
      <originRef>unpack_back_sub_info</originRef>
      <originRef>problem_data</originRef>
      <originRef>qs</originRef>
      <links xsi:type="component:EnumerableUnitType" ref="adi"/>
      <visualDescription h="48" w="47" x="125" y="327"/>
    </enumerator>
  </componentInfo>
</component:component>