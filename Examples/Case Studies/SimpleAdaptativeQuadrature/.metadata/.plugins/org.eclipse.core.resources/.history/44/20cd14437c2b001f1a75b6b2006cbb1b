<?xml version="1.0" encoding="ASCII"?>
<component:component xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:component="http://www.example.org/HashComponent">
  <header hash_component_UID="00240000048000009400000006020000002400005253413100040000110000006d05c82bff26ad72150a252c8c9742c86f6c62e6fe0cb696e223e19c0441a20a249526c60ee5553b2eddc609f73c569a23cfd334b51d25d1bd36d608dc901932e635a71bce017f93a1aabc8a129f65b9a7d3d384b42ae038d9d1006b984abdf11cc686520195bdac3acc399a24871f11885f37168f0ac04580fbce53d438e394" isAbstract="false" kind="Application" name="QuadratureAdaptative" packagePath="skeleton.impl.example">
    <baseType>
      <extensionType>
        <implements>true</implements>
      </extensionType>
      <component hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000af7ec24fd4f6e14cd0e388fec025242e4d2a692d029d0542b6d2d6a3d912354187fb61fd4101e600154cc64959d21d45e6b324763f5e1dcfee01f0c5ce5e0220a30ced00b8758d94098e3df20bdc4d445b9f9e36a159f23fc7103a774f8d924857050681cae0c9d95536bda3bc5e034307af216ed5d4c7417de86991ca55c0a0" localRef="base" location="/skeleton.example.QuadratureAdaptative/QuadratureAdaptative.hpe" name="QuadratureAdaptative" package="skeleton.example" version="1.0.0.0">
        <visualDescription h="66" w="141" x="185" y="217">
          <color b="255" g="255" r="255"/>
        </visualDescription>
        <unitBounds uRef="root">
          <visualDescription h="10" w="10" x="21" y="31"/>
        </unitBounds>
        <unitBounds uRef="peers">
          <visualDescription h="10" w="10" x="106" y="29"/>
        </unitBounds>
      </component>
    </baseType>
    <versions field1="1" field2="0" field3="0" field4="0"/>
    <visualAttributes>
      <color b="255" g="255" r="255"/>
    </visualAttributes>
  </header>
  <componentInfo>
    <interface iRef="IRootImpl" nArgs="0">
      <slice isRef="manager">
        <originRef cRef="base" iRef="IManager"/>
        <visualDescription h="10" w="10" x="57" y="24"/>
      </slice>
      <protocol xsi:type="component:ActionCombinatorParType" label="hPE.frontend.kinds.activate.model.protocol.HParAction@e32e5b" repeat="0">
        <visualDescription h="150" w="70" x="75" y="75"/>
        <action xsi:type="component:ActionActivateType" label="hPE.frontend.kinds.activate.model.protocol.HDoAction@f86f62" repeat="0" sliceRef="manager">
          <visualDescription h="50" w="50" x="10" y="50"/>
        </action>
      </protocol>
      <sources sourceType="C# Executable" versionId="1.0.0.0">
        <file contents="using System;&#xA;using DGAC;&#xA;using hpe.basic;&#xA;using hpe.kinds;&#xA;using data.Function;&#xA;using jefferson.data.Double;&#xA;using environment.MPIDirect;&#xA;using data.IntegralArea;&#xA;using skeleton.Farm;&#xA;using skeleton.Farm.Distribute.AQPartitionInterval;&#xA;using skeleton.Farm.Collect;&#xA;using skeleton.example.QuadratureAdaptative;&#xA;&#xA;namespace skeleton.impl.example.QuadratureAdaptative { &#xA;&#xA;public class IRootImpl: Application, IRoot&#xA;{&#xA;&#xA;private IFunction function = null;&#xA;&#xA;private IFunction Function {&#xA;&#x9;set {&#xA;&#x9;&#x9;this.function = value;&#xA;&#x9;//&#x9;manager.Function = value;&#xA;&#x9;&#x9;data_input.Function = value;&#xA;&#x9;}&#xA;}&#xA;&#xA;private IDouble xsup = null;&#xA;&#xA;private IDouble Xsup {&#xA;&#x9;set {&#xA;&#x9;&#x9;this.xsup = value;&#xA;&#x9;//&#x9;manager.Xsup = value;&#xA;&#x9;&#x9;data_input.Xsup = value;&#xA;&#x9;}&#xA;}&#xA;&#xA;private IDouble xinf = null;&#xA;&#xA;private IDouble Xinf {&#xA;&#x9;set {&#xA;&#x9;&#x9;this.xinf = value;&#xA;&#x9;//&#x9;manager.Xinf = value;&#xA;&#x9;&#x9;data_input.Xinf = value;&#xA;&#x9;}&#xA;}&#xA;&#xA;private IDouble data_output = null;&#xA;&#xA;private IDouble Data_output {&#xA;&#x9;set {&#xA;&#x9;&#x9;this.data_output = value;&#xA;&#x9;&#x9;manager.Data_output = value;&#xA;&#x9;}&#xA;}&#xA;&#xA;private IMPIDirect mpi = null;&#xA;&#xA;private IMPIDirect Mpi {&#xA;&#x9;set {&#xA;&#x9;&#x9;this.mpi = value;&#xA;&#x9;&#x9;manager.Mpi = value;&#xA;&#x9;}&#xA;}&#xA;&#xA;private IIntegralArea data_input = null;&#xA;&#xA;private IIntegralArea Data_input {&#xA;&#x9;set {&#xA;&#x9;&#x9;this.data_input = value;&#xA;&#x9;&#x9;manager.Data_input = value;&#xA;&#x9;}&#xA;}&#xA;&#xA;private IManager&lt;IIntegralArea, IPartionIntervalDistribute&lt;IIntegralArea>, IDouble, ICollect&lt;IDouble>> manager = null;&#xA;&#xA;private IManager&lt;IIntegralArea, IPartionIntervalDistribute&lt;IIntegralArea>, IDouble, ICollect&lt;IDouble>> Manager {&#xA;&#x9;set {&#xA;&#x9;&#x9;this.manager = value;&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;public IRootImpl() { &#xA;&#xA;} &#xA;&#xA;public static string UID = &quot;00240000048000009400000006020000002400005253413100040000110000006d05c82bff26ad72150a252c8c9742c86f6c62e6fe0cb696e223e19c0441a20a249526c60ee5553b2eddc609f73c569a23cfd334b51d25d1bd36d608dc901932e635a71bce017f93a1aabc8a129f65b9a7d3d384b42ae038d9d1006b984abdf11cc686520195bdac3acc399a24871f11885f37168f0ac04580fbce53d438e394&quot;;&#xA;&#xA;override public void createSlices() {&#xA;&#x9;base.createSlices();&#xA;&#x9;this.Manager = (IManager&lt;IIntegralArea, IPartionIntervalDistribute&lt;IIntegralArea>, IDouble, ICollect&lt;IDouble>>) BackEnd.createSlice(this, UID,&quot;base&quot;,&quot;manager&quot;,new Type[] {typeof(IIntegralArea),typeof(IPartionIntervalDistribute&lt;IIntegralArea>),typeof( IDouble),typeof(ICollect&lt;IDouble>)});&#xA;&#x9;this.Data_input = (IIntegralArea) BackEnd.createSlice(this, UID,&quot;data_source&quot;,&quot;integralarea&quot;,new Type[] {});&#xA;&#x9;this.Mpi = (IMPIDirect) BackEnd.createSlice(this, UID,&quot;mpi&quot;,&quot;mpi&quot;,new Type[] {});&#xA;//&#x9;this.Data_output = (IDouble) BackEnd.createSlice(this, UID,&quot;data_target&quot;,&quot;data&quot;,new Type[] {});&#xA;&#x9;this.Data_output = (IDouble) BackEnd.createSlice(this, UID,&quot;data_target&quot;,&quot;double&quot;,new Type[] {});&#xA;&#x9;this.Xinf = (IDouble) BackEnd.createSlice(this, UID,&quot;xinf&quot;,&quot;double&quot;,new Type[] {});&#xA;&#x9;this.Xsup = (IDouble) BackEnd.createSlice(this, UID,&quot;xsup&quot;,&quot;double&quot;,new Type[] {});&#xA;&#x9;this.Function = (IFunction) BackEnd.createSlice(this, UID,&quot;function&quot;,&quot;function&quot;,new Type[] {});&#xA;} &#xA;&#xA;private double f(double x) {&#xA;   return 2*x + 1;&#xA;}&#xA;&#xA;public void compute() { &#xA;&#xA;        Console.WriteLine(&quot;BEGIN MANAGER COMPUTE !!!&quot;);&#xA;&#xA;        this.xinf.Value = 0;&#xA;        this.xsup.Value = 1;&#xA;        this.function.function = f;&#xA;&#xA;&#xA;&#x9;&#x9;manager.compute();&#xA;&#xA;        Console.WriteLine(&quot;END MANAGER COMPUTE !!!&quot;);&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;System.Console.Write(&quot;FINISH ADAPTATIVE QUADRATURE: &quot; + this.data_output.Value);&#xA;&#xA;} // end activate method &#xA;&#xA;}&#xA;&#xA;}&#xA;" fileType="library" name="IRootImpl.cs" uri="/skeleton.impl.example.QuadratureAdaptative/bin/1.0.0.0/IRootImpl.dll" versionId="1.0.0.0">
          <dependency>data.Function/bin/1.0.0.0/IFunction.dll</dependency>
          <dependency>jefferson.data.Double/bin/1.0.0.0/IDouble.dll</dependency>
          <dependency>environment.MPIDirect/bin/1.0.0.0/IMPIDirect.dll</dependency>
          <dependency>data.IntegralArea/bin/1.0.0.0/IIntegralArea.dll</dependency>
          <dependency>skeleton.Farm/bin/1.0.0.0/IManager.dll</dependency>
          <dependency>skeleton.Farm.Distribute.AQPartitionInterval/bin/1.0.0.0/IPartionIntervalDistribute.dll</dependency>
          <dependency>skeleton.Farm.Collect/bin/1.0.0.0/ICollect.dll</dependency>
          <dependency>skeleton.example.QuadratureAdaptative/bin/1.0.0.0/IRoot.dll</dependency>
        </file>
        <file contents="using DGAC;&#xA;using skeleton.example.QuadratureAdaptative;&#xA;&#xA;namespace skeleton.impl.example.QuadratureAdaptative { &#xA;&#xA;&#x9;public class IRootImplMain {&#xA;&#xA;&#x9;&#x9;static void Main(string [] args) {&#xA;&#xA;&#x9;&#x9;&#x9;IRootImpl root = new IRootImpl();&#xA;&#xA;&#x9;&#x9;&#x9;BackEnd.DGACInit(&quot;00240000048000009400000006020000002400005253413100040000110000006d05c82bff26ad72150a252c8c9742c86f6c62e6fe0cb696e223e19c0441a20a249526c60ee5553b2eddc609f73c569a23cfd334b51d25d1bd36d608dc901932e635a71bce017f93a1aabc8a129f65b9a7d3d384b42ae038d9d1006b984abdf11cc686520195bdac3acc399a24871f11885f37168f0ac04580fbce53d438e394&quot;,&quot;root&quot;,root,args);&#xA;&#x9;&#x9;&#x9;root.createSlices();&#xA;&#x9;&#x9;&#x9;root.compute();&#xA;&#x9;&#x9;&#x9;BackEnd.DGACFinalize();&#xA;&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;}&#xA;&#xA;}&#xA;" fileType="exe" name="IRootImplMain.cs" uri="/skeleton.impl.example.QuadratureAdaptative/bin/1.0.0.0/IRootImplMain.exe" versionId="1.0.0.0">
          <dependency>skeleton.example.QuadratureAdaptative/bin/1.0.0.0/IRoot.dll</dependency>
          <dependency>C:\Users\Heron\Documents\My Dropbox\Alunos\Esqueletos FELIPE e RAFAEL\workspace_skeletons\skeleton.impl.example.QuadratureAdaptative\bin\1.0.0.0\IRootImpl.dll</dependency>
        </file>
      </sources>
      <visualDescription h="40" w="80" x="106" y="75">
        <color b="128" g="128" r="128"/>
      </visualDescription>
      <port name="mpi">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="mpi" sRef="manager"/>
      </port>
      <port name="data_output">
        <visualDescription h="10" w="10" x="10" y="16"/>
        <slice pRef="data_output" sRef="manager"/>
      </port>
      <port name="data_input">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="data_input" sRef="manager"/>
      </port>
      <port name="xinf">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="xinf" sRef="manager"/>
      </port>
      <port name="function">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="function" sRef="manager"/>
      </port>
      <port name="xsup">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="xsup" sRef="manager"/>
      </port>
    </interface>
    <interface iRef="IPeerImpl" nArgs="0">
      <slice isRef="worker">
        <originRef cRef="base" iRef="IWorker"/>
        <visualDescription h="10" w="10" x="7" y="13"/>
      </slice>
      <protocol xsi:type="component:ActionCombinatorParType" label="hPE.frontend.kinds.activate.model.protocol.HParAction@5f4d72" repeat="0">
        <visualDescription h="150" w="70" x="75" y="75"/>
        <action xsi:type="component:ActionActivateType" label="hPE.frontend.kinds.activate.model.protocol.HDoAction@d5b728" repeat="0" sliceRef="worker">
          <visualDescription h="50" w="50" x="10" y="50"/>
        </action>
      </protocol>
      <sources sourceType="C# Executable" versionId="1.0.0.0">
        <file contents="using System;&#xA;using DGAC;&#xA;using hpe.basic;&#xA;using hpe.kinds;&#xA;using environment.MPIDirect;&#xA;using skeleton.Farm;&#xA;using jefferson.data.Double;&#xA;using skeleton.Farm.Collect;&#xA;using data.Trapezium;&#xA;using skeleton.Farm.Distribute.AQPartitionInterval;&#xA;using skeleton.Farm.Job.TrapeziumArea;&#xA;using skeleton.example.QuadratureAdaptative;&#xA;&#xA;namespace skeleton.impl.example.QuadratureAdaptative { &#xA;&#xA;public class IPeerImpl: Application, IPeer&#xA;{&#xA;&#xA;private IMPIDirect mpi = null;&#xA;&#xA;private IMPIDirect Mpi {&#xA;&#x9;set {&#xA;&#x9;&#x9;this.mpi = value;&#xA;&#x9;&#x9;worker.Mpi = value;&#xA;&#x9;}&#xA;}&#xA;&#xA;private IWorker&lt;IDouble, ISend&lt;IDouble>, ITrapezium, IPartitionIntervalReceive&lt;ITrapezium>, ITrapeziumArea&lt;ITrapezium, IDouble>> worker = null;&#xA;&#xA;private IWorker&lt;IDouble, ISend&lt;IDouble>, ITrapezium, IPartitionIntervalReceive&lt;ITrapezium>, ITrapeziumArea&lt;ITrapezium, IDouble>> Worker {&#xA;&#x9;set {&#xA;&#x9;&#x9;this.worker = value;&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;public IPeerImpl() { &#xA;&#xA;} &#xA;&#xA;public static string UID = &quot;00240000048000009400000006020000002400005253413100040000110000006d05c82bff26ad72150a252c8c9742c86f6c62e6fe0cb696e223e19c0441a20a249526c60ee5553b2eddc609f73c569a23cfd334b51d25d1bd36d608dc901932e635a71bce017f93a1aabc8a129f65b9a7d3d384b42ae038d9d1006b984abdf11cc686520195bdac3acc399a24871f11885f37168f0ac04580fbce53d438e394&quot;;&#xA;&#xA;override public void createSlices() {&#xA;&#x9;base.createSlices();&#xA;&#x9;this.Worker = (IWorker&lt;IDouble, ISend&lt;IDouble>, ITrapezium, IPartitionIntervalReceive&lt;ITrapezium>, ITrapeziumArea&lt;ITrapezium, IDouble>>) BackEnd.createSlice(this, UID,&quot;base&quot;,&quot;worker&quot;,new Type[] {typeof(IDouble),typeof(ISend&lt;IDouble>),typeof(ITrapezium),typeof(IPartitionIntervalReceive&lt;ITrapezium>),typeof(ITrapeziumArea&lt;ITrapezium, IDouble>)});&#xA;&#x9;this.Mpi = (IMPIDirect) BackEnd.createSlice(this, UID,&quot;mpi&quot;,&quot;mpi&quot;,new Type[] {});&#xA;} &#xA;&#xA;public void compute() { &#xA;&#xA;        Console.WriteLine(&quot;BEGIN WORKER COMPUTE !!!&quot;);&#xA;&#x9;&#x9;worker.compute();&#xA;        Console.WriteLine(&quot;END WORKER COMPUTE !!!&quot;);&#xA;&#xA;} // end activate method &#xA;&#xA;}&#xA;&#xA;}&#xA;" fileType="library" name="IPeerImpl.cs" uri="/skeleton.impl.example.QuadratureAdaptative/bin/1.0.0.0/IPeerImpl.dll" versionId="1.0.0.0">
          <dependency>environment.MPIDirect/bin/1.0.0.0/IMPIDirect.dll</dependency>
          <dependency>skeleton.Farm/bin/1.0.0.0/IWorker.dll</dependency>
          <dependency>jefferson.data.Double/bin/1.0.0.0/IDouble.dll</dependency>
          <dependency>skeleton.Farm.Collect/bin/1.0.0.0/ISend.dll</dependency>
          <dependency>data.Trapezium/bin/1.0.0.0/ITrapezium.dll</dependency>
          <dependency>skeleton.Farm.Distribute.AQPartitionInterval/bin/1.0.0.0/IPartitionIntervalReceive.dll</dependency>
          <dependency>skeleton.Farm.Job.TrapeziumArea/bin/1.0.0.0/ITrapeziumArea.dll</dependency>
          <dependency>skeleton.example.QuadratureAdaptative/bin/1.0.0.0/IPeer.dll</dependency>
        </file>
        <file contents="using DGAC;&#xA;using skeleton.example.QuadratureAdaptative;&#xA;&#xA;namespace skeleton.impl.example.QuadratureAdaptative { &#xA;&#xA;&#x9;public class IPeerImplMain {&#xA;&#xA;&#x9;&#x9;static void Main(string [] args) {&#xA;&#xA;&#x9;&#x9;&#x9;IPeerImpl peers = new IPeerImpl();&#xA;&#xA;&#x9;&#x9;&#x9;BackEnd.DGACInit(&quot;00240000048000009400000006020000002400005253413100040000110000006d05c82bff26ad72150a252c8c9742c86f6c62e6fe0cb696e223e19c0441a20a249526c60ee5553b2eddc609f73c569a23cfd334b51d25d1bd36d608dc901932e635a71bce017f93a1aabc8a129f65b9a7d3d384b42ae038d9d1006b984abdf11cc686520195bdac3acc399a24871f11885f37168f0ac04580fbce53d438e394&quot;,&quot;peers&quot;,peers,args);&#xA;&#x9;&#x9;&#x9;peers.createSlices();&#xA;&#x9;&#x9;&#x9;peers.compute();&#xA;&#x9;&#x9;&#x9;BackEnd.DGACFinalize();&#xA;&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;}&#xA;&#xA;}&#xA;" fileType="exe" name="IPeerImplMain.cs" uri="/skeleton.impl.example.QuadratureAdaptative/bin/1.0.0.0/IPeerImplMain.exe" versionId="1.0.0.0">
          <dependency>skeleton.example.QuadratureAdaptative/bin/1.0.0.0/IPeer.dll</dependency>
          <dependency>C:\Users\Heron\Documents\My Dropbox\Alunos\Esqueletos FELIPE e RAFAEL\workspace_skeletons\skeleton.impl.example.QuadratureAdaptative\bin\1.0.0.0\IPeerImpl.dll</dependency>
        </file>
      </sources>
      <visualDescription h="40" w="80" x="437" y="263">
        <color b="128" g="128" r="128"/>
      </visualDescription>
      <port name="mpi">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="mpi" sRef="worker"/>
      </port>
    </interface>
    <unit iRef="IRootImpl" private="false" uRef="root" visibleInterface="true">
      <super cRef="base" uRef="root"/>
      <slices cRef="base" replica="0" uRef="manager" sliceName="manager" transitive="false">
        <visualDescription h="10" w="10" x="67" y="18"/>
      </slices>
      <visualDescription h="40" w="80" x="79" y="311"/>
    </unit>
    <unit iRef="IPeerImpl" private="false" uRef="peers" visibleInterface="true">
      <super cRef="base" uRef="peers"/>
      <slices cRef="base" replica="0" uRef="worker" sliceName="worker" transitive="false">
        <visualDescription h="10" w="10" x="14" y="8"/>
      </slices>
      <visualDescription h="40" w="80" x="405" y="338"/>
    </unit>
    <enumerator cardinality="-1" fromSplit="false" ref="hPE.frontend.base.model.HReplicator@1c777361255142002310" varId="N">
      <originRef>base</originRef>
      <originRef>base</originRef>
      <originRef>gather</originRef>
      <originRef>mpi</originRef>
      <visualDescription h="20" w="20" x="429" y="54"/>
    </enumerator>
    <enumerator cardinality="1" fromSplit="true" ref="hPE.frontend.base.model.HReplicator@164d36e1257018321109" varId="N2">
      <originRef>base</originRef>
      <originRef>base</originRef>
      <originRef>gather</originRef>
      <links xsi:type="component:EnumerableUnitType" ref="root"/>
      <visualDescription h="10" w="10" x="246" y="157"/>
    </enumerator>
    <enumerator cardinality="1" fromSplit="true" ref="hPE.frontend.base.model.HReplicator@16f756e1257018157359" varId="N1">
      <originRef>base</originRef>
      <originRef>base</originRef>
      <originRef>scatter</originRef>
      <links xsi:type="component:EnumerableUnitType" ref="root"/>
      <visualDescription h="10" w="10" x="231" y="137"/>
    </enumerator>
    <enumerator cardinality="-1" fromSplit="true" ref="hPE.frontend.base.model.HReplicator@a123fb1257018157359" varId="I">
      <originRef>base</originRef>
      <originRef>base</originRef>
      <originRef>scatter</originRef>
      <links xsi:type="component:EnumerableUnitType" ref="peers"/>
      <visualDescription h="20" w="20" x="344" y="122"/>
    </enumerator>
  </componentInfo>
</component:component>